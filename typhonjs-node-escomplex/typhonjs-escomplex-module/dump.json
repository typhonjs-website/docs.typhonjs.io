[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/ESComplexModule.js",
    "memberof": null,
    "longname": "src/ESComplexModule.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ASTWalker  from 'typhonjs-ast-walker/src/ASTWalker';\n\nimport Plugins    from './Plugins';\n\n/**\n * Provides a runtime to invoke ESComplexModule plugins for processing / metrics calculations of independent modules.\n */\nexport default class ESComplexModule\n{\n   /**\n    * Initializes ESComplexModule.\n    *\n    * @param {object}   options - module options including user plugins to load including:\n    * ```\n    * (boolean)         loadDefaultPlugins - When false ESComplexModule will not load any default plugins.\n    * (Array<Object>)   plugins - A list of ESComplexModule plugins that have already been instantiated.\n    * ```\n    */\n   constructor(options = {})\n   {\n      /* istanbul ignore if */\n      if (typeof options !== 'object') { throw new TypeError('ctor error: `options` is not an `object`.'); }\n\n      /**\n       * Provides dispatch methods to all module plugins.\n       * @type {Plugins}\n       * @private\n       */\n      this._plugins = new Plugins(options);\n   }\n\n   /**\n    * Processes the given ast and calculates metrics via plugins.\n    *\n    * @param {object|Array}   ast - Javascript AST.\n    * @param {object}         options - (Optional) module analyze options.\n    *\n    * @returns {ModuleReport} - A single module report.\n    */\n   analyze(ast, options = {})\n   {\n      if (typeof ast !== 'object' || Array.isArray(ast))\n      {\n         throw new TypeError('analyze error: `ast` is not an `object` or `array`.');\n      }\n\n      /* istanbul ignore if */\n      if (typeof options !== 'object') { throw new TypeError('analyze error: `options` is not an `object`.'); }\n\n      const settings = this._plugins.onConfigure(options);\n\n      const syntaxes = this._plugins.onLoadSyntax(settings);\n\n      const report = this._plugins.onModuleStart(ast, syntaxes, settings);\n\n      // Completely traverse the provided AST and defer to plugins to process node traversal.\n      new ASTWalker().traverse(ast,\n      {\n         enterNode: (node, parent) => { return this._plugins.onEnterNode(report, node, parent); },\n         exitNode: (node, parent) => { return this._plugins.onExitNode(report, node, parent); }\n      });\n\n      this._plugins.onModuleEnd(report);\n\n      return report.finalize();\n   }\n\n   // Asynchronous Promise based methods ----------------------------------------------------------------------------\n\n   /**\n    * Wraps in a Promise processing the given ast and calculates metrics via plugins.\n    *\n    * @param {object|Array}   ast - Javascript AST.\n    * @param {object}         options - (Optional) module analyze options.\n    *\n    * @returns {Promise<ModuleReport>} - A single module report.\n    */\n   analyzeAsync(ast, options = {})\n   {\n      return new Promise((resolve, reject) =>\n      {\n         try { resolve(this.analyze(ast, options)); }\n         catch (err) { /* istanbul ignore next */ reject(err); }\n      });\n   }\n}\n",
    "___id": "T000002R000002",
    "___s": true
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ESComplexModule",
    "memberof": "src/ESComplexModule.js",
    "longname": "src/ESComplexModule.js~ESComplexModule",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-module/src/ESComplexModule.js",
    "importStyle": "ESComplexModule",
    "description": "Provides a runtime to invoke ESComplexModule plugins for processing / metrics calculations of independent modules.",
    "lineNumber": 8,
    "interface": false,
    "___id": "T000002R000003",
    "___s": true
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/ESComplexModule.js~ESComplexModule",
    "longname": "src/ESComplexModule.js~ESComplexModule#constructor",
    "access": null,
    "description": "Initializes ESComplexModule.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>module options including user plugins to load including:</p>\n<pre><code><code class=\"source-code prettyprint\">(boolean)         loadDefaultPlugins - When false ESComplexModule will not load any default plugins.\n(Array&lt;Object&gt;)   plugins - A list of ESComplexModule plugins that have already been instantiated.</code>\n</code></pre>",
        "descriptionRaw": "module options including user plugins to load including:\n```\n(boolean)         loadDefaultPlugins - When false ESComplexModule will not load any default plugins.\n(Array<Object>)   plugins - A list of ESComplexModule plugins that have already been instantiated.\n```"
      }
    ],
    "generator": false,
    "___id": "T000002R000004",
    "___s": true
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_plugins",
    "memberof": "src/ESComplexModule.js~ESComplexModule",
    "longname": "src/ESComplexModule.js~ESComplexModule#_plugins",
    "access": "private",
    "description": "<p>Provides dispatch methods to all module plugins.</p>\n",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Plugins"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000005",
    "___s": true,
    "descriptionRaw": "Provides dispatch methods to all module plugins."
  },
  {
    "__docId__": 4,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "analyze",
    "memberof": "src/ESComplexModule.js~ESComplexModule",
    "longname": "src/ESComplexModule.js~ESComplexModule#analyze",
    "access": null,
    "description": "Processes the given ast and calculates metrics via plugins.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ModuleReport} - A single module report."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "<p>Javascript AST.</p>\n",
        "descriptionRaw": "Javascript AST."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) module analyze options.</p>\n",
        "descriptionRaw": "(Optional) module analyze options."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ModuleReport"
      ],
      "spread": false,
      "description": "<p>A single module report.</p>\n",
      "descriptionRaw": "A single module report."
    },
    "generator": false,
    "___id": "T000002R000006",
    "___s": true
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "analyzeAsync",
    "memberof": "src/ESComplexModule.js~ESComplexModule",
    "longname": "src/ESComplexModule.js~ESComplexModule#analyzeAsync",
    "access": null,
    "description": "Wraps in a Promise processing the given ast and calculates metrics via plugins.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<ModuleReport>} - A single module report."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "<p>Javascript AST.</p>\n",
        "descriptionRaw": "Javascript AST."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) module analyze options.</p>\n",
        "descriptionRaw": "(Optional) module analyze options."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<ModuleReport>"
      ],
      "spread": false,
      "description": "<p>A single module report.</p>\n",
      "descriptionRaw": "A single module report."
    },
    "generator": false,
    "___id": "T000002R000007",
    "___s": true
  },
  {
    "__docId__": 6,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/Plugins.js",
    "memberof": null,
    "longname": "src/Plugins.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PluginMetricsModule from 'escomplex-plugin-metrics-module/src/PluginMetricsModule';\nimport PluginSyntaxBabylon from 'escomplex-plugin-syntax-babylon/src/PluginSyntaxBabylon';\n\nimport ModuleReport        from 'typhonjs-escomplex-commons/src/module/report/ModuleReport';\n\nimport PluginManager       from 'typhonjs-plugin-manager/src/PluginManager';\n\n/**\n * Provides a wrapper around PluginManager for ESComplexModule. Several convenience methods for the plugin callbacks\n * properly manage and or create initial data that are processed by the plugins.\n *\n * The default plugins loaded include:\n * @see https://www.npmjs.com/package/escomplex-plugin-metrics-module\n * @see https://www.npmjs.com/package/escomplex-plugin-syntax-babylon\n */\nexport default class Plugins\n{\n   /**\n    * Initializes Plugins.\n    *\n    * @param {object}   options - module options including user plugins to load including:\n    * ```\n    * (boolean)         loadDefaultPlugins - When false ESComplexModule will not load any default plugins.\n    * (Array<Object>)   plugins - A list of ESComplexModule plugins that have already been instantiated.\n    * ```\n    */\n   constructor(options = {})\n   {\n      /**\n       * Provides a generic plugin manager for dispatching events to module plugins.\n       * @type {PluginManager}\n       * @private\n       */\n      this._pluginManager = new PluginManager();\n\n      if (typeof options.loadDefaultPlugins === 'boolean' && !options.loadDefaultPlugins) { /* nop */ }\n      else\n      {\n         this._pluginManager.addPlugin(new PluginSyntaxBabylon());\n         this._pluginManager.addPlugin(new PluginMetricsModule());\n      }\n   }\n\n   /**\n    * Initializes the default `settings` object hash and then invokes the `onConfigure` plugin callback for all loaded\n    * plugins.\n    *\n    * @param {object}   options - (Optional) module processing options.\n    *\n    * @returns {object}\n    */\n   onConfigure(options)\n   {\n      const settings = {};\n      const event = this._pluginManager.invoke('onConfigure', { options, settings }, true);\n      return event !== null ? event.data.settings : settings;\n   }\n\n   /**\n    * Invokes the `onEnterNode` plugin callback during AST traversal when a node is entered.\n    *\n    * @param {ModuleReport}   report - The ModuleReport being processed.\n    * @param {object}         node - The node being entered.\n    * @param {object}         parent - The parent node of the node being entered.\n    *\n    * @returns {Array<string>|null} - A directive indicating children keys to be skipped or if null all keys entirely.\n    */\n   onEnterNode(report, node, parent)\n   {\n      const event = this._pluginManager.invoke('onEnterNode', { report, node, parent }, false);\n      return event !== null ? event.data.ignoreKeys : [];\n   }\n\n   /**\n    * Invokes the `onExitNode` plugin callback during AST traversal when a node is exited.\n    *\n    * @param {ModuleReport}   report - The ModuleReport being processed.\n    * @param {object}         node - The node being entered.\n    * @param {object}         parent - The parent node of the node being entered.\n    */\n   onExitNode(report, node, parent)\n   {\n      this._pluginManager.invoke('onExitNode', { report, node, parent }, false);\n   }\n\n   /**\n    * Initializes the trait `syntaxes` object hash and then invokes the `onLoadSyntax` plugin callback for all loaded\n    * plugins.\n    *\n    * @param {object}   settings - Settings for module processing.\n    *\n    * @returns {object} - Loaded trait `syntaxes` for AST nodes.\n    */\n   onLoadSyntax(settings)\n   {\n      const syntaxes = {};\n      const event = this._pluginManager.invoke('onLoadSyntax', { settings, syntaxes }, true);\n      return event !== null ? event.data.syntaxes : syntaxes;\n   }\n\n   /**\n    * Initializes the default `report` object hash and then invokes the `onModuleStart` plugin callback for all loaded\n    * plugins.\n    *\n    * @param {object}   ast - Settings for module processing.\n    * @param {object}   syntaxes - All loaded trait syntaxes for AST nodes.\n    * @param {object}   settings - Settings for module processing.\n    *\n    * @returns {ModuleReport} - The ModuleReport being processed.\n    */\n   onModuleStart(ast, syntaxes, settings)\n   {\n      const report = new ModuleReport(ast.loc.start.line, ast.loc.end.line, settings);\n      this._pluginManager.invoke('onModuleStart', { ast, report, syntaxes, settings }, false);\n      return report;\n   }\n\n   /**\n    * Invokes the `onModuleEnd` plugin callback for all loaded plugins such they might finish calculating results.\n    *\n    * @param {ModuleReport}   report - The ModuleReport being processed.\n    *\n    * @returns {ModuleReport} - The ModuleReport being processed.\n    */\n   onModuleEnd(report)\n   {\n      this._pluginManager.invoke('onModuleEnd', { report }, false);\n      return report;\n   }\n}\n",
    "___id": "T000002R000008",
    "___s": true
  },
  {
    "__docId__": 7,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Plugins",
    "memberof": "src/Plugins.js",
    "longname": "src/Plugins.js~Plugins",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-module/src/Plugins.js",
    "importStyle": "Plugins",
    "description": "Provides a wrapper around PluginManager for ESComplexModule. Several convenience methods for the plugin callbacks\nproperly manage and or create initial data that are processed by the plugins.\n\nThe default plugins loaded include:",
    "see": [
      "<a href=\"https://www.npmjs.com/package/escomplex-plugin-metrics-module\">https://www.npmjs.com/package/escomplex-plugin-metrics-module</a>",
      "<a href=\"https://www.npmjs.com/package/escomplex-plugin-syntax-babylon\">https://www.npmjs.com/package/escomplex-plugin-syntax-babylon</a>"
    ],
    "lineNumber": 16,
    "interface": false,
    "___id": "T000002R000009",
    "___s": true
  },
  {
    "__docId__": 8,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#constructor",
    "access": null,
    "description": "Initializes Plugins.",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>module options including user plugins to load including:</p>\n<pre><code><code class=\"source-code prettyprint\">(boolean)         loadDefaultPlugins - When false ESComplexModule will not load any default plugins.\n(Array&lt;Object&gt;)   plugins - A list of ESComplexModule plugins that have already been instantiated.</code>\n</code></pre>",
        "descriptionRaw": "module options including user plugins to load including:\n```\n(boolean)         loadDefaultPlugins - When false ESComplexModule will not load any default plugins.\n(Array<Object>)   plugins - A list of ESComplexModule plugins that have already been instantiated.\n```"
      }
    ],
    "generator": false,
    "___id": "T000002R000010",
    "___s": true
  },
  {
    "__docId__": 9,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pluginManager",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#_pluginManager",
    "access": "private",
    "description": "<p>Provides a generic plugin manager for dispatching events to module plugins.</p>\n",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "PluginManager"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000011",
    "___s": true,
    "descriptionRaw": "Provides a generic plugin manager for dispatching events to module plugins."
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onConfigure",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#onConfigure",
    "access": null,
    "description": "Initializes the default `settings` object hash and then invokes the `onConfigure` plugin callback for all loaded\nplugins.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) module processing options.</p>\n",
        "descriptionRaw": "(Optional) module processing options."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000012",
    "___s": true
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onEnterNode",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#onEnterNode",
    "access": null,
    "description": "Invokes the `onEnterNode` plugin callback during AST traversal when a node is entered.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<string>|null} - A directive indicating children keys to be skipped or if null all keys entirely."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>The ModuleReport being processed.</p>\n",
        "descriptionRaw": "The ModuleReport being processed."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "<p>The node being entered.</p>\n",
        "descriptionRaw": "The node being entered."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "<p>The parent node of the node being entered.</p>\n",
        "descriptionRaw": "The parent node of the node being entered."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>",
        "null"
      ],
      "spread": false,
      "description": "<p>A directive indicating children keys to be skipped or if null all keys entirely.</p>\n",
      "descriptionRaw": "A directive indicating children keys to be skipped or if null all keys entirely."
    },
    "generator": false,
    "___id": "T000002R000013",
    "___s": true
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onExitNode",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#onExitNode",
    "access": null,
    "description": "Invokes the `onExitNode` plugin callback during AST traversal when a node is exited.",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>The ModuleReport being processed.</p>\n",
        "descriptionRaw": "The ModuleReport being processed."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "<p>The node being entered.</p>\n",
        "descriptionRaw": "The node being entered."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "<p>The parent node of the node being entered.</p>\n",
        "descriptionRaw": "The parent node of the node being entered."
      }
    ],
    "generator": false,
    "___id": "T000002R000014",
    "___s": true
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onLoadSyntax",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#onLoadSyntax",
    "access": null,
    "description": "Initializes the trait `syntaxes` object hash and then invokes the `onLoadSyntax` plugin callback for all loaded\nplugins.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} - Loaded trait `syntaxes` for AST nodes."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "<p>Settings for module processing.</p>\n",
        "descriptionRaw": "Settings for module processing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "<p>Loaded trait <code>syntaxes</code> for AST nodes.</p>\n",
      "descriptionRaw": "Loaded trait `syntaxes` for AST nodes."
    },
    "generator": false,
    "___id": "T000002R000015",
    "___s": true
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onModuleStart",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#onModuleStart",
    "access": null,
    "description": "Initializes the default `report` object hash and then invokes the `onModuleStart` plugin callback for all loaded\nplugins.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ModuleReport} - The ModuleReport being processed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ast",
        "description": "<p>Settings for module processing.</p>\n",
        "descriptionRaw": "Settings for module processing."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "syntaxes",
        "description": "<p>All loaded trait syntaxes for AST nodes.</p>\n",
        "descriptionRaw": "All loaded trait syntaxes for AST nodes."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "<p>Settings for module processing.</p>\n",
        "descriptionRaw": "Settings for module processing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ModuleReport"
      ],
      "spread": false,
      "description": "<p>The ModuleReport being processed.</p>\n",
      "descriptionRaw": "The ModuleReport being processed."
    },
    "generator": false,
    "___id": "T000002R000016",
    "___s": true
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onModuleEnd",
    "memberof": "src/Plugins.js~Plugins",
    "longname": "src/Plugins.js~Plugins#onModuleEnd",
    "access": null,
    "description": "Invokes the `onModuleEnd` plugin callback for all loaded plugins such they might finish calculating results.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ModuleReport} - The ModuleReport being processed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>The ModuleReport being processed.</p>\n",
        "descriptionRaw": "The ModuleReport being processed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ModuleReport"
      ],
      "spread": false,
      "description": "<p>The ModuleReport being processed.</p>\n",
      "descriptionRaw": "The ModuleReport being processed."
    },
    "generator": false,
    "___id": "T000002R000017",
    "___s": true
  },
  {
    "__docId__": 16,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ESComplexModule from './ESComplexModule';\n\n/**\n * Exports the default instance of ESComplexModule which is associated with the main entry in `package.json`.\n * It should be noted that this default instance doesn't accept user options for ESComplexModule initialization.\n */\nexport default new ESComplexModule();\n",
    "___id": "T000002R000018",
    "___s": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000019",
    "___s": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000020",
    "___s": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000021",
    "___s": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000022",
    "___s": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000023",
    "___s": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000024",
    "___s": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000025",
    "___s": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000026",
    "___s": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000027",
    "___s": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000028",
    "___s": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000029",
    "___s": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000030",
    "___s": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000031",
    "___s": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000032",
    "___s": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000033",
    "___s": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000034",
    "___s": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000035",
    "___s": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000036",
    "___s": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000037",
    "___s": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000038",
    "___s": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000039",
    "___s": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000040",
    "___s": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000041",
    "___s": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000042",
    "___s": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000043",
    "___s": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000044",
    "___s": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000045",
    "___s": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000046",
    "___s": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000047",
    "___s": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000048",
    "___s": true
  },
  {
    "__docId__": 48,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000049",
    "___s": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000050",
    "___s": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000051",
    "___s": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000052",
    "___s": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000053",
    "___s": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000054",
    "___s": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000055",
    "___s": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000056",
    "___s": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000057",
    "___s": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000058",
    "___s": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000059",
    "___s": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000060",
    "___s": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000061",
    "___s": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000062",
    "___s": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000063",
    "___s": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000064",
    "___s": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true,
    "___id": "T000002R000065",
    "___s": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000066",
    "___s": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000067",
    "___s": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000068",
    "___s": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000069",
    "___s": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000070",
    "___s": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000071",
    "___s": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000072",
    "___s": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true,
    "___id": "T000002R000073",
    "___s": true
  },
  {
    "__docId__": 74,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/moduleAPI.js",
    "memberof": null,
    "longname": "src/moduleAPI.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport { assert }       from 'chai';\n\nimport * as testconfig  from './testconfig';\n\nimport escomplex        from '../../src';\n\nif (testconfig.modules['moduleAPI'])\n{\n   suite('module (API): ', () =>\n   {\n      test('analyze function is exported', () =>\n      {\n         assert.isFunction(escomplex.analyze);\n      });\n\n      test('analyze does not throw with valid arguments', () =>\n      {\n         assert.doesNotThrow(() =>\n         {\n            escomplex.analyze({\n               body: [],\n               loc: {\n                  start: {\n                     line: 0\n                  },\n                  end: {\n                     line: 0\n                  }\n               }\n            });\n         });\n      });\n\n      test('analyze throws when ast is string', () =>\n      {\n         assert.throws(() => { escomplex.analyze('console.log(\"foo\");'); });\n      });\n\n      test('analyze throws when ast is array', () =>\n      {\n         assert.throws(() => { escomplex.analyze([]); });\n      });\n\n      test('analyze returns object', () =>\n      {\n         assert.isObject(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }));\n      });\n\n      test('analyzeAsync returns object', () =>\n      {\n         const promise = escomplex.analyzeAsync({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         });\n\n         promise.then((report) =>\n         {\n            assert.isObject(report);\n         });\n      });\n\n      test('analyze returns aggregate object', () =>\n      {\n         assert.isObject(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate);\n      });\n\n      test('analyze returns aggregate lines of code property', () =>\n      {\n         assert.isObject(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.sloc);\n      });\n\n      test('analyze returns aggregate physical lines of code property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.sloc.physical);\n      });\n\n      test('analyze returns aggregate logical lines of code property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.sloc.logical);\n      });\n\n      test('analyze returns aggregate cyclomatic complexity property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.cyclomatic);\n      });\n\n      test('analyze returns aggregate cyclomatic complexity density property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.cyclomaticDensity);\n      });\n\n      test('analyze returns aggregate halstead property', () =>\n      {\n         assert.isObject(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead);\n      });\n\n      test('analyze returns aggregate halstead operators property', () =>\n      {\n         assert.isObject(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operators);\n      });\n\n      test('analyze returns aggregate halstead total operators property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operators.total);\n      });\n\n      test('analyze returns aggregate halstead distinct operators property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operators.distinct);\n      });\n\n      test('analyze returns aggregate halstead operator identifiers property', () =>\n      {\n         assert.isArray(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operators.identifiers);\n      });\n\n      test('analyze returns aggregate halstead operands property', () =>\n      {\n         assert.isObject(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operands);\n      });\n\n      test('analyze returns aggregate halstead total operands property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operands.total);\n      });\n\n      test('analyze returns aggregate halstead distinct operands property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operands.distinct);\n      });\n\n      test('analyze returns aggregate halstead operand identifiers property', () =>\n      {\n         assert.isArray(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methodAggregate.halstead.operands.identifiers);\n      });\n\n      test('analyze returns maintainability property', () =>\n      {\n         assert.isNumber(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).maintainability);\n      });\n\n      test('analyze returns methods property', () =>\n      {\n         assert.isArray(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).methods);\n      });\n\n      test('analyze returns dependencies property', () =>\n      {\n         assert.isArray(escomplex.analyze({\n            body: [],\n            loc: {\n               start: {\n                  line: 0\n               },\n               end: {\n                  line: 0\n               }\n            }\n         }).dependencies);\n      });\n   });\n}\n",
    "___id": "T000002R000074",
    "___s": true
  },
  {
    "__docId__": 75,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite0",
    "testId": 0,
    "memberof": "src/moduleAPI.js",
    "testDepth": 0,
    "longname": "src/moduleAPI.js~suite0",
    "access": null,
    "description": "module (API): ",
    "lineNumber": 11,
    "___id": "T000002R000075",
    "___s": true
  },
  {
    "__docId__": 76,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1",
    "testId": 1,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test1",
    "access": null,
    "description": "analyze function is exported",
    "lineNumber": 13,
    "___id": "T000002R000076",
    "___s": true
  },
  {
    "__docId__": 77,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test2",
    "testId": 2,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test2",
    "access": null,
    "description": "analyze does not throw with valid arguments",
    "lineNumber": 18,
    "___id": "T000002R000077",
    "___s": true
  },
  {
    "__docId__": 78,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test3",
    "testId": 3,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test3",
    "access": null,
    "description": "analyze throws when ast is string",
    "lineNumber": 36,
    "___id": "T000002R000078",
    "___s": true
  },
  {
    "__docId__": 79,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test4",
    "testId": 4,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test4",
    "access": null,
    "description": "analyze throws when ast is array",
    "lineNumber": 41,
    "___id": "T000002R000079",
    "___s": true
  },
  {
    "__docId__": 80,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test5",
    "testId": 5,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test5",
    "access": null,
    "description": "analyze returns object",
    "lineNumber": 46,
    "___id": "T000002R000080",
    "___s": true
  },
  {
    "__docId__": 81,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test6",
    "testId": 6,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test6",
    "access": null,
    "description": "analyzeAsync returns object",
    "lineNumber": 61,
    "___id": "T000002R000081",
    "___s": true
  },
  {
    "__docId__": 82,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test7",
    "testId": 7,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test7",
    "access": null,
    "description": "analyze returns aggregate object",
    "lineNumber": 81,
    "___id": "T000002R000082",
    "___s": true
  },
  {
    "__docId__": 83,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test8",
    "testId": 8,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test8",
    "access": null,
    "description": "analyze returns aggregate lines of code property",
    "lineNumber": 96,
    "___id": "T000002R000083",
    "___s": true
  },
  {
    "__docId__": 84,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test9",
    "testId": 9,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test9",
    "access": null,
    "description": "analyze returns aggregate physical lines of code property",
    "lineNumber": 111,
    "___id": "T000002R000084",
    "___s": true
  },
  {
    "__docId__": 85,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test10",
    "testId": 10,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test10",
    "access": null,
    "description": "analyze returns aggregate logical lines of code property",
    "lineNumber": 126,
    "___id": "T000002R000085",
    "___s": true
  },
  {
    "__docId__": 86,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test11",
    "testId": 11,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test11",
    "access": null,
    "description": "analyze returns aggregate cyclomatic complexity property",
    "lineNumber": 141,
    "___id": "T000002R000086",
    "___s": true
  },
  {
    "__docId__": 87,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test12",
    "testId": 12,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test12",
    "access": null,
    "description": "analyze returns aggregate cyclomatic complexity density property",
    "lineNumber": 156,
    "___id": "T000002R000087",
    "___s": true
  },
  {
    "__docId__": 88,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test13",
    "testId": 13,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test13",
    "access": null,
    "description": "analyze returns aggregate halstead property",
    "lineNumber": 171,
    "___id": "T000002R000088",
    "___s": true
  },
  {
    "__docId__": 89,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test14",
    "testId": 14,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test14",
    "access": null,
    "description": "analyze returns aggregate halstead operators property",
    "lineNumber": 186,
    "___id": "T000002R000089",
    "___s": true
  },
  {
    "__docId__": 90,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test15",
    "testId": 15,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test15",
    "access": null,
    "description": "analyze returns aggregate halstead total operators property",
    "lineNumber": 201,
    "___id": "T000002R000090",
    "___s": true
  },
  {
    "__docId__": 91,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test16",
    "testId": 16,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test16",
    "access": null,
    "description": "analyze returns aggregate halstead distinct operators property",
    "lineNumber": 216,
    "___id": "T000002R000091",
    "___s": true
  },
  {
    "__docId__": 92,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test17",
    "testId": 17,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test17",
    "access": null,
    "description": "analyze returns aggregate halstead operator identifiers property",
    "lineNumber": 231,
    "___id": "T000002R000092",
    "___s": true
  },
  {
    "__docId__": 93,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test18",
    "testId": 18,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test18",
    "access": null,
    "description": "analyze returns aggregate halstead operands property",
    "lineNumber": 246,
    "___id": "T000002R000093",
    "___s": true
  },
  {
    "__docId__": 94,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test19",
    "testId": 19,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test19",
    "access": null,
    "description": "analyze returns aggregate halstead total operands property",
    "lineNumber": 261,
    "___id": "T000002R000094",
    "___s": true
  },
  {
    "__docId__": 95,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test20",
    "testId": 20,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test20",
    "access": null,
    "description": "analyze returns aggregate halstead distinct operands property",
    "lineNumber": 276,
    "___id": "T000002R000095",
    "___s": true
  },
  {
    "__docId__": 96,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test21",
    "testId": 21,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test21",
    "access": null,
    "description": "analyze returns aggregate halstead operand identifiers property",
    "lineNumber": 291,
    "___id": "T000002R000096",
    "___s": true
  },
  {
    "__docId__": 97,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test22",
    "testId": 22,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test22",
    "access": null,
    "description": "analyze returns maintainability property",
    "lineNumber": 306,
    "___id": "T000002R000097",
    "___s": true
  },
  {
    "__docId__": 98,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test23",
    "testId": 23,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test23",
    "access": null,
    "description": "analyze returns methods property",
    "lineNumber": 321,
    "___id": "T000002R000098",
    "___s": true
  },
  {
    "__docId__": 99,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test24",
    "testId": 24,
    "memberof": "src/moduleAPI.js~suite0",
    "testDepth": 1,
    "longname": "src/moduleAPI.js~suite0.test24",
    "access": null,
    "description": "analyze returns dependencies property",
    "lineNumber": 336,
    "___id": "T000002R000099",
    "___s": true
  },
  {
    "__docId__": 100,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/moduleBabylon.js",
    "memberof": null,
    "longname": "src/moduleBabylon.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport { assert }       from 'chai';\n\nimport parsers          from './parsers';\nimport * as testconfig  from './testconfig';\n\nif (testconfig.modules['moduleBabylon'])\n{\n   parsers.forEach((parser) =>\n   {\n      if (parser.name !== 'babylon') { return; }\n\n      suite(`(${parser.name}): module (ES7):`, () =>\n      {\n         suite('Experimental', () =>\n         {\n            suite('object spread / rest:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('let { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 7);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 8);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 13);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 9);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 21);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 13);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.889);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 120.961);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('object spread / rest (abbreviated React example):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze(\n                     'function expectTree(rootID, expectedTree, parentPath) {\\n'\n                   + '    var childIDs = [];\\n'\n                   + '    var path = \"TEST\";\\n'\n                   + '    if (expectedTree.children !== undefined) {\\n'\n                   + '        for (var i = 0; i < childIDs.length; i++) {\\n'\n                   + '           expectTree(\\n'\n                   + '               childIDs[i],\\n'\n                   + '               { parentID: rootID, ...expectedTree.children[i] },\\n'\n                   + '               path,\\n'\n                   + '           );\\n'\n                   + '        }\\n'\n                   + '    }\\n'\n                   + '}\\n');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 8);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'expectTree');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 13);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 7);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 3);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 21);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 13);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 25);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 13);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 46);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 26);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 12.5);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 44);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 25);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 11.077);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 204.33);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 2263.344);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.068);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 125.741);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 112.805);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 3);\n               });\n            });\n         });\n\n         suite('Flow Typing', () =>\n         {\n            suite('basic function:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('function bar(x: string, y: number): string { return x.length * y; }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'bar');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 1);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 10);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 8);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 8);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 6);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 2.5);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 20.68);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 51.699);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.007);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 2.872);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 157.507);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 2);\n               });\n            });\n         });\n      });\n   });\n}\n",
    "___id": "T000002R000100",
    "___s": true
  },
  {
    "__docId__": 101,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite25",
    "testId": 25,
    "memberof": "src/moduleBabylon.js",
    "testDepth": 0,
    "longname": "src/moduleBabylon.js~suite25",
    "access": null,
    "lineNumber": 14,
    "___id": "T000002R000101",
    "___s": true
  },
  {
    "__docId__": 102,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite26",
    "testId": 26,
    "memberof": "src/moduleBabylon.js~suite25",
    "testDepth": 1,
    "longname": "src/moduleBabylon.js~suite25.suite26",
    "access": null,
    "description": "Experimental",
    "lineNumber": 16,
    "___id": "T000002R000102",
    "___s": true
  },
  {
    "__docId__": 103,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite27",
    "testId": 27,
    "memberof": "src/moduleBabylon.js~suite25.suite26",
    "testDepth": 2,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27",
    "access": null,
    "description": "object spread / rest:",
    "lineNumber": 18,
    "___id": "T000002R000103",
    "___s": true
  },
  {
    "__docId__": 104,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test28",
    "testId": 28,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test28",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 32,
    "___id": "T000002R000104",
    "___s": true
  },
  {
    "__docId__": 105,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test29",
    "testId": 29,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test29",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 37,
    "___id": "T000002R000105",
    "___s": true
  },
  {
    "__docId__": 106,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test30",
    "testId": 30,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test30",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 42,
    "___id": "T000002R000106",
    "___s": true
  },
  {
    "__docId__": 107,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test31",
    "testId": 31,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test31",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 47,
    "___id": "T000002R000107",
    "___s": true
  },
  {
    "__docId__": 108,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test32",
    "testId": 32,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test32",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 52,
    "___id": "T000002R000108",
    "___s": true
  },
  {
    "__docId__": 109,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test33",
    "testId": 33,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test33",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 57,
    "___id": "T000002R000109",
    "___s": true
  },
  {
    "__docId__": 110,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test34",
    "testId": 34,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test34",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 62,
    "___id": "T000002R000110",
    "___s": true
  },
  {
    "__docId__": 111,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test35",
    "testId": 35,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test35",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 67,
    "___id": "T000002R000111",
    "___s": true
  },
  {
    "__docId__": 112,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test36",
    "testId": 36,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test36",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 72,
    "___id": "T000002R000112",
    "___s": true
  },
  {
    "__docId__": 113,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test37",
    "testId": 37,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test37",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 77,
    "___id": "T000002R000113",
    "___s": true
  },
  {
    "__docId__": 114,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test38",
    "testId": 38,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite27.test38",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 82,
    "___id": "T000002R000114",
    "___s": true
  },
  {
    "__docId__": 115,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite39",
    "testId": 39,
    "memberof": "src/moduleBabylon.js~suite25.suite26",
    "testDepth": 2,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39",
    "access": null,
    "description": "object spread / rest (abbreviated React example):",
    "lineNumber": 88,
    "___id": "T000002R000115",
    "___s": true
  },
  {
    "__docId__": 116,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test40",
    "testId": 40,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test40",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 115,
    "___id": "T000002R000116",
    "___s": true
  },
  {
    "__docId__": 117,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test41",
    "testId": 41,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test41",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 120,
    "___id": "T000002R000117",
    "___s": true
  },
  {
    "__docId__": 118,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test42",
    "testId": 42,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test42",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 125,
    "___id": "T000002R000118",
    "___s": true
  },
  {
    "__docId__": 119,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test43",
    "testId": 43,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test43",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 130,
    "___id": "T000002R000119",
    "___s": true
  },
  {
    "__docId__": 120,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test44",
    "testId": 44,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test44",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 135,
    "___id": "T000002R000120",
    "___s": true
  },
  {
    "__docId__": 121,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test45",
    "testId": 45,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test45",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 140,
    "___id": "T000002R000121",
    "___s": true
  },
  {
    "__docId__": 122,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test46",
    "testId": 46,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test46",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 145,
    "___id": "T000002R000122",
    "___s": true
  },
  {
    "__docId__": 123,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test47",
    "testId": 47,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test47",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 150,
    "___id": "T000002R000123",
    "___s": true
  },
  {
    "__docId__": 124,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test48",
    "testId": 48,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test48",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 155,
    "___id": "T000002R000124",
    "___s": true
  },
  {
    "__docId__": 125,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test49",
    "testId": 49,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test49",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 160,
    "___id": "T000002R000125",
    "___s": true
  },
  {
    "__docId__": 126,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test50",
    "testId": 50,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test50",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 165,
    "___id": "T000002R000126",
    "___s": true
  },
  {
    "__docId__": 127,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test51",
    "testId": 51,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test51",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 170,
    "___id": "T000002R000127",
    "___s": true
  },
  {
    "__docId__": 128,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test52",
    "testId": 52,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test52",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 175,
    "___id": "T000002R000128",
    "___s": true
  },
  {
    "__docId__": 129,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test53",
    "testId": 53,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test53",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 180,
    "___id": "T000002R000129",
    "___s": true
  },
  {
    "__docId__": 130,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test54",
    "testId": 54,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test54",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 185,
    "___id": "T000002R000130",
    "___s": true
  },
  {
    "__docId__": 131,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test55",
    "testId": 55,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test55",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 190,
    "___id": "T000002R000131",
    "___s": true
  },
  {
    "__docId__": 132,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test56",
    "testId": 56,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test56",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 195,
    "___id": "T000002R000132",
    "___s": true
  },
  {
    "__docId__": 133,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test57",
    "testId": 57,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test57",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 200,
    "___id": "T000002R000133",
    "___s": true
  },
  {
    "__docId__": 134,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test58",
    "testId": 58,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test58",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 205,
    "___id": "T000002R000134",
    "___s": true
  },
  {
    "__docId__": 135,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test59",
    "testId": 59,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test59",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 210,
    "___id": "T000002R000135",
    "___s": true
  },
  {
    "__docId__": 136,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test60",
    "testId": 60,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test60",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 215,
    "___id": "T000002R000136",
    "___s": true
  },
  {
    "__docId__": 137,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test61",
    "testId": 61,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test61",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 220,
    "___id": "T000002R000137",
    "___s": true
  },
  {
    "__docId__": 138,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test62",
    "testId": 62,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test62",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 225,
    "___id": "T000002R000138",
    "___s": true
  },
  {
    "__docId__": 139,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test63",
    "testId": 63,
    "memberof": "src/moduleBabylon.js~suite25.suite26.suite39",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite26.suite39.test63",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 230,
    "___id": "T000002R000139",
    "___s": true
  },
  {
    "__docId__": 140,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite64",
    "testId": 64,
    "memberof": "src/moduleBabylon.js~suite25",
    "testDepth": 1,
    "longname": "src/moduleBabylon.js~suite25.suite64",
    "access": null,
    "description": "Flow Typing",
    "lineNumber": 237,
    "___id": "T000002R000140",
    "___s": true
  },
  {
    "__docId__": 141,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite65",
    "testId": 65,
    "memberof": "src/moduleBabylon.js~suite25.suite64",
    "testDepth": 2,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65",
    "access": null,
    "description": "basic function:",
    "lineNumber": 239,
    "___id": "T000002R000141",
    "___s": true
  },
  {
    "__docId__": 142,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test66",
    "testId": 66,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test66",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 253,
    "___id": "T000002R000142",
    "___s": true
  },
  {
    "__docId__": 143,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test67",
    "testId": 67,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test67",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 258,
    "___id": "T000002R000143",
    "___s": true
  },
  {
    "__docId__": 144,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test68",
    "testId": 68,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test68",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 263,
    "___id": "T000002R000144",
    "___s": true
  },
  {
    "__docId__": 145,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test69",
    "testId": 69,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test69",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 268,
    "___id": "T000002R000145",
    "___s": true
  },
  {
    "__docId__": 146,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test70",
    "testId": 70,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test70",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 273,
    "___id": "T000002R000146",
    "___s": true
  },
  {
    "__docId__": 147,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test71",
    "testId": 71,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test71",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 278,
    "___id": "T000002R000147",
    "___s": true
  },
  {
    "__docId__": 148,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test72",
    "testId": 72,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test72",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 283,
    "___id": "T000002R000148",
    "___s": true
  },
  {
    "__docId__": 149,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test73",
    "testId": 73,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test73",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 288,
    "___id": "T000002R000149",
    "___s": true
  },
  {
    "__docId__": 150,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test74",
    "testId": 74,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test74",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 293,
    "___id": "T000002R000150",
    "___s": true
  },
  {
    "__docId__": 151,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test75",
    "testId": 75,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test75",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 298,
    "___id": "T000002R000151",
    "___s": true
  },
  {
    "__docId__": 152,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test76",
    "testId": 76,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test76",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 303,
    "___id": "T000002R000152",
    "___s": true
  },
  {
    "__docId__": 153,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test77",
    "testId": 77,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test77",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 308,
    "___id": "T000002R000153",
    "___s": true
  },
  {
    "__docId__": 154,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test78",
    "testId": 78,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test78",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 313,
    "___id": "T000002R000154",
    "___s": true
  },
  {
    "__docId__": 155,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test79",
    "testId": 79,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test79",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 318,
    "___id": "T000002R000155",
    "___s": true
  },
  {
    "__docId__": 156,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test80",
    "testId": 80,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test80",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 323,
    "___id": "T000002R000156",
    "___s": true
  },
  {
    "__docId__": 157,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test81",
    "testId": 81,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test81",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 328,
    "___id": "T000002R000157",
    "___s": true
  },
  {
    "__docId__": 158,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test82",
    "testId": 82,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test82",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 333,
    "___id": "T000002R000158",
    "___s": true
  },
  {
    "__docId__": 159,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test83",
    "testId": 83,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test83",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 338,
    "___id": "T000002R000159",
    "___s": true
  },
  {
    "__docId__": 160,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test84",
    "testId": 84,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test84",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 343,
    "___id": "T000002R000160",
    "___s": true
  },
  {
    "__docId__": 161,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test85",
    "testId": 85,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test85",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 348,
    "___id": "T000002R000161",
    "___s": true
  },
  {
    "__docId__": 162,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test86",
    "testId": 86,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test86",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 353,
    "___id": "T000002R000162",
    "___s": true
  },
  {
    "__docId__": 163,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test87",
    "testId": 87,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test87",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 358,
    "___id": "T000002R000163",
    "___s": true
  },
  {
    "__docId__": 164,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test88",
    "testId": 88,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test88",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 363,
    "___id": "T000002R000164",
    "___s": true
  },
  {
    "__docId__": 165,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test89",
    "testId": 89,
    "memberof": "src/moduleBabylon.js~suite25.suite64.suite65",
    "testDepth": 3,
    "longname": "src/moduleBabylon.js~suite25.suite64.suite65.test89",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 368,
    "___id": "T000002R000165",
    "___s": true
  },
  {
    "__docId__": 166,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/moduleCore.js",
    "memberof": null,
    "longname": "src/moduleCore.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport { assert }       from 'chai';\n\nimport parsers          from './parsers';\nimport * as testconfig  from './testconfig';\n\nif (testconfig.modules['moduleCore'])\n{\n   parsers.forEach((parser) =>\n   {\n      suite(`(${parser.name}): module (Core):`, () =>\n      {\n         suite('function call:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('parseInt(\"10\", 10);');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct physical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.physical, 1);\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity density', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomaticDensity, 100);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead operator identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operators.identifiers,\n                  report.methodAggregate.halstead.operators.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead operand identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operands.identifiers,\n                  report.methodAggregate.halstead.operands.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.length, 4);\n            });\n\n            test('methodAggregate has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.vocabulary, 4);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 0.5);\n            });\n\n            test('methodAggregate has correct Halstead volume', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.volume, 8);\n            });\n\n            test('methodAggregate has correct Halstead effort', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.effort, 4);\n            });\n\n            test('methodAggregate has correct Halstead bugs', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.bugs, 0.003);\n            });\n\n            test('methodAggregate has correct Halstead time', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.time, 0.222);\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 166.259);\n            });\n\n            test('methodAggregate has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methodAggregate.params, 0);\n            });\n\n            test('mean logical LOC is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.sloc.logical, 1);\n            });\n\n            test('mean cyclomatic complexity is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.cyclomatic, 1);\n            });\n\n            test('mean Halstead effort is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.halstead.effort, 4);\n            });\n\n            test('mean parameter count is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.params, 0);\n            });\n\n            test('dependencies is correct', () =>\n            {\n               assert.lengthOf(report.dependencies, 0);\n            });\n         });\n\n         suite('condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('if (true) { \"foo\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct physical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.physical, 1);\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity density', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomaticDensity, 100);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead operator identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operators.identifiers,\n                  report.methodAggregate.halstead.operators.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead operand identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operands.identifiers,\n                  report.methodAggregate.halstead.operands.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.length, 3);\n            });\n\n            test('methodAggregate has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.vocabulary, 3);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 0.5);\n            });\n\n            test('methodAggregate has correct Halstead volume', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.volume, 4.755);\n            });\n\n            test('methodAggregate has correct Halstead effort', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.effort, 2.377);\n            });\n\n            test('methodAggregate has correct Halstead bugs', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.bugs, 0.002);\n            });\n\n            test('methodAggregate has correct Halstead time', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.time, 0.132);\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 156.65);\n            });\n\n            test('mean logical LOC is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.sloc.logical, 2);\n            });\n\n            test('mean cyclomatic complexity is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.cyclomatic, 2);\n            });\n\n            test('mean Halstead effort is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.halstead.effort, 2.377);\n            });\n\n            test('mean parameter count is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.params, 0);\n            });\n\n            test('dependencies is correct', () =>\n            {\n               assert.lengthOf(report.dependencies, 0);\n            });\n         });\n\n         suite('condition with alternate:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('if (true) { \"foo\"; } else { \"bar\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct physical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.physical, 1);\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead operator identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operators.identifiers,\n                  report.methodAggregate.halstead.operators.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead operand identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operands.identifiers,\n                  report.methodAggregate.halstead.operands.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.length, 5);\n            });\n\n            test('methodAggregate has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n            });\n\n            test('methodAggregate has correct Halstead volume', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.volume, 11.61);\n            });\n\n            test('methodAggregate has correct Halstead effort', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.effort, 11.61);\n            });\n\n            test('methodAggregate has correct Halstead bugs', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.bugs, 0.004);\n            });\n\n            test('methodAggregate has correct Halstead time', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.time, 0.645);\n            });\n         });\n\n         suite('dual condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('if (true) { \"foo\"; } if (false) { \"bar\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n\n            test('methodAggregate has correct Halstead operator identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operators.identifiers,\n                  report.methodAggregate.halstead.operators.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead operand identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operands.identifiers,\n                  report.methodAggregate.halstead.operands.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.length, 6);\n            });\n\n            test('methodAggregate has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 0.5);\n            });\n         });\n\n         suite('alternate dual condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('if (true) { \"foo\"; } else if (false) { \"bar\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 5);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n\n            test('methodAggregate has correct Halstead operator identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operators.identifiers,\n                  report.methodAggregate.halstead.operators.distinct\n               );\n            });\n\n            test('methodAggregate has correct Halstead operand identifier length', () =>\n            {\n               assert.lengthOf(\n                  report.methodAggregate.halstead.operands.identifiers,\n                  report.methodAggregate.halstead.operands.distinct\n               );\n            });\n         });\n\n         suite('nested condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('if (true) { \"foo\"; if (false) { \"bar\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n         });\n\n         suite('switch statement:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'switch (Date.now()) { case 1: \"foo\"; break; case 2: \"bar\"; break; default: \"baz\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 9);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity density', () =>\n            {\n               assert.isTrue(report.methodAggregate.cyclomaticDensity > 33.3);\n               assert.isTrue(report.methodAggregate.cyclomaticDensity < 33.4);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 8);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 7);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 7);\n            });\n         });\n\n         suite('switch statement with fall-through case:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('switch (Date.now()) { case 1: case 2: \"foo\"; break; default: \"bar\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 7);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 7);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n            });\n         });\n\n         suite('switch statement containing condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'switch (Date.now()) { '\n                + '    case 1: \"foo\"; break; '\n                + '    case 2: \"bar\"; break; '\n                + '    default: if (true) { \"baz\"; } '\n                + '}');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 10);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 4);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 9);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 7);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 8);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 8);\n            });\n         });\n\n         suite('for loop:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var i; for (i = 0; i < 10; i += 1) { \"foo\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 5);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 8);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n            });\n\n            test('methodAggregate has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.length, 13);\n            });\n\n            test('methodAggregate has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 4);\n            });\n         });\n\n         suite('for loop containing condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var i; for (i = 0; i < 10; i += 1) { if (true) { \"foo\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 9);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n            });\n         });\n\n         suite('for...in loop:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var property; for (property in { foo: \"bar\", baz: \"qux\" }) { \"wibble\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 5);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 5);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 7);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n            });\n\n            test('methodAggregate has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.length, 12);\n            });\n\n            test('methodAggregate has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.333);\n            });\n         });\n\n         suite('for...in loop containing condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'var property, object = { foo: \"bar\", baz: \"qux\" }; '\n                + 'for (property in object) { if (object.hasOwnProperty(property)) { \"wibble\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 9);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 8);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 12);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 8);\n            });\n         });\n\n         suite('while loop:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('while (true) { \"foo\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n         });\n\n         suite('while loop containing condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('while (true) { if (true) { \"foo\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n         });\n\n         suite('do...while loop:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('do { \"foo\"; } while (true)');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n         });\n\n         suite('do...while loop containing condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('do { if (true) { \"foo\"; } } while (true)');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n         });\n\n         suite('try...catch:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('try { \"foo\"; } catch (e) { e.message; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('try containing condition', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('try { if (true) { \"foo\"; } } catch (e) { \"bar\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('catch containing condition', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('try { \"foo\"; } catch (e) { if (true) { \"bar\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('catch with finally containing condition', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('try { \"foo\"; } catch (e) { } finally { if (true) { \"bar\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('function declaration:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { \"bar\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, 'foo');\n            });\n\n            test('method has correct physical lines of code', () =>\n            {\n               assert.strictEqual(report.methods[0].sloc.physical, 1);\n            });\n\n            test('method has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methods[0].sloc.logical, 1);\n            });\n\n            test('method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[0].cyclomatic, 1);\n            });\n\n            test('method has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methods[0].params, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.length, 3);\n            });\n\n            test('methodAggregate has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.vocabulary, 3);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 0.5);\n            });\n\n            test('method has correct Halstead length', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.length, 1);\n            });\n\n            test('method has correct Halstead vocabulary', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.vocabulary, 1);\n            });\n\n            test('method has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.difficulty, 0);\n            });\n\n            test('method has correct Halstead volume', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.volume, 0);\n            });\n\n            test('method has correct Halstead effort', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.effort, 0);\n            });\n\n            test('method has correct Halstead bugs', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.bugs, 0);\n            });\n\n            test('method has correct Halstead time', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.time, 0);\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 171);\n            });\n\n            test('methodAggregate has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methodAggregate.params, 0);\n            });\n         });\n\n         suite('nested function declaration:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { bar(); function bar () { \"baz\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 2);\n            });\n\n            test('first method has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methods[0].sloc.logical, 2);\n            });\n\n            test('second method has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methods[1].sloc.logical, 1);\n            });\n\n            test('first method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, 'foo');\n            });\n\n            test('second method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[1].name, 'bar');\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('function declaration containing condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { if (true) { \"bar\"; } }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[0].cyclomatic, 2);\n            });\n\n            test('method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[0].cyclomaticDensity, 100);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('assignment expression', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = \"bar\";');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methods is empty', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n         });\n\n         suite('ternary condtional expression assigned to variable:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = true ? \"bar\" : \"baz\";');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('nested ternary condtional expression:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = true ? \"bar\" : (false ? \"baz\" : \"qux\");');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n            });\n         });\n\n         suite('logical or expression assigned to variable:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = true || false;');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('anonymous function assigned to variable:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = function () { \"bar\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, '<anonymous>');\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('named function assigned to variable:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = function bar () { \"baz\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, 'bar');\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('ternary condtional expression returned from function:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { return true ? \"bar\" : \"baz\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[0].cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('logical or expression returned from function:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { return true || false; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[0].cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('anonymous function returned from function:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { return function () { \"bar\"; }; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 2);\n            });\n\n            test('first method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, 'foo');\n            });\n\n            test('second method is anonymous', () =>\n            {\n               assert.strictEqual(report.methods[1].name, '<anonymous>');\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('named function returned from function:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { return function bar () { \"baz\"; }; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('second method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[1].name, 'bar');\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('ternary condtional expression passed as argument:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('parseInt(\"10\", true ? 10 : 8);');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n            });\n         });\n\n         suite('logical or expression passed as argument:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('parseInt(\"10\", 10 || 8);');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n         });\n\n         suite('anonymous function passed as argument:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('setTimeout(function () { \"foo\"; }, 1000);');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method is anonymous', () =>\n            {\n               assert.strictEqual(report.methods[0].name, '<anonymous>');\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('named function passed as argument:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('setTimeout(function foo () { \"bar\"; }, 1000);');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, 'foo');\n            });\n         });\n\n         suite('logical AND expression:', () =>\n         {\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               const report = parser.analyze('var foo = true && false;', {});\n               assert.strictEqual(report.methodAverage.cyclomatic, 2);\n            });\n         });\n\n         suite('logical OR expression with logicalor false:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = true || false;', { logicalor: false });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n         });\n\n         suite('switch statement with switchcase false:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'switch (Date.now()) { case 1: \"foo\"; break; case 2: \"bar\"; break; default: \"baz\"; }',\n                  { switchcase: false });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n         });\n\n         suite('for...in loop with forin true:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'var property; for (property in { foo: \"bar\", baz: \"qux\" }) { \"wibble\"; }', { forin: true });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n         });\n\n         suite('try...catch with trycatch true:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('try { \"foo\"; } catch (e) { e.message; }', { trycatch: true });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n         });\n\n         suite('IIFE:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  '(function (foo) { if (foo === \"foo\") { console.log(foo); return; } \"bar\"; }(\"foo\"));');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 6);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[0].cyclomatic, 2);\n            });\n\n            test('method has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methods[0].params, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 7);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 9);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n            });\n\n            test('methodAggregate has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methodAggregate.params, 1);\n            });\n         });\n\n         suite('logical and condition:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('if (\"foo\" && \"bar\") { \"baz\"; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n            });\n         });\n\n         suite('call on function object:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('(function () { \"foo\"; }).call(this);');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('anonymous function assigned to property:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = {}; foo.bar = function () { \"foobar\"; };');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, '<anonymous>');\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n            });\n         });\n\n         suite('anonymous function assigned to property of literal:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('\"\".bar = function () { \"bar\"; };');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, '<anonymous>');\n            });\n         });\n\n         suite('empty object literal:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = {};');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n            });\n         });\n\n         suite('function property of literal object:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = { bar: \"bar\", baz: function () { \"baz\"; } };');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, '<anonymous>');\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n            });\n         });\n\n         suite('duplicate function properties of literal object:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'var foo = { bar: function () { if (true) { \"bar\"; } }, bar: function () { \"bar\"; } };');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 2);\n            });\n\n            test('first method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[0].name, '<anonymous>');\n            });\n\n            test('second method has correct name', () =>\n            {\n               assert.strictEqual(report.methods[1].name, '<anonymous>');\n            });\n\n            test('first method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[0].cyclomatic, 2);\n            });\n\n            test('second method has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methods[1].cyclomatic, 1);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 2);\n            });\n         });\n\n         suite('throw exception:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('try { throw new Error(\"foo\"); } catch (e) { alert(error.message); }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n            });\n         });\n\n         suite('prefix and postfix increment:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var a = 0; ++a; a++;');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n         });\n\n         suite('array literal:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('[ \"foo\", \"bar\" ];');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('methodAggregate has correct cyclomatic complexity', () =>\n            {\n               assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n            });\n         });\n\n         suite('multiple physical lines:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  '// This is a\\n// multi-line\\n// comment.\\nparseInt(\\n\\t(function () {\\n\\t\\t// Moar\\n\\t\\t'\n                + '// commentz!\\n\\t\\treturn [\\n\\t\\t\\t\"1\",\\n\\t\\t\\t\"0\"\\n\\t\\t].join(\"\");\\n\\t}()),\\n\\t10\\n);');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('report has correct line start / end', () =>\n            {\n               switch (parser.name)\n               {\n                  // acorn & babylon sets the start location at line 1 (first comment) instead of line 4 (first\n                  // line of code).\n                  case 'acorn':\n                  case 'babylon':\n                     assert.strictEqual(report.lineStart, 1);\n                     assert.strictEqual(report.lineEnd, 14);\n                     break;\n                  default:\n                     assert.strictEqual(report.lineStart, 4);\n                     assert.strictEqual(report.lineEnd, 14);\n               }\n            });\n\n            test('methodAggregate has correct physical lines of code', () =>\n            {\n               switch (parser.name)\n               {\n                  // acorn & babylon sets the start location at line 1 (first comment) instead of line 4 (first\n                  // line of code).\n                  case 'acorn':\n                  case 'babylon':\n                     assert.strictEqual(report.methodAggregate.sloc.physical, 14);\n                     break;\n                  default:\n                     assert.strictEqual(report.methodAggregate.sloc.physical, 11);\n               }\n            });\n\n            test('methodAggregate has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n            });\n\n            test('methods has correct length', () =>\n            {\n               assert.lengthOf(report.methods, 1);\n            });\n\n            test('method has correct physical lines of code', () =>\n            {\n               assert.strictEqual(report.methods[0].sloc.physical, 8);\n            });\n\n            test('method has correct logical lines of code', () =>\n            {\n               assert.strictEqual(report.methods[0].sloc.logical, 2);\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 146.532);\n            });\n         });\n\n         suite('multiple functions:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'function foo (a, b) { if (a) { b(a); } else { a(b); } } '\n                + 'function bar (c, d) { var i; for (i = 0; i < c.length; i += 1) { d += 1; } console.log(d); }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 128.115);\n            });\n\n            test('first method has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methods[0].params, 2);\n            });\n\n            test('second method has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methods[1].params, 2);\n            });\n\n            test('methodAggregate has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methodAggregate.params, 4);\n            });\n\n            test('mean logical LOC is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.sloc.logical, 4);\n            });\n\n            test('mean cyclomatic complexity is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.cyclomatic, 2);\n            });\n\n            test('mean Halstead effort is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.halstead.effort, 374.713);\n            });\n\n            test('mean parameter count is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.params, 2);\n            });\n         });\n\n         suite('issue 3 / reddit.ISV_Damocles:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'var callback = arguments[arguments.length-1] instanceof Function ? '\n                + 'arguments[arguments.length-1] : function() {};');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 171);\n            });\n         });\n\n         suite('empty return:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { return; }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct Halstead total operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n            });\n\n            test('methodAggregate has correct Halstead distinct operators', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n            });\n\n            test('methodAggregate has correct Halstead total operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.total, 1);\n            });\n\n            test('methodAggregate has correct Halstead distinct operands', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n            });\n\n            test('methodAggregate has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n            });\n\n            test('method has correct Halstead difficulty', () =>\n            {\n               assert.strictEqual(report.methods[0].halstead.difficulty, 0.5);\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 171);\n            });\n         });\n\n         suite('Empty nested functions', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo () { function bar () {} }');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 171);\n            });\n         });\n\n         suite('Microsoft variant maintainability index:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'function foo (a, b) { if (a) { b(a); } else { a(b); } }'\n                 + 'function bar (c, d) { var i; for (i = 0; i < c.length; i += 1) { d += 1; } console.log(d); }',\n                    { newmi: true }\n               );\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('maintainability index is correct', () =>\n            {\n               assert.strictEqual(report.maintainability, 74.921);\n            });\n         });\n\n         suite('Functions with consistent parameter counts:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('function foo (a) {} function bar (b) {} function baz (c) {}');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methodAggregate.params, 3);\n            });\n\n            test('mean parameter count is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.params, 1);\n            });\n         });\n\n         suite('Functions with inconsistent parameter counts:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze(\n                  'function foo (a, b, c, d, e) {} function bar (a, b, c, d, e) {} function baz (a) {}');\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('methodAggregate has correct parameter count', () =>\n            {\n               assert.strictEqual(report.methodAggregate.params, 11);\n            });\n\n            test('mean parameter count is correct', () =>\n            {\n               assert.strictEqual(report.methodAverage.params, 3.667);\n            });\n         });\n\n         suite('CommonJS require literal:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('require(\"./foo\");', { commonjs: true });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('dependencies has correct length', () =>\n            {\n               assert.lengthOf(report.dependencies, 1);\n            });\n\n            test('dependencies are correct', () =>\n            {\n               assert.isObject(report.dependencies[0]);\n               assert.strictEqual(report.dependencies[0].line, 1);\n               assert.strictEqual(report.dependencies[0].path, './foo');\n               assert.strictEqual(report.dependencies[0].type, 'cjs');\n            });\n         });\n\n         suite('alternative CommonJS require literal:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('require(\"./bar\");', { commonjs: true });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('dependencies are correct', () =>\n            {\n               assert.strictEqual(report.dependencies[0].path, './bar');\n            });\n         });\n\n         suite('CommonJS require multiple:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('require(\"./foo\");\\nrequire(\"./bar\");\\n\\nrequire(\"./baz\");', { commonjs: true });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('dependencies has correct length', () =>\n            {\n               assert.lengthOf(report.dependencies, 3);\n            });\n\n            test('dependencies are correct', () =>\n            {\n               assert.strictEqual(report.dependencies[0].line, 1);\n               assert.strictEqual(report.dependencies[0].path, './foo');\n               assert.strictEqual(report.dependencies[1].line, 2);\n               assert.strictEqual(report.dependencies[1].path, './bar');\n               assert.strictEqual(report.dependencies[2].line, 4);\n               assert.strictEqual(report.dependencies[2].path, './baz');\n            });\n         });\n\n         suite('CommonJS require variable:', () =>\n         {\n            let report;\n\n            setup(() =>\n            {\n               report = parser.analyze('var foo = \"./foo\";require(foo);', { commonjs: true });\n            });\n\n            teardown(() =>\n            {\n               report = undefined;\n            });\n\n            test('dependencies has correct length', () =>\n            {\n               assert.lengthOf(report.dependencies, 1);\n            });\n\n            test('dependencies are correct', () =>\n            {\n               assert.isObject(report.dependencies[0]);\n               assert.strictEqual(report.dependencies[0].line, 1);\n               assert.strictEqual(report.dependencies[0].path, '* dynamic dependency *');\n               assert.strictEqual(report.dependencies[0].type, 'cjs');\n            });\n         });\n      });\n   });\n}\n",
    "___id": "T000002R000166",
    "___s": true
  },
  {
    "__docId__": 167,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite90",
    "testId": 90,
    "memberof": "src/moduleCore.js",
    "testDepth": 0,
    "longname": "src/moduleCore.js~suite90",
    "access": null,
    "lineNumber": 12,
    "___id": "T000002R000167",
    "___s": true
  },
  {
    "__docId__": 168,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite91",
    "testId": 91,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite91",
    "access": null,
    "description": "function call:",
    "lineNumber": 14,
    "___id": "T000002R000168",
    "___s": true
  },
  {
    "__docId__": 169,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test92",
    "testId": 92,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test92",
    "access": null,
    "description": "methodAggregate has correct physical lines of code",
    "lineNumber": 28,
    "___id": "T000002R000169",
    "___s": true
  },
  {
    "__docId__": 170,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test93",
    "testId": 93,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test93",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 33,
    "___id": "T000002R000170",
    "___s": true
  },
  {
    "__docId__": 171,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test94",
    "testId": 94,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test94",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 38,
    "___id": "T000002R000171",
    "___s": true
  },
  {
    "__docId__": 172,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test95",
    "testId": 95,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test95",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity density",
    "lineNumber": 43,
    "___id": "T000002R000172",
    "___s": true
  },
  {
    "__docId__": 173,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test96",
    "testId": 96,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test96",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 48,
    "___id": "T000002R000173",
    "___s": true
  },
  {
    "__docId__": 174,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test97",
    "testId": 97,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test97",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 53,
    "___id": "T000002R000174",
    "___s": true
  },
  {
    "__docId__": 175,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test98",
    "testId": 98,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test98",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 58,
    "___id": "T000002R000175",
    "___s": true
  },
  {
    "__docId__": 176,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test99",
    "testId": 99,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test99",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 63,
    "___id": "T000002R000176",
    "___s": true
  },
  {
    "__docId__": 177,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test100",
    "testId": 100,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test100",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 68,
    "___id": "T000002R000177",
    "___s": true
  },
  {
    "__docId__": 178,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test101",
    "testId": 101,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test101",
    "access": null,
    "description": "methodAggregate has correct Halstead operator identifier length",
    "lineNumber": 73,
    "___id": "T000002R000178",
    "___s": true
  },
  {
    "__docId__": 179,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test102",
    "testId": 102,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test102",
    "access": null,
    "description": "methodAggregate has correct Halstead operand identifier length",
    "lineNumber": 81,
    "___id": "T000002R000179",
    "___s": true
  },
  {
    "__docId__": 180,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test103",
    "testId": 103,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test103",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 89,
    "___id": "T000002R000180",
    "___s": true
  },
  {
    "__docId__": 181,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test104",
    "testId": 104,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test104",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 94,
    "___id": "T000002R000181",
    "___s": true
  },
  {
    "__docId__": 182,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test105",
    "testId": 105,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test105",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 99,
    "___id": "T000002R000182",
    "___s": true
  },
  {
    "__docId__": 183,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test106",
    "testId": 106,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test106",
    "access": null,
    "description": "methodAggregate has correct Halstead volume",
    "lineNumber": 104,
    "___id": "T000002R000183",
    "___s": true
  },
  {
    "__docId__": 184,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test107",
    "testId": 107,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test107",
    "access": null,
    "description": "methodAggregate has correct Halstead effort",
    "lineNumber": 109,
    "___id": "T000002R000184",
    "___s": true
  },
  {
    "__docId__": 185,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test108",
    "testId": 108,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test108",
    "access": null,
    "description": "methodAggregate has correct Halstead bugs",
    "lineNumber": 114,
    "___id": "T000002R000185",
    "___s": true
  },
  {
    "__docId__": 186,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test109",
    "testId": 109,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test109",
    "access": null,
    "description": "methodAggregate has correct Halstead time",
    "lineNumber": 119,
    "___id": "T000002R000186",
    "___s": true
  },
  {
    "__docId__": 187,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test110",
    "testId": 110,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test110",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 124,
    "___id": "T000002R000187",
    "___s": true
  },
  {
    "__docId__": 188,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test111",
    "testId": 111,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test111",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 129,
    "___id": "T000002R000188",
    "___s": true
  },
  {
    "__docId__": 189,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test112",
    "testId": 112,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test112",
    "access": null,
    "description": "mean logical LOC is correct",
    "lineNumber": 134,
    "___id": "T000002R000189",
    "___s": true
  },
  {
    "__docId__": 190,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test113",
    "testId": 113,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test113",
    "access": null,
    "description": "mean cyclomatic complexity is correct",
    "lineNumber": 139,
    "___id": "T000002R000190",
    "___s": true
  },
  {
    "__docId__": 191,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test114",
    "testId": 114,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test114",
    "access": null,
    "description": "mean Halstead effort is correct",
    "lineNumber": 144,
    "___id": "T000002R000191",
    "___s": true
  },
  {
    "__docId__": 192,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test115",
    "testId": 115,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test115",
    "access": null,
    "description": "mean parameter count is correct",
    "lineNumber": 149,
    "___id": "T000002R000192",
    "___s": true
  },
  {
    "__docId__": 193,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test116",
    "testId": 116,
    "memberof": "src/moduleCore.js~suite90.suite91",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite91.test116",
    "access": null,
    "description": "dependencies is correct",
    "lineNumber": 154,
    "___id": "T000002R000193",
    "___s": true
  },
  {
    "__docId__": 194,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite117",
    "testId": 117,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite117",
    "access": null,
    "description": "condition:",
    "lineNumber": 160,
    "___id": "T000002R000194",
    "___s": true
  },
  {
    "__docId__": 195,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test118",
    "testId": 118,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test118",
    "access": null,
    "description": "methodAggregate has correct physical lines of code",
    "lineNumber": 174,
    "___id": "T000002R000195",
    "___s": true
  },
  {
    "__docId__": 196,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test119",
    "testId": 119,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test119",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 179,
    "___id": "T000002R000196",
    "___s": true
  },
  {
    "__docId__": 197,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test120",
    "testId": 120,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test120",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 184,
    "___id": "T000002R000197",
    "___s": true
  },
  {
    "__docId__": 198,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test121",
    "testId": 121,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test121",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity density",
    "lineNumber": 189,
    "___id": "T000002R000198",
    "___s": true
  },
  {
    "__docId__": 199,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test122",
    "testId": 122,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test122",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 194,
    "___id": "T000002R000199",
    "___s": true
  },
  {
    "__docId__": 200,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test123",
    "testId": 123,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test123",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 199,
    "___id": "T000002R000200",
    "___s": true
  },
  {
    "__docId__": 201,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test124",
    "testId": 124,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test124",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 204,
    "___id": "T000002R000201",
    "___s": true
  },
  {
    "__docId__": 202,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test125",
    "testId": 125,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test125",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 209,
    "___id": "T000002R000202",
    "___s": true
  },
  {
    "__docId__": 203,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test126",
    "testId": 126,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test126",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 214,
    "___id": "T000002R000203",
    "___s": true
  },
  {
    "__docId__": 204,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test127",
    "testId": 127,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test127",
    "access": null,
    "description": "methodAggregate has correct Halstead operator identifier length",
    "lineNumber": 219,
    "___id": "T000002R000204",
    "___s": true
  },
  {
    "__docId__": 205,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test128",
    "testId": 128,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test128",
    "access": null,
    "description": "methodAggregate has correct Halstead operand identifier length",
    "lineNumber": 227,
    "___id": "T000002R000205",
    "___s": true
  },
  {
    "__docId__": 206,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test129",
    "testId": 129,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test129",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 235,
    "___id": "T000002R000206",
    "___s": true
  },
  {
    "__docId__": 207,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test130",
    "testId": 130,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test130",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 240,
    "___id": "T000002R000207",
    "___s": true
  },
  {
    "__docId__": 208,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test131",
    "testId": 131,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test131",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 245,
    "___id": "T000002R000208",
    "___s": true
  },
  {
    "__docId__": 209,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test132",
    "testId": 132,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test132",
    "access": null,
    "description": "methodAggregate has correct Halstead volume",
    "lineNumber": 250,
    "___id": "T000002R000209",
    "___s": true
  },
  {
    "__docId__": 210,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test133",
    "testId": 133,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test133",
    "access": null,
    "description": "methodAggregate has correct Halstead effort",
    "lineNumber": 255,
    "___id": "T000002R000210",
    "___s": true
  },
  {
    "__docId__": 211,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test134",
    "testId": 134,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test134",
    "access": null,
    "description": "methodAggregate has correct Halstead bugs",
    "lineNumber": 260,
    "___id": "T000002R000211",
    "___s": true
  },
  {
    "__docId__": 212,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test135",
    "testId": 135,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test135",
    "access": null,
    "description": "methodAggregate has correct Halstead time",
    "lineNumber": 265,
    "___id": "T000002R000212",
    "___s": true
  },
  {
    "__docId__": 213,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test136",
    "testId": 136,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test136",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 270,
    "___id": "T000002R000213",
    "___s": true
  },
  {
    "__docId__": 214,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test137",
    "testId": 137,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test137",
    "access": null,
    "description": "mean logical LOC is correct",
    "lineNumber": 275,
    "___id": "T000002R000214",
    "___s": true
  },
  {
    "__docId__": 215,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test138",
    "testId": 138,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test138",
    "access": null,
    "description": "mean cyclomatic complexity is correct",
    "lineNumber": 280,
    "___id": "T000002R000215",
    "___s": true
  },
  {
    "__docId__": 216,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test139",
    "testId": 139,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test139",
    "access": null,
    "description": "mean Halstead effort is correct",
    "lineNumber": 285,
    "___id": "T000002R000216",
    "___s": true
  },
  {
    "__docId__": 217,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test140",
    "testId": 140,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test140",
    "access": null,
    "description": "mean parameter count is correct",
    "lineNumber": 290,
    "___id": "T000002R000217",
    "___s": true
  },
  {
    "__docId__": 218,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test141",
    "testId": 141,
    "memberof": "src/moduleCore.js~suite90.suite117",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite117.test141",
    "access": null,
    "description": "dependencies is correct",
    "lineNumber": 295,
    "___id": "T000002R000218",
    "___s": true
  },
  {
    "__docId__": 219,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite142",
    "testId": 142,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite142",
    "access": null,
    "description": "condition with alternate:",
    "lineNumber": 301,
    "___id": "T000002R000219",
    "___s": true
  },
  {
    "__docId__": 220,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test143",
    "testId": 143,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test143",
    "access": null,
    "description": "methodAggregate has correct physical lines of code",
    "lineNumber": 315,
    "___id": "T000002R000220",
    "___s": true
  },
  {
    "__docId__": 221,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test144",
    "testId": 144,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test144",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 320,
    "___id": "T000002R000221",
    "___s": true
  },
  {
    "__docId__": 222,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test145",
    "testId": 145,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test145",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 325,
    "___id": "T000002R000222",
    "___s": true
  },
  {
    "__docId__": 223,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test146",
    "testId": 146,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test146",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 330,
    "___id": "T000002R000223",
    "___s": true
  },
  {
    "__docId__": 224,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test147",
    "testId": 147,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test147",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 335,
    "___id": "T000002R000224",
    "___s": true
  },
  {
    "__docId__": 225,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test148",
    "testId": 148,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test148",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 340,
    "___id": "T000002R000225",
    "___s": true
  },
  {
    "__docId__": 226,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test149",
    "testId": 149,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test149",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 345,
    "___id": "T000002R000226",
    "___s": true
  },
  {
    "__docId__": 227,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test150",
    "testId": 150,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test150",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 350,
    "___id": "T000002R000227",
    "___s": true
  },
  {
    "__docId__": 228,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test151",
    "testId": 151,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test151",
    "access": null,
    "description": "methodAggregate has correct Halstead operator identifier length",
    "lineNumber": 355,
    "___id": "T000002R000228",
    "___s": true
  },
  {
    "__docId__": 229,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test152",
    "testId": 152,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test152",
    "access": null,
    "description": "methodAggregate has correct Halstead operand identifier length",
    "lineNumber": 363,
    "___id": "T000002R000229",
    "___s": true
  },
  {
    "__docId__": 230,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test153",
    "testId": 153,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test153",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 371,
    "___id": "T000002R000230",
    "___s": true
  },
  {
    "__docId__": 231,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test154",
    "testId": 154,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test154",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 376,
    "___id": "T000002R000231",
    "___s": true
  },
  {
    "__docId__": 232,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test155",
    "testId": 155,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test155",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 381,
    "___id": "T000002R000232",
    "___s": true
  },
  {
    "__docId__": 233,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test156",
    "testId": 156,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test156",
    "access": null,
    "description": "methodAggregate has correct Halstead volume",
    "lineNumber": 386,
    "___id": "T000002R000233",
    "___s": true
  },
  {
    "__docId__": 234,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test157",
    "testId": 157,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test157",
    "access": null,
    "description": "methodAggregate has correct Halstead effort",
    "lineNumber": 391,
    "___id": "T000002R000234",
    "___s": true
  },
  {
    "__docId__": 235,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test158",
    "testId": 158,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test158",
    "access": null,
    "description": "methodAggregate has correct Halstead bugs",
    "lineNumber": 396,
    "___id": "T000002R000235",
    "___s": true
  },
  {
    "__docId__": 236,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test159",
    "testId": 159,
    "memberof": "src/moduleCore.js~suite90.suite142",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite142.test159",
    "access": null,
    "description": "methodAggregate has correct Halstead time",
    "lineNumber": 401,
    "___id": "T000002R000236",
    "___s": true
  },
  {
    "__docId__": 237,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite160",
    "testId": 160,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite160",
    "access": null,
    "description": "dual condition:",
    "lineNumber": 407,
    "___id": "T000002R000237",
    "___s": true
  },
  {
    "__docId__": 238,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test161",
    "testId": 161,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test161",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 421,
    "___id": "T000002R000238",
    "___s": true
  },
  {
    "__docId__": 239,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test162",
    "testId": 162,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test162",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 426,
    "___id": "T000002R000239",
    "___s": true
  },
  {
    "__docId__": 240,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test163",
    "testId": 163,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test163",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 431,
    "___id": "T000002R000240",
    "___s": true
  },
  {
    "__docId__": 241,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test164",
    "testId": 164,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test164",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 436,
    "___id": "T000002R000241",
    "___s": true
  },
  {
    "__docId__": 242,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test165",
    "testId": 165,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test165",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 441,
    "___id": "T000002R000242",
    "___s": true
  },
  {
    "__docId__": 243,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test166",
    "testId": 166,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test166",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 446,
    "___id": "T000002R000243",
    "___s": true
  },
  {
    "__docId__": 244,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test167",
    "testId": 167,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test167",
    "access": null,
    "description": "methodAggregate has correct Halstead operator identifier length",
    "lineNumber": 451,
    "___id": "T000002R000244",
    "___s": true
  },
  {
    "__docId__": 245,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test168",
    "testId": 168,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test168",
    "access": null,
    "description": "methodAggregate has correct Halstead operand identifier length",
    "lineNumber": 459,
    "___id": "T000002R000245",
    "___s": true
  },
  {
    "__docId__": 246,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test169",
    "testId": 169,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test169",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 467,
    "___id": "T000002R000246",
    "___s": true
  },
  {
    "__docId__": 247,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test170",
    "testId": 170,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test170",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 472,
    "___id": "T000002R000247",
    "___s": true
  },
  {
    "__docId__": 248,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test171",
    "testId": 171,
    "memberof": "src/moduleCore.js~suite90.suite160",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite160.test171",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 477,
    "___id": "T000002R000248",
    "___s": true
  },
  {
    "__docId__": 249,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite172",
    "testId": 172,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite172",
    "access": null,
    "description": "alternate dual condition:",
    "lineNumber": 483,
    "___id": "T000002R000249",
    "___s": true
  },
  {
    "__docId__": 250,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test173",
    "testId": 173,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test173",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 497,
    "___id": "T000002R000250",
    "___s": true
  },
  {
    "__docId__": 251,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test174",
    "testId": 174,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test174",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 502,
    "___id": "T000002R000251",
    "___s": true
  },
  {
    "__docId__": 252,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test175",
    "testId": 175,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test175",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 507,
    "___id": "T000002R000252",
    "___s": true
  },
  {
    "__docId__": 253,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test176",
    "testId": 176,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test176",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 512,
    "___id": "T000002R000253",
    "___s": true
  },
  {
    "__docId__": 254,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test177",
    "testId": 177,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test177",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 517,
    "___id": "T000002R000254",
    "___s": true
  },
  {
    "__docId__": 255,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test178",
    "testId": 178,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test178",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 522,
    "___id": "T000002R000255",
    "___s": true
  },
  {
    "__docId__": 256,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test179",
    "testId": 179,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test179",
    "access": null,
    "description": "methodAggregate has correct Halstead operator identifier length",
    "lineNumber": 527,
    "___id": "T000002R000256",
    "___s": true
  },
  {
    "__docId__": 257,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test180",
    "testId": 180,
    "memberof": "src/moduleCore.js~suite90.suite172",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite172.test180",
    "access": null,
    "description": "methodAggregate has correct Halstead operand identifier length",
    "lineNumber": 535,
    "___id": "T000002R000257",
    "___s": true
  },
  {
    "__docId__": 258,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite181",
    "testId": 181,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite181",
    "access": null,
    "description": "nested condition:",
    "lineNumber": 544,
    "___id": "T000002R000258",
    "___s": true
  },
  {
    "__docId__": 259,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test182",
    "testId": 182,
    "memberof": "src/moduleCore.js~suite90.suite181",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite181.test182",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 558,
    "___id": "T000002R000259",
    "___s": true
  },
  {
    "__docId__": 260,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test183",
    "testId": 183,
    "memberof": "src/moduleCore.js~suite90.suite181",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite181.test183",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 563,
    "___id": "T000002R000260",
    "___s": true
  },
  {
    "__docId__": 261,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite184",
    "testId": 184,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite184",
    "access": null,
    "description": "switch statement:",
    "lineNumber": 569,
    "___id": "T000002R000261",
    "___s": true
  },
  {
    "__docId__": 262,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test185",
    "testId": 185,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test185",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 584,
    "___id": "T000002R000262",
    "___s": true
  },
  {
    "__docId__": 263,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test186",
    "testId": 186,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test186",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 589,
    "___id": "T000002R000263",
    "___s": true
  },
  {
    "__docId__": 264,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test187",
    "testId": 187,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test187",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity density",
    "lineNumber": 594,
    "___id": "T000002R000264",
    "___s": true
  },
  {
    "__docId__": 265,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test188",
    "testId": 188,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test188",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 600,
    "___id": "T000002R000265",
    "___s": true
  },
  {
    "__docId__": 266,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test189",
    "testId": 189,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test189",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 605,
    "___id": "T000002R000266",
    "___s": true
  },
  {
    "__docId__": 267,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test190",
    "testId": 190,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test190",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 610,
    "___id": "T000002R000267",
    "___s": true
  },
  {
    "__docId__": 268,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test191",
    "testId": 191,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test191",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 615,
    "___id": "T000002R000268",
    "___s": true
  },
  {
    "__docId__": 269,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test192",
    "testId": 192,
    "memberof": "src/moduleCore.js~suite90.suite184",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite184.test192",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 620,
    "___id": "T000002R000269",
    "___s": true
  },
  {
    "__docId__": 270,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite193",
    "testId": 193,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite193",
    "access": null,
    "description": "switch statement with fall-through case:",
    "lineNumber": 626,
    "___id": "T000002R000270",
    "___s": true
  },
  {
    "__docId__": 271,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test194",
    "testId": 194,
    "memberof": "src/moduleCore.js~suite90.suite193",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite193.test194",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 640,
    "___id": "T000002R000271",
    "___s": true
  },
  {
    "__docId__": 272,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test195",
    "testId": 195,
    "memberof": "src/moduleCore.js~suite90.suite193",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite193.test195",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 645,
    "___id": "T000002R000272",
    "___s": true
  },
  {
    "__docId__": 273,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test196",
    "testId": 196,
    "memberof": "src/moduleCore.js~suite90.suite193",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite193.test196",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 650,
    "___id": "T000002R000273",
    "___s": true
  },
  {
    "__docId__": 274,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test197",
    "testId": 197,
    "memberof": "src/moduleCore.js~suite90.suite193",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite193.test197",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 655,
    "___id": "T000002R000274",
    "___s": true
  },
  {
    "__docId__": 275,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test198",
    "testId": 198,
    "memberof": "src/moduleCore.js~suite90.suite193",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite193.test198",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 660,
    "___id": "T000002R000275",
    "___s": true
  },
  {
    "__docId__": 276,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test199",
    "testId": 199,
    "memberof": "src/moduleCore.js~suite90.suite193",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite193.test199",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 665,
    "___id": "T000002R000276",
    "___s": true
  },
  {
    "__docId__": 277,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test200",
    "testId": 200,
    "memberof": "src/moduleCore.js~suite90.suite193",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite193.test200",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 670,
    "___id": "T000002R000277",
    "___s": true
  },
  {
    "__docId__": 278,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite201",
    "testId": 201,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite201",
    "access": null,
    "description": "switch statement containing condition:",
    "lineNumber": 676,
    "___id": "T000002R000278",
    "___s": true
  },
  {
    "__docId__": 279,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test202",
    "testId": 202,
    "memberof": "src/moduleCore.js~suite90.suite201",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite201.test202",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 695,
    "___id": "T000002R000279",
    "___s": true
  },
  {
    "__docId__": 280,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test203",
    "testId": 203,
    "memberof": "src/moduleCore.js~suite90.suite201",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite201.test203",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 700,
    "___id": "T000002R000280",
    "___s": true
  },
  {
    "__docId__": 281,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test204",
    "testId": 204,
    "memberof": "src/moduleCore.js~suite90.suite201",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite201.test204",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 705,
    "___id": "T000002R000281",
    "___s": true
  },
  {
    "__docId__": 282,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test205",
    "testId": 205,
    "memberof": "src/moduleCore.js~suite90.suite201",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite201.test205",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 710,
    "___id": "T000002R000282",
    "___s": true
  },
  {
    "__docId__": 283,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test206",
    "testId": 206,
    "memberof": "src/moduleCore.js~suite90.suite201",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite201.test206",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 715,
    "___id": "T000002R000283",
    "___s": true
  },
  {
    "__docId__": 284,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test207",
    "testId": 207,
    "memberof": "src/moduleCore.js~suite90.suite201",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite201.test207",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 720,
    "___id": "T000002R000284",
    "___s": true
  },
  {
    "__docId__": 285,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test208",
    "testId": 208,
    "memberof": "src/moduleCore.js~suite90.suite201",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite201.test208",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 725,
    "___id": "T000002R000285",
    "___s": true
  },
  {
    "__docId__": 286,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite209",
    "testId": 209,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite209",
    "access": null,
    "description": "for loop:",
    "lineNumber": 731,
    "___id": "T000002R000286",
    "___s": true
  },
  {
    "__docId__": 287,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test210",
    "testId": 210,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test210",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 745,
    "___id": "T000002R000287",
    "___s": true
  },
  {
    "__docId__": 288,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test211",
    "testId": 211,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test211",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 750,
    "___id": "T000002R000288",
    "___s": true
  },
  {
    "__docId__": 289,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test212",
    "testId": 212,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test212",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 755,
    "___id": "T000002R000289",
    "___s": true
  },
  {
    "__docId__": 290,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test213",
    "testId": 213,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test213",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 760,
    "___id": "T000002R000290",
    "___s": true
  },
  {
    "__docId__": 291,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test214",
    "testId": 214,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test214",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 765,
    "___id": "T000002R000291",
    "___s": true
  },
  {
    "__docId__": 292,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test215",
    "testId": 215,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test215",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 770,
    "___id": "T000002R000292",
    "___s": true
  },
  {
    "__docId__": 293,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test216",
    "testId": 216,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test216",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 775,
    "___id": "T000002R000293",
    "___s": true
  },
  {
    "__docId__": 294,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test217",
    "testId": 217,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test217",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 780,
    "___id": "T000002R000294",
    "___s": true
  },
  {
    "__docId__": 295,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test218",
    "testId": 218,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test218",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 785,
    "___id": "T000002R000295",
    "___s": true
  },
  {
    "__docId__": 296,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test219",
    "testId": 219,
    "memberof": "src/moduleCore.js~suite90.suite209",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite209.test219",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 790,
    "___id": "T000002R000296",
    "___s": true
  },
  {
    "__docId__": 297,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite220",
    "testId": 220,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite220",
    "access": null,
    "description": "for loop containing condition:",
    "lineNumber": 796,
    "___id": "T000002R000297",
    "___s": true
  },
  {
    "__docId__": 298,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test221",
    "testId": 221,
    "memberof": "src/moduleCore.js~suite90.suite220",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite220.test221",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 810,
    "___id": "T000002R000298",
    "___s": true
  },
  {
    "__docId__": 299,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test222",
    "testId": 222,
    "memberof": "src/moduleCore.js~suite90.suite220",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite220.test222",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 815,
    "___id": "T000002R000299",
    "___s": true
  },
  {
    "__docId__": 300,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test223",
    "testId": 223,
    "memberof": "src/moduleCore.js~suite90.suite220",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite220.test223",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 820,
    "___id": "T000002R000300",
    "___s": true
  },
  {
    "__docId__": 301,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test224",
    "testId": 224,
    "memberof": "src/moduleCore.js~suite90.suite220",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite220.test224",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 825,
    "___id": "T000002R000301",
    "___s": true
  },
  {
    "__docId__": 302,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test225",
    "testId": 225,
    "memberof": "src/moduleCore.js~suite90.suite220",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite220.test225",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 830,
    "___id": "T000002R000302",
    "___s": true
  },
  {
    "__docId__": 303,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite226",
    "testId": 226,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite226",
    "access": null,
    "description": "for...in loop:",
    "lineNumber": 836,
    "___id": "T000002R000303",
    "___s": true
  },
  {
    "__docId__": 304,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test227",
    "testId": 227,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test227",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 850,
    "___id": "T000002R000304",
    "___s": true
  },
  {
    "__docId__": 305,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test228",
    "testId": 228,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test228",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 855,
    "___id": "T000002R000305",
    "___s": true
  },
  {
    "__docId__": 306,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test229",
    "testId": 229,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test229",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 860,
    "___id": "T000002R000306",
    "___s": true
  },
  {
    "__docId__": 307,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test230",
    "testId": 230,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test230",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 865,
    "___id": "T000002R000307",
    "___s": true
  },
  {
    "__docId__": 308,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test231",
    "testId": 231,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test231",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 870,
    "___id": "T000002R000308",
    "___s": true
  },
  {
    "__docId__": 309,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test232",
    "testId": 232,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test232",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 875,
    "___id": "T000002R000309",
    "___s": true
  },
  {
    "__docId__": 310,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test233",
    "testId": 233,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test233",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 880,
    "___id": "T000002R000310",
    "___s": true
  },
  {
    "__docId__": 311,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test234",
    "testId": 234,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test234",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 885,
    "___id": "T000002R000311",
    "___s": true
  },
  {
    "__docId__": 312,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test235",
    "testId": 235,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test235",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 890,
    "___id": "T000002R000312",
    "___s": true
  },
  {
    "__docId__": 313,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test236",
    "testId": 236,
    "memberof": "src/moduleCore.js~suite90.suite226",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite226.test236",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 895,
    "___id": "T000002R000313",
    "___s": true
  },
  {
    "__docId__": 314,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite237",
    "testId": 237,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite237",
    "access": null,
    "description": "for...in loop containing condition:",
    "lineNumber": 901,
    "___id": "T000002R000314",
    "___s": true
  },
  {
    "__docId__": 315,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test238",
    "testId": 238,
    "memberof": "src/moduleCore.js~suite90.suite237",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite237.test238",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 917,
    "___id": "T000002R000315",
    "___s": true
  },
  {
    "__docId__": 316,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test239",
    "testId": 239,
    "memberof": "src/moduleCore.js~suite90.suite237",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite237.test239",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 922,
    "___id": "T000002R000316",
    "___s": true
  },
  {
    "__docId__": 317,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test240",
    "testId": 240,
    "memberof": "src/moduleCore.js~suite90.suite237",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite237.test240",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 927,
    "___id": "T000002R000317",
    "___s": true
  },
  {
    "__docId__": 318,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test241",
    "testId": 241,
    "memberof": "src/moduleCore.js~suite90.suite237",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite237.test241",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 932,
    "___id": "T000002R000318",
    "___s": true
  },
  {
    "__docId__": 319,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test242",
    "testId": 242,
    "memberof": "src/moduleCore.js~suite90.suite237",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite237.test242",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 937,
    "___id": "T000002R000319",
    "___s": true
  },
  {
    "__docId__": 320,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite243",
    "testId": 243,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite243",
    "access": null,
    "description": "while loop:",
    "lineNumber": 943,
    "___id": "T000002R000320",
    "___s": true
  },
  {
    "__docId__": 321,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test244",
    "testId": 244,
    "memberof": "src/moduleCore.js~suite90.suite243",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite243.test244",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 957,
    "___id": "T000002R000321",
    "___s": true
  },
  {
    "__docId__": 322,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test245",
    "testId": 245,
    "memberof": "src/moduleCore.js~suite90.suite243",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite243.test245",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 962,
    "___id": "T000002R000322",
    "___s": true
  },
  {
    "__docId__": 323,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test246",
    "testId": 246,
    "memberof": "src/moduleCore.js~suite90.suite243",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite243.test246",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 967,
    "___id": "T000002R000323",
    "___s": true
  },
  {
    "__docId__": 324,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test247",
    "testId": 247,
    "memberof": "src/moduleCore.js~suite90.suite243",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite243.test247",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 972,
    "___id": "T000002R000324",
    "___s": true
  },
  {
    "__docId__": 325,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test248",
    "testId": 248,
    "memberof": "src/moduleCore.js~suite90.suite243",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite243.test248",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 977,
    "___id": "T000002R000325",
    "___s": true
  },
  {
    "__docId__": 326,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test249",
    "testId": 249,
    "memberof": "src/moduleCore.js~suite90.suite243",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite243.test249",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 982,
    "___id": "T000002R000326",
    "___s": true
  },
  {
    "__docId__": 327,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test250",
    "testId": 250,
    "memberof": "src/moduleCore.js~suite90.suite243",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite243.test250",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 987,
    "___id": "T000002R000327",
    "___s": true
  },
  {
    "__docId__": 328,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite251",
    "testId": 251,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite251",
    "access": null,
    "description": "while loop containing condition:",
    "lineNumber": 993,
    "___id": "T000002R000328",
    "___s": true
  },
  {
    "__docId__": 329,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test252",
    "testId": 252,
    "memberof": "src/moduleCore.js~suite90.suite251",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite251.test252",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1007,
    "___id": "T000002R000329",
    "___s": true
  },
  {
    "__docId__": 330,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test253",
    "testId": 253,
    "memberof": "src/moduleCore.js~suite90.suite251",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite251.test253",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1012,
    "___id": "T000002R000330",
    "___s": true
  },
  {
    "__docId__": 331,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test254",
    "testId": 254,
    "memberof": "src/moduleCore.js~suite90.suite251",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite251.test254",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1017,
    "___id": "T000002R000331",
    "___s": true
  },
  {
    "__docId__": 332,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test255",
    "testId": 255,
    "memberof": "src/moduleCore.js~suite90.suite251",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite251.test255",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1022,
    "___id": "T000002R000332",
    "___s": true
  },
  {
    "__docId__": 333,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test256",
    "testId": 256,
    "memberof": "src/moduleCore.js~suite90.suite251",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite251.test256",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1027,
    "___id": "T000002R000333",
    "___s": true
  },
  {
    "__docId__": 334,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite257",
    "testId": 257,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite257",
    "access": null,
    "description": "do...while loop:",
    "lineNumber": 1033,
    "___id": "T000002R000334",
    "___s": true
  },
  {
    "__docId__": 335,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test258",
    "testId": 258,
    "memberof": "src/moduleCore.js~suite90.suite257",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite257.test258",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1047,
    "___id": "T000002R000335",
    "___s": true
  },
  {
    "__docId__": 336,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test259",
    "testId": 259,
    "memberof": "src/moduleCore.js~suite90.suite257",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite257.test259",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1052,
    "___id": "T000002R000336",
    "___s": true
  },
  {
    "__docId__": 337,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test260",
    "testId": 260,
    "memberof": "src/moduleCore.js~suite90.suite257",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite257.test260",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 1057,
    "___id": "T000002R000337",
    "___s": true
  },
  {
    "__docId__": 338,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test261",
    "testId": 261,
    "memberof": "src/moduleCore.js~suite90.suite257",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite257.test261",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1062,
    "___id": "T000002R000338",
    "___s": true
  },
  {
    "__docId__": 339,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test262",
    "testId": 262,
    "memberof": "src/moduleCore.js~suite90.suite257",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite257.test262",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1067,
    "___id": "T000002R000339",
    "___s": true
  },
  {
    "__docId__": 340,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test263",
    "testId": 263,
    "memberof": "src/moduleCore.js~suite90.suite257",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite257.test263",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1072,
    "___id": "T000002R000340",
    "___s": true
  },
  {
    "__docId__": 341,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test264",
    "testId": 264,
    "memberof": "src/moduleCore.js~suite90.suite257",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite257.test264",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1077,
    "___id": "T000002R000341",
    "___s": true
  },
  {
    "__docId__": 342,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite265",
    "testId": 265,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite265",
    "access": null,
    "description": "do...while loop containing condition:",
    "lineNumber": 1083,
    "___id": "T000002R000342",
    "___s": true
  },
  {
    "__docId__": 343,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test266",
    "testId": 266,
    "memberof": "src/moduleCore.js~suite90.suite265",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite265.test266",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1097,
    "___id": "T000002R000343",
    "___s": true
  },
  {
    "__docId__": 344,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test267",
    "testId": 267,
    "memberof": "src/moduleCore.js~suite90.suite265",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite265.test267",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1102,
    "___id": "T000002R000344",
    "___s": true
  },
  {
    "__docId__": 345,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test268",
    "testId": 268,
    "memberof": "src/moduleCore.js~suite90.suite265",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite265.test268",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1107,
    "___id": "T000002R000345",
    "___s": true
  },
  {
    "__docId__": 346,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test269",
    "testId": 269,
    "memberof": "src/moduleCore.js~suite90.suite265",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite265.test269",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1112,
    "___id": "T000002R000346",
    "___s": true
  },
  {
    "__docId__": 347,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test270",
    "testId": 270,
    "memberof": "src/moduleCore.js~suite90.suite265",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite265.test270",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1117,
    "___id": "T000002R000347",
    "___s": true
  },
  {
    "__docId__": 348,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite271",
    "testId": 271,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite271",
    "access": null,
    "description": "try...catch:",
    "lineNumber": 1123,
    "___id": "T000002R000348",
    "___s": true
  },
  {
    "__docId__": 349,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test272",
    "testId": 272,
    "memberof": "src/moduleCore.js~suite90.suite271",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite271.test272",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1137,
    "___id": "T000002R000349",
    "___s": true
  },
  {
    "__docId__": 350,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test273",
    "testId": 273,
    "memberof": "src/moduleCore.js~suite90.suite271",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite271.test273",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1142,
    "___id": "T000002R000350",
    "___s": true
  },
  {
    "__docId__": 351,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test274",
    "testId": 274,
    "memberof": "src/moduleCore.js~suite90.suite271",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite271.test274",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 1147,
    "___id": "T000002R000351",
    "___s": true
  },
  {
    "__docId__": 352,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test275",
    "testId": 275,
    "memberof": "src/moduleCore.js~suite90.suite271",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite271.test275",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1152,
    "___id": "T000002R000352",
    "___s": true
  },
  {
    "__docId__": 353,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test276",
    "testId": 276,
    "memberof": "src/moduleCore.js~suite90.suite271",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite271.test276",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1157,
    "___id": "T000002R000353",
    "___s": true
  },
  {
    "__docId__": 354,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test277",
    "testId": 277,
    "memberof": "src/moduleCore.js~suite90.suite271",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite271.test277",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1162,
    "___id": "T000002R000354",
    "___s": true
  },
  {
    "__docId__": 355,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test278",
    "testId": 278,
    "memberof": "src/moduleCore.js~suite90.suite271",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite271.test278",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1167,
    "___id": "T000002R000355",
    "___s": true
  },
  {
    "__docId__": 356,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite279",
    "testId": 279,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite279",
    "access": null,
    "description": "try containing condition",
    "lineNumber": 1173,
    "___id": "T000002R000356",
    "___s": true
  },
  {
    "__docId__": 357,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test280",
    "testId": 280,
    "memberof": "src/moduleCore.js~suite90.suite279",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite279.test280",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1187,
    "___id": "T000002R000357",
    "___s": true
  },
  {
    "__docId__": 358,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test281",
    "testId": 281,
    "memberof": "src/moduleCore.js~suite90.suite279",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite279.test281",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1192,
    "___id": "T000002R000358",
    "___s": true
  },
  {
    "__docId__": 359,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test282",
    "testId": 282,
    "memberof": "src/moduleCore.js~suite90.suite279",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite279.test282",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1197,
    "___id": "T000002R000359",
    "___s": true
  },
  {
    "__docId__": 360,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test283",
    "testId": 283,
    "memberof": "src/moduleCore.js~suite90.suite279",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite279.test283",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1202,
    "___id": "T000002R000360",
    "___s": true
  },
  {
    "__docId__": 361,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test284",
    "testId": 284,
    "memberof": "src/moduleCore.js~suite90.suite279",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite279.test284",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1207,
    "___id": "T000002R000361",
    "___s": true
  },
  {
    "__docId__": 362,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite285",
    "testId": 285,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite285",
    "access": null,
    "description": "catch containing condition",
    "lineNumber": 1213,
    "___id": "T000002R000362",
    "___s": true
  },
  {
    "__docId__": 363,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test286",
    "testId": 286,
    "memberof": "src/moduleCore.js~suite90.suite285",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite285.test286",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1227,
    "___id": "T000002R000363",
    "___s": true
  },
  {
    "__docId__": 364,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test287",
    "testId": 287,
    "memberof": "src/moduleCore.js~suite90.suite285",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite285.test287",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1232,
    "___id": "T000002R000364",
    "___s": true
  },
  {
    "__docId__": 365,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test288",
    "testId": 288,
    "memberof": "src/moduleCore.js~suite90.suite285",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite285.test288",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1237,
    "___id": "T000002R000365",
    "___s": true
  },
  {
    "__docId__": 366,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test289",
    "testId": 289,
    "memberof": "src/moduleCore.js~suite90.suite285",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite285.test289",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1242,
    "___id": "T000002R000366",
    "___s": true
  },
  {
    "__docId__": 367,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test290",
    "testId": 290,
    "memberof": "src/moduleCore.js~suite90.suite285",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite285.test290",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1247,
    "___id": "T000002R000367",
    "___s": true
  },
  {
    "__docId__": 368,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite291",
    "testId": 291,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite291",
    "access": null,
    "description": "catch with finally containing condition",
    "lineNumber": 1253,
    "___id": "T000002R000368",
    "___s": true
  },
  {
    "__docId__": 369,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test292",
    "testId": 292,
    "memberof": "src/moduleCore.js~suite90.suite291",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite291.test292",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1267,
    "___id": "T000002R000369",
    "___s": true
  },
  {
    "__docId__": 370,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test293",
    "testId": 293,
    "memberof": "src/moduleCore.js~suite90.suite291",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite291.test293",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1272,
    "___id": "T000002R000370",
    "___s": true
  },
  {
    "__docId__": 371,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test294",
    "testId": 294,
    "memberof": "src/moduleCore.js~suite90.suite291",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite291.test294",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1277,
    "___id": "T000002R000371",
    "___s": true
  },
  {
    "__docId__": 372,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test295",
    "testId": 295,
    "memberof": "src/moduleCore.js~suite90.suite291",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite291.test295",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1282,
    "___id": "T000002R000372",
    "___s": true
  },
  {
    "__docId__": 373,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test296",
    "testId": 296,
    "memberof": "src/moduleCore.js~suite90.suite291",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite291.test296",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1287,
    "___id": "T000002R000373",
    "___s": true
  },
  {
    "__docId__": 374,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite297",
    "testId": 297,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite297",
    "access": null,
    "description": "function declaration:",
    "lineNumber": 1293,
    "___id": "T000002R000374",
    "___s": true
  },
  {
    "__docId__": 375,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test298",
    "testId": 298,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test298",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1307,
    "___id": "T000002R000375",
    "___s": true
  },
  {
    "__docId__": 376,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test299",
    "testId": 299,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test299",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1312,
    "___id": "T000002R000376",
    "___s": true
  },
  {
    "__docId__": 377,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test300",
    "testId": 300,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test300",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 1317,
    "___id": "T000002R000377",
    "___s": true
  },
  {
    "__docId__": 378,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test301",
    "testId": 301,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test301",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 1322,
    "___id": "T000002R000378",
    "___s": true
  },
  {
    "__docId__": 379,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test302",
    "testId": 302,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test302",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 1327,
    "___id": "T000002R000379",
    "___s": true
  },
  {
    "__docId__": 380,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test303",
    "testId": 303,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test303",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 1332,
    "___id": "T000002R000380",
    "___s": true
  },
  {
    "__docId__": 381,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test304",
    "testId": 304,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test304",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1337,
    "___id": "T000002R000381",
    "___s": true
  },
  {
    "__docId__": 382,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test305",
    "testId": 305,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test305",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 1342,
    "___id": "T000002R000382",
    "___s": true
  },
  {
    "__docId__": 383,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test306",
    "testId": 306,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test306",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1347,
    "___id": "T000002R000383",
    "___s": true
  },
  {
    "__docId__": 384,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test307",
    "testId": 307,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test307",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1352,
    "___id": "T000002R000384",
    "___s": true
  },
  {
    "__docId__": 385,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test308",
    "testId": 308,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test308",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1357,
    "___id": "T000002R000385",
    "___s": true
  },
  {
    "__docId__": 386,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test309",
    "testId": 309,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test309",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1362,
    "___id": "T000002R000386",
    "___s": true
  },
  {
    "__docId__": 387,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test310",
    "testId": 310,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test310",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1367,
    "___id": "T000002R000387",
    "___s": true
  },
  {
    "__docId__": 388,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test311",
    "testId": 311,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test311",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1372,
    "___id": "T000002R000388",
    "___s": true
  },
  {
    "__docId__": 389,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test312",
    "testId": 312,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test312",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1377,
    "___id": "T000002R000389",
    "___s": true
  },
  {
    "__docId__": 390,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test313",
    "testId": 313,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test313",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 1382,
    "___id": "T000002R000390",
    "___s": true
  },
  {
    "__docId__": 391,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test314",
    "testId": 314,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test314",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 1387,
    "___id": "T000002R000391",
    "___s": true
  },
  {
    "__docId__": 392,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test315",
    "testId": 315,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test315",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 1392,
    "___id": "T000002R000392",
    "___s": true
  },
  {
    "__docId__": 393,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test316",
    "testId": 316,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test316",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 1397,
    "___id": "T000002R000393",
    "___s": true
  },
  {
    "__docId__": 394,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test317",
    "testId": 317,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test317",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 1402,
    "___id": "T000002R000394",
    "___s": true
  },
  {
    "__docId__": 395,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test318",
    "testId": 318,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test318",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 1407,
    "___id": "T000002R000395",
    "___s": true
  },
  {
    "__docId__": 396,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test319",
    "testId": 319,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test319",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 1412,
    "___id": "T000002R000396",
    "___s": true
  },
  {
    "__docId__": 397,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test320",
    "testId": 320,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test320",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1417,
    "___id": "T000002R000397",
    "___s": true
  },
  {
    "__docId__": 398,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test321",
    "testId": 321,
    "memberof": "src/moduleCore.js~suite90.suite297",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite297.test321",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1422,
    "___id": "T000002R000398",
    "___s": true
  },
  {
    "__docId__": 399,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite322",
    "testId": 322,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite322",
    "access": null,
    "description": "nested function declaration:",
    "lineNumber": 1428,
    "___id": "T000002R000399",
    "___s": true
  },
  {
    "__docId__": 400,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test323",
    "testId": 323,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test323",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1442,
    "___id": "T000002R000400",
    "___s": true
  },
  {
    "__docId__": 401,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test324",
    "testId": 324,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test324",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 1447,
    "___id": "T000002R000401",
    "___s": true
  },
  {
    "__docId__": 402,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test325",
    "testId": 325,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test325",
    "access": null,
    "description": "first method has correct logical lines of code",
    "lineNumber": 1452,
    "___id": "T000002R000402",
    "___s": true
  },
  {
    "__docId__": 403,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test326",
    "testId": 326,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test326",
    "access": null,
    "description": "second method has correct logical lines of code",
    "lineNumber": 1457,
    "___id": "T000002R000403",
    "___s": true
  },
  {
    "__docId__": 404,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test327",
    "testId": 327,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test327",
    "access": null,
    "description": "first method has correct name",
    "lineNumber": 1462,
    "___id": "T000002R000404",
    "___s": true
  },
  {
    "__docId__": 405,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test328",
    "testId": 328,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test328",
    "access": null,
    "description": "second method has correct name",
    "lineNumber": 1467,
    "___id": "T000002R000405",
    "___s": true
  },
  {
    "__docId__": 406,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test329",
    "testId": 329,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test329",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1472,
    "___id": "T000002R000406",
    "___s": true
  },
  {
    "__docId__": 407,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test330",
    "testId": 330,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test330",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1477,
    "___id": "T000002R000407",
    "___s": true
  },
  {
    "__docId__": 408,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test331",
    "testId": 331,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test331",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1482,
    "___id": "T000002R000408",
    "___s": true
  },
  {
    "__docId__": 409,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test332",
    "testId": 332,
    "memberof": "src/moduleCore.js~suite90.suite322",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite322.test332",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1487,
    "___id": "T000002R000409",
    "___s": true
  },
  {
    "__docId__": 410,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite333",
    "testId": 333,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite333",
    "access": null,
    "description": "function declaration containing condition:",
    "lineNumber": 1493,
    "___id": "T000002R000410",
    "___s": true
  },
  {
    "__docId__": 411,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test334",
    "testId": 334,
    "memberof": "src/moduleCore.js~suite90.suite333",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite333.test334",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1507,
    "___id": "T000002R000411",
    "___s": true
  },
  {
    "__docId__": 412,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test335",
    "testId": 335,
    "memberof": "src/moduleCore.js~suite90.suite333",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite333.test335",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1512,
    "___id": "T000002R000412",
    "___s": true
  },
  {
    "__docId__": 413,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test336",
    "testId": 336,
    "memberof": "src/moduleCore.js~suite90.suite333",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite333.test336",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1517,
    "___id": "T000002R000413",
    "___s": true
  },
  {
    "__docId__": 414,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test337",
    "testId": 337,
    "memberof": "src/moduleCore.js~suite90.suite333",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite333.test337",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1522,
    "___id": "T000002R000414",
    "___s": true
  },
  {
    "__docId__": 415,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test338",
    "testId": 338,
    "memberof": "src/moduleCore.js~suite90.suite333",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite333.test338",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1527,
    "___id": "T000002R000415",
    "___s": true
  },
  {
    "__docId__": 416,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test339",
    "testId": 339,
    "memberof": "src/moduleCore.js~suite90.suite333",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite333.test339",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1532,
    "___id": "T000002R000416",
    "___s": true
  },
  {
    "__docId__": 417,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test340",
    "testId": 340,
    "memberof": "src/moduleCore.js~suite90.suite333",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite333.test340",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1537,
    "___id": "T000002R000417",
    "___s": true
  },
  {
    "__docId__": 418,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite341",
    "testId": 341,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite341",
    "access": null,
    "description": "assignment expression",
    "lineNumber": 1543,
    "___id": "T000002R000418",
    "___s": true
  },
  {
    "__docId__": 419,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test342",
    "testId": 342,
    "memberof": "src/moduleCore.js~suite90.suite341",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite341.test342",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1557,
    "___id": "T000002R000419",
    "___s": true
  },
  {
    "__docId__": 420,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test343",
    "testId": 343,
    "memberof": "src/moduleCore.js~suite90.suite341",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite341.test343",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1562,
    "___id": "T000002R000420",
    "___s": true
  },
  {
    "__docId__": 421,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test344",
    "testId": 344,
    "memberof": "src/moduleCore.js~suite90.suite341",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite341.test344",
    "access": null,
    "description": "methods is empty",
    "lineNumber": 1567,
    "___id": "T000002R000421",
    "___s": true
  },
  {
    "__docId__": 422,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test345",
    "testId": 345,
    "memberof": "src/moduleCore.js~suite90.suite341",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite341.test345",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1572,
    "___id": "T000002R000422",
    "___s": true
  },
  {
    "__docId__": 423,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test346",
    "testId": 346,
    "memberof": "src/moduleCore.js~suite90.suite341",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite341.test346",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1577,
    "___id": "T000002R000423",
    "___s": true
  },
  {
    "__docId__": 424,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test347",
    "testId": 347,
    "memberof": "src/moduleCore.js~suite90.suite341",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite341.test347",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1582,
    "___id": "T000002R000424",
    "___s": true
  },
  {
    "__docId__": 425,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test348",
    "testId": 348,
    "memberof": "src/moduleCore.js~suite90.suite341",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite341.test348",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1587,
    "___id": "T000002R000425",
    "___s": true
  },
  {
    "__docId__": 426,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite349",
    "testId": 349,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite349",
    "access": null,
    "description": "ternary condtional expression assigned to variable:",
    "lineNumber": 1593,
    "___id": "T000002R000426",
    "___s": true
  },
  {
    "__docId__": 427,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test350",
    "testId": 350,
    "memberof": "src/moduleCore.js~suite90.suite349",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite349.test350",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1607,
    "___id": "T000002R000427",
    "___s": true
  },
  {
    "__docId__": 428,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test351",
    "testId": 351,
    "memberof": "src/moduleCore.js~suite90.suite349",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite349.test351",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1612,
    "___id": "T000002R000428",
    "___s": true
  },
  {
    "__docId__": 429,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test352",
    "testId": 352,
    "memberof": "src/moduleCore.js~suite90.suite349",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite349.test352",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1617,
    "___id": "T000002R000429",
    "___s": true
  },
  {
    "__docId__": 430,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test353",
    "testId": 353,
    "memberof": "src/moduleCore.js~suite90.suite349",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite349.test353",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1622,
    "___id": "T000002R000430",
    "___s": true
  },
  {
    "__docId__": 431,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test354",
    "testId": 354,
    "memberof": "src/moduleCore.js~suite90.suite349",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite349.test354",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1627,
    "___id": "T000002R000431",
    "___s": true
  },
  {
    "__docId__": 432,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test355",
    "testId": 355,
    "memberof": "src/moduleCore.js~suite90.suite349",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite349.test355",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1632,
    "___id": "T000002R000432",
    "___s": true
  },
  {
    "__docId__": 433,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite356",
    "testId": 356,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite356",
    "access": null,
    "description": "nested ternary condtional expression:",
    "lineNumber": 1638,
    "___id": "T000002R000433",
    "___s": true
  },
  {
    "__docId__": 434,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test357",
    "testId": 357,
    "memberof": "src/moduleCore.js~suite90.suite356",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite356.test357",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1652,
    "___id": "T000002R000434",
    "___s": true
  },
  {
    "__docId__": 435,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test358",
    "testId": 358,
    "memberof": "src/moduleCore.js~suite90.suite356",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite356.test358",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1657,
    "___id": "T000002R000435",
    "___s": true
  },
  {
    "__docId__": 436,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test359",
    "testId": 359,
    "memberof": "src/moduleCore.js~suite90.suite356",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite356.test359",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1662,
    "___id": "T000002R000436",
    "___s": true
  },
  {
    "__docId__": 437,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test360",
    "testId": 360,
    "memberof": "src/moduleCore.js~suite90.suite356",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite356.test360",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1667,
    "___id": "T000002R000437",
    "___s": true
  },
  {
    "__docId__": 438,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test361",
    "testId": 361,
    "memberof": "src/moduleCore.js~suite90.suite356",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite356.test361",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1672,
    "___id": "T000002R000438",
    "___s": true
  },
  {
    "__docId__": 439,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test362",
    "testId": 362,
    "memberof": "src/moduleCore.js~suite90.suite356",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite356.test362",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1677,
    "___id": "T000002R000439",
    "___s": true
  },
  {
    "__docId__": 440,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite363",
    "testId": 363,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite363",
    "access": null,
    "description": "logical or expression assigned to variable:",
    "lineNumber": 1683,
    "___id": "T000002R000440",
    "___s": true
  },
  {
    "__docId__": 441,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test364",
    "testId": 364,
    "memberof": "src/moduleCore.js~suite90.suite363",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite363.test364",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1697,
    "___id": "T000002R000441",
    "___s": true
  },
  {
    "__docId__": 442,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test365",
    "testId": 365,
    "memberof": "src/moduleCore.js~suite90.suite363",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite363.test365",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1702,
    "___id": "T000002R000442",
    "___s": true
  },
  {
    "__docId__": 443,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test366",
    "testId": 366,
    "memberof": "src/moduleCore.js~suite90.suite363",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite363.test366",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1707,
    "___id": "T000002R000443",
    "___s": true
  },
  {
    "__docId__": 444,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test367",
    "testId": 367,
    "memberof": "src/moduleCore.js~suite90.suite363",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite363.test367",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1712,
    "___id": "T000002R000444",
    "___s": true
  },
  {
    "__docId__": 445,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test368",
    "testId": 368,
    "memberof": "src/moduleCore.js~suite90.suite363",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite363.test368",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1717,
    "___id": "T000002R000445",
    "___s": true
  },
  {
    "__docId__": 446,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test369",
    "testId": 369,
    "memberof": "src/moduleCore.js~suite90.suite363",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite363.test369",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1722,
    "___id": "T000002R000446",
    "___s": true
  },
  {
    "__docId__": 447,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite370",
    "testId": 370,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite370",
    "access": null,
    "description": "anonymous function assigned to variable:",
    "lineNumber": 1728,
    "___id": "T000002R000447",
    "___s": true
  },
  {
    "__docId__": 448,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test371",
    "testId": 371,
    "memberof": "src/moduleCore.js~suite90.suite370",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite370.test371",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1742,
    "___id": "T000002R000448",
    "___s": true
  },
  {
    "__docId__": 449,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test372",
    "testId": 372,
    "memberof": "src/moduleCore.js~suite90.suite370",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite370.test372",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 1747,
    "___id": "T000002R000449",
    "___s": true
  },
  {
    "__docId__": 450,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test373",
    "testId": 373,
    "memberof": "src/moduleCore.js~suite90.suite370",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite370.test373",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 1752,
    "___id": "T000002R000450",
    "___s": true
  },
  {
    "__docId__": 451,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test374",
    "testId": 374,
    "memberof": "src/moduleCore.js~suite90.suite370",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite370.test374",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1757,
    "___id": "T000002R000451",
    "___s": true
  },
  {
    "__docId__": 452,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test375",
    "testId": 375,
    "memberof": "src/moduleCore.js~suite90.suite370",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite370.test375",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1762,
    "___id": "T000002R000452",
    "___s": true
  },
  {
    "__docId__": 453,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test376",
    "testId": 376,
    "memberof": "src/moduleCore.js~suite90.suite370",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite370.test376",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1767,
    "___id": "T000002R000453",
    "___s": true
  },
  {
    "__docId__": 454,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test377",
    "testId": 377,
    "memberof": "src/moduleCore.js~suite90.suite370",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite370.test377",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1772,
    "___id": "T000002R000454",
    "___s": true
  },
  {
    "__docId__": 455,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite378",
    "testId": 378,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite378",
    "access": null,
    "description": "named function assigned to variable:",
    "lineNumber": 1778,
    "___id": "T000002R000455",
    "___s": true
  },
  {
    "__docId__": 456,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test379",
    "testId": 379,
    "memberof": "src/moduleCore.js~suite90.suite378",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite378.test379",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1792,
    "___id": "T000002R000456",
    "___s": true
  },
  {
    "__docId__": 457,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test380",
    "testId": 380,
    "memberof": "src/moduleCore.js~suite90.suite378",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite378.test380",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 1797,
    "___id": "T000002R000457",
    "___s": true
  },
  {
    "__docId__": 458,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test381",
    "testId": 381,
    "memberof": "src/moduleCore.js~suite90.suite378",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite378.test381",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1802,
    "___id": "T000002R000458",
    "___s": true
  },
  {
    "__docId__": 459,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test382",
    "testId": 382,
    "memberof": "src/moduleCore.js~suite90.suite378",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite378.test382",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1807,
    "___id": "T000002R000459",
    "___s": true
  },
  {
    "__docId__": 460,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite383",
    "testId": 383,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite383",
    "access": null,
    "description": "ternary condtional expression returned from function:",
    "lineNumber": 1813,
    "___id": "T000002R000460",
    "___s": true
  },
  {
    "__docId__": 461,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test384",
    "testId": 384,
    "memberof": "src/moduleCore.js~suite90.suite383",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite383.test384",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1827,
    "___id": "T000002R000461",
    "___s": true
  },
  {
    "__docId__": 462,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test385",
    "testId": 385,
    "memberof": "src/moduleCore.js~suite90.suite383",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite383.test385",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1832,
    "___id": "T000002R000462",
    "___s": true
  },
  {
    "__docId__": 463,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test386",
    "testId": 386,
    "memberof": "src/moduleCore.js~suite90.suite383",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite383.test386",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1837,
    "___id": "T000002R000463",
    "___s": true
  },
  {
    "__docId__": 464,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test387",
    "testId": 387,
    "memberof": "src/moduleCore.js~suite90.suite383",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite383.test387",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1842,
    "___id": "T000002R000464",
    "___s": true
  },
  {
    "__docId__": 465,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test388",
    "testId": 388,
    "memberof": "src/moduleCore.js~suite90.suite383",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite383.test388",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1847,
    "___id": "T000002R000465",
    "___s": true
  },
  {
    "__docId__": 466,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test389",
    "testId": 389,
    "memberof": "src/moduleCore.js~suite90.suite383",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite383.test389",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1852,
    "___id": "T000002R000466",
    "___s": true
  },
  {
    "__docId__": 467,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test390",
    "testId": 390,
    "memberof": "src/moduleCore.js~suite90.suite383",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite383.test390",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1857,
    "___id": "T000002R000467",
    "___s": true
  },
  {
    "__docId__": 468,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite391",
    "testId": 391,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite391",
    "access": null,
    "description": "logical or expression returned from function:",
    "lineNumber": 1863,
    "___id": "T000002R000468",
    "___s": true
  },
  {
    "__docId__": 469,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test392",
    "testId": 392,
    "memberof": "src/moduleCore.js~suite90.suite391",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite391.test392",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1877,
    "___id": "T000002R000469",
    "___s": true
  },
  {
    "__docId__": 470,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test393",
    "testId": 393,
    "memberof": "src/moduleCore.js~suite90.suite391",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite391.test393",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1882,
    "___id": "T000002R000470",
    "___s": true
  },
  {
    "__docId__": 471,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test394",
    "testId": 394,
    "memberof": "src/moduleCore.js~suite90.suite391",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite391.test394",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1887,
    "___id": "T000002R000471",
    "___s": true
  },
  {
    "__docId__": 472,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test395",
    "testId": 395,
    "memberof": "src/moduleCore.js~suite90.suite391",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite391.test395",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1892,
    "___id": "T000002R000472",
    "___s": true
  },
  {
    "__docId__": 473,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test396",
    "testId": 396,
    "memberof": "src/moduleCore.js~suite90.suite391",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite391.test396",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1897,
    "___id": "T000002R000473",
    "___s": true
  },
  {
    "__docId__": 474,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite397",
    "testId": 397,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite397",
    "access": null,
    "description": "anonymous function returned from function:",
    "lineNumber": 1903,
    "___id": "T000002R000474",
    "___s": true
  },
  {
    "__docId__": 475,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test398",
    "testId": 398,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test398",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1917,
    "___id": "T000002R000475",
    "___s": true
  },
  {
    "__docId__": 476,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test399",
    "testId": 399,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test399",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 1922,
    "___id": "T000002R000476",
    "___s": true
  },
  {
    "__docId__": 477,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test400",
    "testId": 400,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test400",
    "access": null,
    "description": "first method has correct name",
    "lineNumber": 1927,
    "___id": "T000002R000477",
    "___s": true
  },
  {
    "__docId__": 478,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test401",
    "testId": 401,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test401",
    "access": null,
    "description": "second method is anonymous",
    "lineNumber": 1932,
    "___id": "T000002R000478",
    "___s": true
  },
  {
    "__docId__": 479,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test402",
    "testId": 402,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test402",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1937,
    "___id": "T000002R000479",
    "___s": true
  },
  {
    "__docId__": 480,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test403",
    "testId": 403,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test403",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1942,
    "___id": "T000002R000480",
    "___s": true
  },
  {
    "__docId__": 481,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test404",
    "testId": 404,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test404",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1947,
    "___id": "T000002R000481",
    "___s": true
  },
  {
    "__docId__": 482,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test405",
    "testId": 405,
    "memberof": "src/moduleCore.js~suite90.suite397",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite397.test405",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1952,
    "___id": "T000002R000482",
    "___s": true
  },
  {
    "__docId__": 483,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite406",
    "testId": 406,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite406",
    "access": null,
    "description": "named function returned from function:",
    "lineNumber": 1958,
    "___id": "T000002R000483",
    "___s": true
  },
  {
    "__docId__": 484,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test407",
    "testId": 407,
    "memberof": "src/moduleCore.js~suite90.suite406",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite406.test407",
    "access": null,
    "description": "second method has correct name",
    "lineNumber": 1972,
    "___id": "T000002R000484",
    "___s": true
  },
  {
    "__docId__": 485,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test408",
    "testId": 408,
    "memberof": "src/moduleCore.js~suite90.suite406",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite406.test408",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1977,
    "___id": "T000002R000485",
    "___s": true
  },
  {
    "__docId__": 486,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test409",
    "testId": 409,
    "memberof": "src/moduleCore.js~suite90.suite406",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite406.test409",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1982,
    "___id": "T000002R000486",
    "___s": true
  },
  {
    "__docId__": 487,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite410",
    "testId": 410,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite410",
    "access": null,
    "description": "ternary condtional expression passed as argument:",
    "lineNumber": 1988,
    "___id": "T000002R000487",
    "___s": true
  },
  {
    "__docId__": 488,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test411",
    "testId": 411,
    "memberof": "src/moduleCore.js~suite90.suite410",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite410.test411",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2002,
    "___id": "T000002R000488",
    "___s": true
  },
  {
    "__docId__": 489,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test412",
    "testId": 412,
    "memberof": "src/moduleCore.js~suite90.suite410",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite410.test412",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2007,
    "___id": "T000002R000489",
    "___s": true
  },
  {
    "__docId__": 490,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test413",
    "testId": 413,
    "memberof": "src/moduleCore.js~suite90.suite410",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite410.test413",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2012,
    "___id": "T000002R000490",
    "___s": true
  },
  {
    "__docId__": 491,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test414",
    "testId": 414,
    "memberof": "src/moduleCore.js~suite90.suite410",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite410.test414",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2017,
    "___id": "T000002R000491",
    "___s": true
  },
  {
    "__docId__": 492,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test415",
    "testId": 415,
    "memberof": "src/moduleCore.js~suite90.suite410",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite410.test415",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2022,
    "___id": "T000002R000492",
    "___s": true
  },
  {
    "__docId__": 493,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite416",
    "testId": 416,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite416",
    "access": null,
    "description": "logical or expression passed as argument:",
    "lineNumber": 2028,
    "___id": "T000002R000493",
    "___s": true
  },
  {
    "__docId__": 494,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test417",
    "testId": 417,
    "memberof": "src/moduleCore.js~suite90.suite416",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite416.test417",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2042,
    "___id": "T000002R000494",
    "___s": true
  },
  {
    "__docId__": 495,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite418",
    "testId": 418,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite418",
    "access": null,
    "description": "anonymous function passed as argument:",
    "lineNumber": 2048,
    "___id": "T000002R000495",
    "___s": true
  },
  {
    "__docId__": 496,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test419",
    "testId": 419,
    "memberof": "src/moduleCore.js~suite90.suite418",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite418.test419",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2062,
    "___id": "T000002R000496",
    "___s": true
  },
  {
    "__docId__": 497,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test420",
    "testId": 420,
    "memberof": "src/moduleCore.js~suite90.suite418",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite418.test420",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2067,
    "___id": "T000002R000497",
    "___s": true
  },
  {
    "__docId__": 498,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test421",
    "testId": 421,
    "memberof": "src/moduleCore.js~suite90.suite418",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite418.test421",
    "access": null,
    "description": "method is anonymous",
    "lineNumber": 2072,
    "___id": "T000002R000498",
    "___s": true
  },
  {
    "__docId__": 499,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test422",
    "testId": 422,
    "memberof": "src/moduleCore.js~suite90.suite418",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite418.test422",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2077,
    "___id": "T000002R000499",
    "___s": true
  },
  {
    "__docId__": 500,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test423",
    "testId": 423,
    "memberof": "src/moduleCore.js~suite90.suite418",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite418.test423",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2082,
    "___id": "T000002R000500",
    "___s": true
  },
  {
    "__docId__": 501,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test424",
    "testId": 424,
    "memberof": "src/moduleCore.js~suite90.suite418",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite418.test424",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2087,
    "___id": "T000002R000501",
    "___s": true
  },
  {
    "__docId__": 502,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test425",
    "testId": 425,
    "memberof": "src/moduleCore.js~suite90.suite418",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite418.test425",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2092,
    "___id": "T000002R000502",
    "___s": true
  },
  {
    "__docId__": 503,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite426",
    "testId": 426,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite426",
    "access": null,
    "description": "named function passed as argument:",
    "lineNumber": 2098,
    "___id": "T000002R000503",
    "___s": true
  },
  {
    "__docId__": 504,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test427",
    "testId": 427,
    "memberof": "src/moduleCore.js~suite90.suite426",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite426.test427",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 2112,
    "___id": "T000002R000504",
    "___s": true
  },
  {
    "__docId__": 505,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite428",
    "testId": 428,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite428",
    "access": null,
    "description": "logical AND expression:",
    "lineNumber": 2118,
    "___id": "T000002R000505",
    "___s": true
  },
  {
    "__docId__": 506,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test429",
    "testId": 429,
    "memberof": "src/moduleCore.js~suite90.suite428",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite428.test429",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2120,
    "___id": "T000002R000506",
    "___s": true
  },
  {
    "__docId__": 507,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite430",
    "testId": 430,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite430",
    "access": null,
    "description": "logical OR expression with logicalor false:",
    "lineNumber": 2127,
    "___id": "T000002R000507",
    "___s": true
  },
  {
    "__docId__": 508,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test431",
    "testId": 431,
    "memberof": "src/moduleCore.js~suite90.suite430",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite430.test431",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2141,
    "___id": "T000002R000508",
    "___s": true
  },
  {
    "__docId__": 509,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite432",
    "testId": 432,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite432",
    "access": null,
    "description": "switch statement with switchcase false:",
    "lineNumber": 2147,
    "___id": "T000002R000509",
    "___s": true
  },
  {
    "__docId__": 510,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test433",
    "testId": 433,
    "memberof": "src/moduleCore.js~suite90.suite432",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite432.test433",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2163,
    "___id": "T000002R000510",
    "___s": true
  },
  {
    "__docId__": 511,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite434",
    "testId": 434,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite434",
    "access": null,
    "description": "for...in loop with forin true:",
    "lineNumber": 2169,
    "___id": "T000002R000511",
    "___s": true
  },
  {
    "__docId__": 512,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test435",
    "testId": 435,
    "memberof": "src/moduleCore.js~suite90.suite434",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite434.test435",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2184,
    "___id": "T000002R000512",
    "___s": true
  },
  {
    "__docId__": 513,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite436",
    "testId": 436,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite436",
    "access": null,
    "description": "try...catch with trycatch true:",
    "lineNumber": 2190,
    "___id": "T000002R000513",
    "___s": true
  },
  {
    "__docId__": 514,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test437",
    "testId": 437,
    "memberof": "src/moduleCore.js~suite90.suite436",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite436.test437",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2204,
    "___id": "T000002R000514",
    "___s": true
  },
  {
    "__docId__": 515,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite438",
    "testId": 438,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite438",
    "access": null,
    "description": "IIFE:",
    "lineNumber": 2210,
    "___id": "T000002R000515",
    "___s": true
  },
  {
    "__docId__": 516,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test439",
    "testId": 439,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test439",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2225,
    "___id": "T000002R000516",
    "___s": true
  },
  {
    "__docId__": 517,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test440",
    "testId": 440,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test440",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2230,
    "___id": "T000002R000517",
    "___s": true
  },
  {
    "__docId__": 518,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test441",
    "testId": 441,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test441",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 2235,
    "___id": "T000002R000518",
    "___s": true
  },
  {
    "__docId__": 519,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test442",
    "testId": 442,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test442",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 2240,
    "___id": "T000002R000519",
    "___s": true
  },
  {
    "__docId__": 520,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test443",
    "testId": 443,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test443",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2245,
    "___id": "T000002R000520",
    "___s": true
  },
  {
    "__docId__": 521,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test444",
    "testId": 444,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test444",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2250,
    "___id": "T000002R000521",
    "___s": true
  },
  {
    "__docId__": 522,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test445",
    "testId": 445,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test445",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2255,
    "___id": "T000002R000522",
    "___s": true
  },
  {
    "__docId__": 523,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test446",
    "testId": 446,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test446",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2260,
    "___id": "T000002R000523",
    "___s": true
  },
  {
    "__docId__": 524,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test447",
    "testId": 447,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test447",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2265,
    "___id": "T000002R000524",
    "___s": true
  },
  {
    "__docId__": 525,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test448",
    "testId": 448,
    "memberof": "src/moduleCore.js~suite90.suite438",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite438.test448",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2270,
    "___id": "T000002R000525",
    "___s": true
  },
  {
    "__docId__": 526,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite449",
    "testId": 449,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite449",
    "access": null,
    "description": "logical and condition:",
    "lineNumber": 2276,
    "___id": "T000002R000526",
    "___s": true
  },
  {
    "__docId__": 527,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test450",
    "testId": 450,
    "memberof": "src/moduleCore.js~suite90.suite449",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite449.test450",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2290,
    "___id": "T000002R000527",
    "___s": true
  },
  {
    "__docId__": 528,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test451",
    "testId": 451,
    "memberof": "src/moduleCore.js~suite90.suite449",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite449.test451",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2295,
    "___id": "T000002R000528",
    "___s": true
  },
  {
    "__docId__": 529,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test452",
    "testId": 452,
    "memberof": "src/moduleCore.js~suite90.suite449",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite449.test452",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2300,
    "___id": "T000002R000529",
    "___s": true
  },
  {
    "__docId__": 530,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test453",
    "testId": 453,
    "memberof": "src/moduleCore.js~suite90.suite449",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite449.test453",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2305,
    "___id": "T000002R000530",
    "___s": true
  },
  {
    "__docId__": 531,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test454",
    "testId": 454,
    "memberof": "src/moduleCore.js~suite90.suite449",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite449.test454",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2310,
    "___id": "T000002R000531",
    "___s": true
  },
  {
    "__docId__": 532,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test455",
    "testId": 455,
    "memberof": "src/moduleCore.js~suite90.suite449",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite449.test455",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2315,
    "___id": "T000002R000532",
    "___s": true
  },
  {
    "__docId__": 533,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite456",
    "testId": 456,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite456",
    "access": null,
    "description": "call on function object:",
    "lineNumber": 2321,
    "___id": "T000002R000533",
    "___s": true
  },
  {
    "__docId__": 534,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test457",
    "testId": 457,
    "memberof": "src/moduleCore.js~suite90.suite456",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite456.test457",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2335,
    "___id": "T000002R000534",
    "___s": true
  },
  {
    "__docId__": 535,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test458",
    "testId": 458,
    "memberof": "src/moduleCore.js~suite90.suite456",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite456.test458",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2340,
    "___id": "T000002R000535",
    "___s": true
  },
  {
    "__docId__": 536,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test459",
    "testId": 459,
    "memberof": "src/moduleCore.js~suite90.suite456",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite456.test459",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2345,
    "___id": "T000002R000536",
    "___s": true
  },
  {
    "__docId__": 537,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test460",
    "testId": 460,
    "memberof": "src/moduleCore.js~suite90.suite456",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite456.test460",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2350,
    "___id": "T000002R000537",
    "___s": true
  },
  {
    "__docId__": 538,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test461",
    "testId": 461,
    "memberof": "src/moduleCore.js~suite90.suite456",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite456.test461",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2355,
    "___id": "T000002R000538",
    "___s": true
  },
  {
    "__docId__": 539,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test462",
    "testId": 462,
    "memberof": "src/moduleCore.js~suite90.suite456",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite456.test462",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2360,
    "___id": "T000002R000539",
    "___s": true
  },
  {
    "__docId__": 540,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite463",
    "testId": 463,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite463",
    "access": null,
    "description": "anonymous function assigned to property:",
    "lineNumber": 2366,
    "___id": "T000002R000540",
    "___s": true
  },
  {
    "__docId__": 541,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test464",
    "testId": 464,
    "memberof": "src/moduleCore.js~suite90.suite463",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite463.test464",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2380,
    "___id": "T000002R000541",
    "___s": true
  },
  {
    "__docId__": 542,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test465",
    "testId": 465,
    "memberof": "src/moduleCore.js~suite90.suite463",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite463.test465",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2385,
    "___id": "T000002R000542",
    "___s": true
  },
  {
    "__docId__": 543,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test466",
    "testId": 466,
    "memberof": "src/moduleCore.js~suite90.suite463",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite463.test466",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 2390,
    "___id": "T000002R000543",
    "___s": true
  },
  {
    "__docId__": 544,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test467",
    "testId": 467,
    "memberof": "src/moduleCore.js~suite90.suite463",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite463.test467",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2395,
    "___id": "T000002R000544",
    "___s": true
  },
  {
    "__docId__": 545,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test468",
    "testId": 468,
    "memberof": "src/moduleCore.js~suite90.suite463",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite463.test468",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2400,
    "___id": "T000002R000545",
    "___s": true
  },
  {
    "__docId__": 546,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test469",
    "testId": 469,
    "memberof": "src/moduleCore.js~suite90.suite463",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite463.test469",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2405,
    "___id": "T000002R000546",
    "___s": true
  },
  {
    "__docId__": 547,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test470",
    "testId": 470,
    "memberof": "src/moduleCore.js~suite90.suite463",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite463.test470",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2410,
    "___id": "T000002R000547",
    "___s": true
  },
  {
    "__docId__": 548,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite471",
    "testId": 471,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite471",
    "access": null,
    "description": "anonymous function assigned to property of literal:",
    "lineNumber": 2416,
    "___id": "T000002R000548",
    "___s": true
  },
  {
    "__docId__": 549,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test472",
    "testId": 472,
    "memberof": "src/moduleCore.js~suite90.suite471",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite471.test472",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2430,
    "___id": "T000002R000549",
    "___s": true
  },
  {
    "__docId__": 550,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test473",
    "testId": 473,
    "memberof": "src/moduleCore.js~suite90.suite471",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite471.test473",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2435,
    "___id": "T000002R000550",
    "___s": true
  },
  {
    "__docId__": 551,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test474",
    "testId": 474,
    "memberof": "src/moduleCore.js~suite90.suite471",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite471.test474",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 2440,
    "___id": "T000002R000551",
    "___s": true
  },
  {
    "__docId__": 552,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite475",
    "testId": 475,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite475",
    "access": null,
    "description": "empty object literal:",
    "lineNumber": 2446,
    "___id": "T000002R000552",
    "___s": true
  },
  {
    "__docId__": 553,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test476",
    "testId": 476,
    "memberof": "src/moduleCore.js~suite90.suite475",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite475.test476",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2460,
    "___id": "T000002R000553",
    "___s": true
  },
  {
    "__docId__": 554,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test477",
    "testId": 477,
    "memberof": "src/moduleCore.js~suite90.suite475",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite475.test477",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2465,
    "___id": "T000002R000554",
    "___s": true
  },
  {
    "__docId__": 555,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test478",
    "testId": 478,
    "memberof": "src/moduleCore.js~suite90.suite475",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite475.test478",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2470,
    "___id": "T000002R000555",
    "___s": true
  },
  {
    "__docId__": 556,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test479",
    "testId": 479,
    "memberof": "src/moduleCore.js~suite90.suite475",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite475.test479",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2475,
    "___id": "T000002R000556",
    "___s": true
  },
  {
    "__docId__": 557,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test480",
    "testId": 480,
    "memberof": "src/moduleCore.js~suite90.suite475",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite475.test480",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2480,
    "___id": "T000002R000557",
    "___s": true
  },
  {
    "__docId__": 558,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test481",
    "testId": 481,
    "memberof": "src/moduleCore.js~suite90.suite475",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite475.test481",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2485,
    "___id": "T000002R000558",
    "___s": true
  },
  {
    "__docId__": 559,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test482",
    "testId": 482,
    "memberof": "src/moduleCore.js~suite90.suite475",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite475.test482",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2490,
    "___id": "T000002R000559",
    "___s": true
  },
  {
    "__docId__": 560,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite483",
    "testId": 483,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite483",
    "access": null,
    "description": "function property of literal object:",
    "lineNumber": 2496,
    "___id": "T000002R000560",
    "___s": true
  },
  {
    "__docId__": 561,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test484",
    "testId": 484,
    "memberof": "src/moduleCore.js~suite90.suite483",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite483.test484",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2510,
    "___id": "T000002R000561",
    "___s": true
  },
  {
    "__docId__": 562,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test485",
    "testId": 485,
    "memberof": "src/moduleCore.js~suite90.suite483",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite483.test485",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2515,
    "___id": "T000002R000562",
    "___s": true
  },
  {
    "__docId__": 563,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test486",
    "testId": 486,
    "memberof": "src/moduleCore.js~suite90.suite483",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite483.test486",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 2520,
    "___id": "T000002R000563",
    "___s": true
  },
  {
    "__docId__": 564,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test487",
    "testId": 487,
    "memberof": "src/moduleCore.js~suite90.suite483",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite483.test487",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2525,
    "___id": "T000002R000564",
    "___s": true
  },
  {
    "__docId__": 565,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test488",
    "testId": 488,
    "memberof": "src/moduleCore.js~suite90.suite483",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite483.test488",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2530,
    "___id": "T000002R000565",
    "___s": true
  },
  {
    "__docId__": 566,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test489",
    "testId": 489,
    "memberof": "src/moduleCore.js~suite90.suite483",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite483.test489",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2535,
    "___id": "T000002R000566",
    "___s": true
  },
  {
    "__docId__": 567,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test490",
    "testId": 490,
    "memberof": "src/moduleCore.js~suite90.suite483",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite483.test490",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2540,
    "___id": "T000002R000567",
    "___s": true
  },
  {
    "__docId__": 568,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite491",
    "testId": 491,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite491",
    "access": null,
    "description": "duplicate function properties of literal object:",
    "lineNumber": 2546,
    "___id": "T000002R000568",
    "___s": true
  },
  {
    "__docId__": 569,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test492",
    "testId": 492,
    "memberof": "src/moduleCore.js~suite90.suite491",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite491.test492",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2561,
    "___id": "T000002R000569",
    "___s": true
  },
  {
    "__docId__": 570,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test493",
    "testId": 493,
    "memberof": "src/moduleCore.js~suite90.suite491",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite491.test493",
    "access": null,
    "description": "first method has correct name",
    "lineNumber": 2566,
    "___id": "T000002R000570",
    "___s": true
  },
  {
    "__docId__": 571,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test494",
    "testId": 494,
    "memberof": "src/moduleCore.js~suite90.suite491",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite491.test494",
    "access": null,
    "description": "second method has correct name",
    "lineNumber": 2571,
    "___id": "T000002R000571",
    "___s": true
  },
  {
    "__docId__": 572,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test495",
    "testId": 495,
    "memberof": "src/moduleCore.js~suite90.suite491",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite491.test495",
    "access": null,
    "description": "first method has correct cyclomatic complexity",
    "lineNumber": 2576,
    "___id": "T000002R000572",
    "___s": true
  },
  {
    "__docId__": 573,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test496",
    "testId": 496,
    "memberof": "src/moduleCore.js~suite90.suite491",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite491.test496",
    "access": null,
    "description": "second method has correct cyclomatic complexity",
    "lineNumber": 2581,
    "___id": "T000002R000573",
    "___s": true
  },
  {
    "__docId__": 574,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test497",
    "testId": 497,
    "memberof": "src/moduleCore.js~suite90.suite491",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite491.test497",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2586,
    "___id": "T000002R000574",
    "___s": true
  },
  {
    "__docId__": 575,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite498",
    "testId": 498,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite498",
    "access": null,
    "description": "throw exception:",
    "lineNumber": 2592,
    "___id": "T000002R000575",
    "___s": true
  },
  {
    "__docId__": 576,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test499",
    "testId": 499,
    "memberof": "src/moduleCore.js~suite90.suite498",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite498.test499",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2606,
    "___id": "T000002R000576",
    "___s": true
  },
  {
    "__docId__": 577,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test500",
    "testId": 500,
    "memberof": "src/moduleCore.js~suite90.suite498",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite498.test500",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2611,
    "___id": "T000002R000577",
    "___s": true
  },
  {
    "__docId__": 578,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test501",
    "testId": 501,
    "memberof": "src/moduleCore.js~suite90.suite498",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite498.test501",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2616,
    "___id": "T000002R000578",
    "___s": true
  },
  {
    "__docId__": 579,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test502",
    "testId": 502,
    "memberof": "src/moduleCore.js~suite90.suite498",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite498.test502",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2621,
    "___id": "T000002R000579",
    "___s": true
  },
  {
    "__docId__": 580,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test503",
    "testId": 503,
    "memberof": "src/moduleCore.js~suite90.suite498",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite498.test503",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2626,
    "___id": "T000002R000580",
    "___s": true
  },
  {
    "__docId__": 581,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test504",
    "testId": 504,
    "memberof": "src/moduleCore.js~suite90.suite498",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite498.test504",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2631,
    "___id": "T000002R000581",
    "___s": true
  },
  {
    "__docId__": 582,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite505",
    "testId": 505,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite505",
    "access": null,
    "description": "prefix and postfix increment:",
    "lineNumber": 2637,
    "___id": "T000002R000582",
    "___s": true
  },
  {
    "__docId__": 583,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test506",
    "testId": 506,
    "memberof": "src/moduleCore.js~suite90.suite505",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite505.test506",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2651,
    "___id": "T000002R000583",
    "___s": true
  },
  {
    "__docId__": 584,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test507",
    "testId": 507,
    "memberof": "src/moduleCore.js~suite90.suite505",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite505.test507",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2656,
    "___id": "T000002R000584",
    "___s": true
  },
  {
    "__docId__": 585,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test508",
    "testId": 508,
    "memberof": "src/moduleCore.js~suite90.suite505",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite505.test508",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2661,
    "___id": "T000002R000585",
    "___s": true
  },
  {
    "__docId__": 586,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test509",
    "testId": 509,
    "memberof": "src/moduleCore.js~suite90.suite505",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite505.test509",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2666,
    "___id": "T000002R000586",
    "___s": true
  },
  {
    "__docId__": 587,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test510",
    "testId": 510,
    "memberof": "src/moduleCore.js~suite90.suite505",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite505.test510",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2671,
    "___id": "T000002R000587",
    "___s": true
  },
  {
    "__docId__": 588,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test511",
    "testId": 511,
    "memberof": "src/moduleCore.js~suite90.suite505",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite505.test511",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2676,
    "___id": "T000002R000588",
    "___s": true
  },
  {
    "__docId__": 589,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test512",
    "testId": 512,
    "memberof": "src/moduleCore.js~suite90.suite505",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite505.test512",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2681,
    "___id": "T000002R000589",
    "___s": true
  },
  {
    "__docId__": 590,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite513",
    "testId": 513,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite513",
    "access": null,
    "description": "array literal:",
    "lineNumber": 2687,
    "___id": "T000002R000590",
    "___s": true
  },
  {
    "__docId__": 591,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test514",
    "testId": 514,
    "memberof": "src/moduleCore.js~suite90.suite513",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite513.test514",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2701,
    "___id": "T000002R000591",
    "___s": true
  },
  {
    "__docId__": 592,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test515",
    "testId": 515,
    "memberof": "src/moduleCore.js~suite90.suite513",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite513.test515",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2706,
    "___id": "T000002R000592",
    "___s": true
  },
  {
    "__docId__": 593,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test516",
    "testId": 516,
    "memberof": "src/moduleCore.js~suite90.suite513",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite513.test516",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2711,
    "___id": "T000002R000593",
    "___s": true
  },
  {
    "__docId__": 594,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test517",
    "testId": 517,
    "memberof": "src/moduleCore.js~suite90.suite513",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite513.test517",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2716,
    "___id": "T000002R000594",
    "___s": true
  },
  {
    "__docId__": 595,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test518",
    "testId": 518,
    "memberof": "src/moduleCore.js~suite90.suite513",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite513.test518",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2721,
    "___id": "T000002R000595",
    "___s": true
  },
  {
    "__docId__": 596,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test519",
    "testId": 519,
    "memberof": "src/moduleCore.js~suite90.suite513",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite513.test519",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2726,
    "___id": "T000002R000596",
    "___s": true
  },
  {
    "__docId__": 597,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test520",
    "testId": 520,
    "memberof": "src/moduleCore.js~suite90.suite513",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite513.test520",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2731,
    "___id": "T000002R000597",
    "___s": true
  },
  {
    "__docId__": 598,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite521",
    "testId": 521,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite521",
    "access": null,
    "description": "multiple physical lines:",
    "lineNumber": 2737,
    "___id": "T000002R000598",
    "___s": true
  },
  {
    "__docId__": 599,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test522",
    "testId": 522,
    "memberof": "src/moduleCore.js~suite90.suite521",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite521.test522",
    "access": null,
    "description": "report has correct line start / end",
    "lineNumber": 2753,
    "___id": "T000002R000599",
    "___s": true
  },
  {
    "__docId__": 600,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test523",
    "testId": 523,
    "memberof": "src/moduleCore.js~suite90.suite521",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite521.test523",
    "access": null,
    "description": "methodAggregate has correct physical lines of code",
    "lineNumber": 2770,
    "___id": "T000002R000600",
    "___s": true
  },
  {
    "__docId__": 601,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test524",
    "testId": 524,
    "memberof": "src/moduleCore.js~suite90.suite521",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite521.test524",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2785,
    "___id": "T000002R000601",
    "___s": true
  },
  {
    "__docId__": 602,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test525",
    "testId": 525,
    "memberof": "src/moduleCore.js~suite90.suite521",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite521.test525",
    "access": null,
    "description": "methods has correct length",
    "lineNumber": 2790,
    "___id": "T000002R000602",
    "___s": true
  },
  {
    "__docId__": 603,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test526",
    "testId": 526,
    "memberof": "src/moduleCore.js~suite90.suite521",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite521.test526",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 2795,
    "___id": "T000002R000603",
    "___s": true
  },
  {
    "__docId__": 604,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test527",
    "testId": 527,
    "memberof": "src/moduleCore.js~suite90.suite521",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite521.test527",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 2800,
    "___id": "T000002R000604",
    "___s": true
  },
  {
    "__docId__": 605,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test528",
    "testId": 528,
    "memberof": "src/moduleCore.js~suite90.suite521",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite521.test528",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2805,
    "___id": "T000002R000605",
    "___s": true
  },
  {
    "__docId__": 606,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite529",
    "testId": 529,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite529",
    "access": null,
    "description": "multiple functions:",
    "lineNumber": 2811,
    "___id": "T000002R000606",
    "___s": true
  },
  {
    "__docId__": 607,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test530",
    "testId": 530,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test530",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2827,
    "___id": "T000002R000607",
    "___s": true
  },
  {
    "__docId__": 608,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test531",
    "testId": 531,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test531",
    "access": null,
    "description": "first method has correct parameter count",
    "lineNumber": 2832,
    "___id": "T000002R000608",
    "___s": true
  },
  {
    "__docId__": 609,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test532",
    "testId": 532,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test532",
    "access": null,
    "description": "second method has correct parameter count",
    "lineNumber": 2837,
    "___id": "T000002R000609",
    "___s": true
  },
  {
    "__docId__": 610,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test533",
    "testId": 533,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test533",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2842,
    "___id": "T000002R000610",
    "___s": true
  },
  {
    "__docId__": 611,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test534",
    "testId": 534,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test534",
    "access": null,
    "description": "mean logical LOC is correct",
    "lineNumber": 2847,
    "___id": "T000002R000611",
    "___s": true
  },
  {
    "__docId__": 612,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test535",
    "testId": 535,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test535",
    "access": null,
    "description": "mean cyclomatic complexity is correct",
    "lineNumber": 2852,
    "___id": "T000002R000612",
    "___s": true
  },
  {
    "__docId__": 613,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test536",
    "testId": 536,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test536",
    "access": null,
    "description": "mean Halstead effort is correct",
    "lineNumber": 2857,
    "___id": "T000002R000613",
    "___s": true
  },
  {
    "__docId__": 614,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test537",
    "testId": 537,
    "memberof": "src/moduleCore.js~suite90.suite529",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite529.test537",
    "access": null,
    "description": "mean parameter count is correct",
    "lineNumber": 2862,
    "___id": "T000002R000614",
    "___s": true
  },
  {
    "__docId__": 615,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite538",
    "testId": 538,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite538",
    "access": null,
    "description": "issue 3 / reddit.ISV_Damocles:",
    "lineNumber": 2868,
    "___id": "T000002R000615",
    "___s": true
  },
  {
    "__docId__": 616,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test539",
    "testId": 539,
    "memberof": "src/moduleCore.js~suite90.suite538",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite538.test539",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2884,
    "___id": "T000002R000616",
    "___s": true
  },
  {
    "__docId__": 617,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite540",
    "testId": 540,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite540",
    "access": null,
    "description": "empty return:",
    "lineNumber": 2890,
    "___id": "T000002R000617",
    "___s": true
  },
  {
    "__docId__": 618,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test541",
    "testId": 541,
    "memberof": "src/moduleCore.js~suite90.suite540",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite540.test541",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2904,
    "___id": "T000002R000618",
    "___s": true
  },
  {
    "__docId__": 619,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test542",
    "testId": 542,
    "memberof": "src/moduleCore.js~suite90.suite540",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite540.test542",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2909,
    "___id": "T000002R000619",
    "___s": true
  },
  {
    "__docId__": 620,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test543",
    "testId": 543,
    "memberof": "src/moduleCore.js~suite90.suite540",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite540.test543",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2914,
    "___id": "T000002R000620",
    "___s": true
  },
  {
    "__docId__": 621,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test544",
    "testId": 544,
    "memberof": "src/moduleCore.js~suite90.suite540",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite540.test544",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2919,
    "___id": "T000002R000621",
    "___s": true
  },
  {
    "__docId__": 622,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test545",
    "testId": 545,
    "memberof": "src/moduleCore.js~suite90.suite540",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite540.test545",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2924,
    "___id": "T000002R000622",
    "___s": true
  },
  {
    "__docId__": 623,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test546",
    "testId": 546,
    "memberof": "src/moduleCore.js~suite90.suite540",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite540.test546",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 2929,
    "___id": "T000002R000623",
    "___s": true
  },
  {
    "__docId__": 624,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test547",
    "testId": 547,
    "memberof": "src/moduleCore.js~suite90.suite540",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite540.test547",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2934,
    "___id": "T000002R000624",
    "___s": true
  },
  {
    "__docId__": 625,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite548",
    "testId": 548,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite548",
    "access": null,
    "description": "Empty nested functions",
    "lineNumber": 2940,
    "___id": "T000002R000625",
    "___s": true
  },
  {
    "__docId__": 626,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test549",
    "testId": 549,
    "memberof": "src/moduleCore.js~suite90.suite548",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite548.test549",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2954,
    "___id": "T000002R000626",
    "___s": true
  },
  {
    "__docId__": 627,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite550",
    "testId": 550,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite550",
    "access": null,
    "description": "Microsoft variant maintainability index:",
    "lineNumber": 2960,
    "___id": "T000002R000627",
    "___s": true
  },
  {
    "__docId__": 628,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test551",
    "testId": 551,
    "memberof": "src/moduleCore.js~suite90.suite550",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite550.test551",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2978,
    "___id": "T000002R000628",
    "___s": true
  },
  {
    "__docId__": 629,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite552",
    "testId": 552,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite552",
    "access": null,
    "description": "Functions with consistent parameter counts:",
    "lineNumber": 2984,
    "___id": "T000002R000629",
    "___s": true
  },
  {
    "__docId__": 630,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test553",
    "testId": 553,
    "memberof": "src/moduleCore.js~suite90.suite552",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite552.test553",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2998,
    "___id": "T000002R000630",
    "___s": true
  },
  {
    "__docId__": 631,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test554",
    "testId": 554,
    "memberof": "src/moduleCore.js~suite90.suite552",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite552.test554",
    "access": null,
    "description": "mean parameter count is correct",
    "lineNumber": 3003,
    "___id": "T000002R000631",
    "___s": true
  },
  {
    "__docId__": 632,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite555",
    "testId": 555,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite555",
    "access": null,
    "description": "Functions with inconsistent parameter counts:",
    "lineNumber": 3009,
    "___id": "T000002R000632",
    "___s": true
  },
  {
    "__docId__": 633,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test556",
    "testId": 556,
    "memberof": "src/moduleCore.js~suite90.suite555",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite555.test556",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3024,
    "___id": "T000002R000633",
    "___s": true
  },
  {
    "__docId__": 634,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test557",
    "testId": 557,
    "memberof": "src/moduleCore.js~suite90.suite555",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite555.test557",
    "access": null,
    "description": "mean parameter count is correct",
    "lineNumber": 3029,
    "___id": "T000002R000634",
    "___s": true
  },
  {
    "__docId__": 635,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite558",
    "testId": 558,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite558",
    "access": null,
    "description": "CommonJS require literal:",
    "lineNumber": 3035,
    "___id": "T000002R000635",
    "___s": true
  },
  {
    "__docId__": 636,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test559",
    "testId": 559,
    "memberof": "src/moduleCore.js~suite90.suite558",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite558.test559",
    "access": null,
    "description": "dependencies has correct length",
    "lineNumber": 3049,
    "___id": "T000002R000636",
    "___s": true
  },
  {
    "__docId__": 637,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test560",
    "testId": 560,
    "memberof": "src/moduleCore.js~suite90.suite558",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite558.test560",
    "access": null,
    "description": "dependencies are correct",
    "lineNumber": 3054,
    "___id": "T000002R000637",
    "___s": true
  },
  {
    "__docId__": 638,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite561",
    "testId": 561,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite561",
    "access": null,
    "description": "alternative CommonJS require literal:",
    "lineNumber": 3063,
    "___id": "T000002R000638",
    "___s": true
  },
  {
    "__docId__": 639,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test562",
    "testId": 562,
    "memberof": "src/moduleCore.js~suite90.suite561",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite561.test562",
    "access": null,
    "description": "dependencies are correct",
    "lineNumber": 3077,
    "___id": "T000002R000639",
    "___s": true
  },
  {
    "__docId__": 640,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite563",
    "testId": 563,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite563",
    "access": null,
    "description": "CommonJS require multiple:",
    "lineNumber": 3083,
    "___id": "T000002R000640",
    "___s": true
  },
  {
    "__docId__": 641,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test564",
    "testId": 564,
    "memberof": "src/moduleCore.js~suite90.suite563",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite563.test564",
    "access": null,
    "description": "dependencies has correct length",
    "lineNumber": 3097,
    "___id": "T000002R000641",
    "___s": true
  },
  {
    "__docId__": 642,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test565",
    "testId": 565,
    "memberof": "src/moduleCore.js~suite90.suite563",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite563.test565",
    "access": null,
    "description": "dependencies are correct",
    "lineNumber": 3102,
    "___id": "T000002R000642",
    "___s": true
  },
  {
    "__docId__": 643,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite566",
    "testId": 566,
    "memberof": "src/moduleCore.js~suite90",
    "testDepth": 1,
    "longname": "src/moduleCore.js~suite90.suite566",
    "access": null,
    "description": "CommonJS require variable:",
    "lineNumber": 3113,
    "___id": "T000002R000643",
    "___s": true
  },
  {
    "__docId__": 644,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test567",
    "testId": 567,
    "memberof": "src/moduleCore.js~suite90.suite566",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite566.test567",
    "access": null,
    "description": "dependencies has correct length",
    "lineNumber": 3127,
    "___id": "T000002R000644",
    "___s": true
  },
  {
    "__docId__": 645,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test568",
    "testId": 568,
    "memberof": "src/moduleCore.js~suite90.suite566",
    "testDepth": 2,
    "longname": "src/moduleCore.js~suite90.suite566.test568",
    "access": null,
    "description": "dependencies are correct",
    "lineNumber": 3132,
    "___id": "T000002R000645",
    "___s": true
  },
  {
    "__docId__": 646,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/moduleES6.js",
    "memberof": null,
    "longname": "src/moduleES6.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport { assert }       from 'chai';\n\nimport parsers          from './parsers';\nimport * as testconfig  from './testconfig';\n\nif (testconfig.modules['moduleES6'])\n{\n   parsers.forEach((parser) =>\n   {\n      suite(`(${parser.name}): module (ES6):`, () =>\n      {\n         suite('Functions', () =>\n         {\n            suite('generator functions:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('function* foo() {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'foo');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 0);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n               });\n\n               test('methodAggregate has generator function Halstead operator', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('function*'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 1);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 2);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 2);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 0.5);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 0);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 0);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 0);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 0);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n         });\n\n         suite('Statements', () =>\n         {\n            suite('for...of:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('for (let value of [10, 20, 30]) {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has forof Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('forof'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 148.199);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n         });\n\n         suite('Declarations', () =>\n         {\n            suite('let / const variable declarations', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('let foo = \"bar\"; const bar = \"foo\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has let and const Halstead operator identifiers', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('let'), 0);\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('const'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 8);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 147.742);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n         });\n\n         suite('Expressions', () =>\n         {\n            suite('CallExpression (super):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo {}; class Bar extends Foo { constructor() { super(); } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[1].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].name, 'constructor');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.length, 2);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.vocabulary, 2);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.volume, 2);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.effort, 1);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.bugs, 0.001);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.time, 0.056);\n               });\n\n               test('methodAggregate has super Halstead operand identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operands.identifiers.indexOf('super'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.875);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('MemberExpression (super):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo { constructor() { this.foobar = \"foobar\"; } }; '\n                   + 'class Bar extends Foo { constructor() { let test = super.foobar; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[1].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'constructor');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].name, 'constructor');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 11.61);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 11.61);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.004);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.645);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.length, 6);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.vocabulary, 6);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.difficulty, 1.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.volume, 15.51);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.effort, 23.265);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.bugs, 0.005);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[1].methods[0].halstead.time, 1.292);\n               });\n\n               test('methodAggregate has super Halstead operand identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operands.identifiers.indexOf('super'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 9);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 11);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 8);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 20);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 13);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3.438);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 161.224);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('ArrayExpression (spread)', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const iter = [2, 3, 4]; const spreadTest = [1, ...iter, 5];');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has `... (spread)` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('... (spread)'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 7);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 8);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 7);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 15);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 11);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.286);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 143.438);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('CallExpression (spread):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const iter = [2, 3, 4]; const foo = (b, a, r) => {}; foo(...iter);');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, '<anonymous>');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 0);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 3);\n               });\n\n               test('methodAggregate has `... (spread)` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('... (spread)'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 8);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 10);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 8);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 18);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 14);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3.75);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 3);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 3);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 4.755);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 0);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.002);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 3);\n               });\n            });\n\n            suite('ArrowFunctionExpression (explicit):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('(x, y) => { return x + y; };');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, '<anonymous>');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 1);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 6);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 4);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 2);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 12);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 24);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.004);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 1.333);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 160.131);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 2);\n               });\n            });\n\n            suite('ArrowFunctionExpression (implicit):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('(x, y) => x + y;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, '<anonymous>');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 0);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 6);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 4);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 5);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 3);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 1);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 7.925);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 7.925);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.003);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.44);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 2);\n               });\n            });\n\n            suite('YieldExpression (yield):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('function* foo() { let index = 0; yield index++; }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'foo');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 3);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 8);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3.333);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 7);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 6);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 3);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 18.095);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 54.284);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.006);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 3.016);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 139.542);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('YieldExpression (yield*):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('function* foo() { yield* [1, 2, 3]; }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'foo');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 2);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has generator function Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('function*'), 0);\n               });\n\n               test('methodAggregate has delegate yield function Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('yield*'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.5);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 5);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 5);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 1);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 11.61);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 11.61);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.004);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.645);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 151.386);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n         });\n\n         suite('Template Literals', () =>\n         {\n            suite('TemplateLiteral / TemplateElement (basic):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const foo = `bar`;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 4);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 4);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 163.888);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('TemplateLiteral / TemplateElement (variable):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const baz = \"bar\"; const foo = `fuz${baz}`;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 6);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.25);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 148.245);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('TemplateLiteral / TemplateElement (function):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const baz = \"bar\"; const foo = `fuz${JSON.stringify(baz)}`;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 7);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 13);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.333);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 143.995);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('TaggedTemplateExpression:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const foo = tagged`bar`;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 5);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 162.615);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n         });\n\n         suite('Patterns', () =>\n         {\n            suite('ObjectPattern (destructuring assignment):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const bar = { a: 1, b: 2, c: 3 }; const { a, b, c } = bar;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 8);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 9);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 14);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 7);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 23);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 11);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 4);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 117.604);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('ObjectPattern (anonymous destructuring assignment):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const { a, b, c } = { a: 1, b: 2, c: 3 };');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 7);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 7);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 12);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 19);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 4);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 120.559);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('ObjectPattern (computed object property names and anonymous destructuring assignment):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const id = \"z\"; const { [id]: foo } = { z: \"bar\" };');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 8);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 14);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 9);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.4);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 132.577);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('ObjectPattern 2 (anonymous destructuring assignment):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('let a, b; ({a, b} = { a:1, b:2 });');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 7);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 10);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 16);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 8);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 120.732);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('ArrayPattern (destructuring assignment):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const foo = [1, 2]; let [a, b] = foo;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate does not have <anonymous> (object) Halstead operand identifier', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.identifiers.indexOf('<anonymous>'), -1);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 12);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 9);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.4);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 144.333);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('ArrayPattern (anonymous destructuring assignment):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('let [a, b] = [1, 2];');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 8);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 158.971);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('ArrayPattern / RestElement (anonymous destructuring assignment):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const [a, b, ...restTest] = [1, 2, 3, 4, 5];');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has `... (rest)` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('... (rest)'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 8);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 8);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 13);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 12);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 155.491);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('FunctionDeclaration `defaults` (esprima) / AssignmentPattern (espree):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('function foo(first, bar = \"baz\", ...items) {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'foo');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 0);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 3);\n               });\n\n               test('methodAggregate has `... (rest)` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('... (rest)'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 5);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 5);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 11.61);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 5.805);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.004);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.322);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 3);\n               });\n            });\n         });\n\n         suite('Classes', () =>\n         {\n            suite('class declaration:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 1);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 1);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 2);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 2);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 0.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ superclass:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Bar {} class Foo extends Bar {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 5);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 3);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 0.75);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 153.675);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ constructor:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo { constructor() { this.bar = 1; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'constructor');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 11.61);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 11.61);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.004);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.645);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 9);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 162.615);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo { bar() { this.baz = 1; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 11.61);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 11.61);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.004);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.645);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 9);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 162.615);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ computed generator function method and computed delegated yield:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze(`class Foo { *[foo + baz]() { yield 'x'; yield* [bar.biz](); yield 'y'; } }`);\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 7);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~foo + baz>');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 6);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 10);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 9);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 2.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 31.699);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 79.248);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.011);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 4.403);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 9);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 8);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 7);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 7);\n               });\n\n               test('methodAggregate has correct Halstead operand identifiers', () =>\n               {\n                  assert.strictEqual(JSON.stringify(report.methodAggregate.halstead.operands.identifiers),\n                   '[\"Foo\",\"foo\",\"baz\",\"\\\\\"x\\\\\"\",\"bar\",\"biz\",\"\\\\\"y\\\\\"\"]');\n               });\n\n               test('methodAggregate has correct Halstead operator identifiers', () =>\n               {\n                  assert.strictEqual(JSON.stringify(report.methodAggregate.halstead.operators.identifiers),\n                   '[\"class\",\"+\",\"function*\",\"yield\",\"yield*\",\"()\",\"[]\",\".\"]');\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 16);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 15);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 4);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 127.019);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ computed (string) method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze(`class Foo { ['bar']() { this.baz = 1; } }`);\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 11.61);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 11.61);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.004);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.645);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 9);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 162.615);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ computed (variable) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [bar]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~bar>');\n               });\n            });\n\n            suite('class declaration w/ computed (2 variable concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo+bar]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~foo + bar>');\n               });\n            });\n\n            suite('class declaration w/ computed (3 variable concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo+bar+biz]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~foo + bar + biz>');\n               });\n            });\n\n            suite('class declaration w/ computed (2 variable + literal concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo+bar+'biz']() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, `<computed~foo + bar + 'biz'>`);\n               });\n            });\n\n            suite('class declaration w/ computed (2 variable + numerical concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo+bar+2]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, `<computed~foo + bar + 2>`);\n               });\n            });\n\n            suite('class declaration w/ computed (2 variable + numerical concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo+bar+true]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, `<computed~foo + bar + true>`);\n               });\n            });\n\n            suite('class declaration w/ computed (2 variable + null concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo+bar+null]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, `<computed~foo + bar + null>`);\n               });\n            });\n\n            suite('class declaration w/ computed (Symbol / 2 member expression) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [Symbol.iterator]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~Symbol.iterator>');\n               });\n            });\n\n            suite('class declaration w/ computed (3 member expression) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo.bar.biz]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~foo.bar.biz>');\n               });\n            });\n\n            suite('class declaration w/ computed (2 member expression + concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo.bar+biz]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~foo.bar + biz>');\n               });\n            });\n\n            suite('class declaration w/ computed (2 member expression + concatenation with method called) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze(`class Foo { [foo.bar+biz.toLowerCase()]() { this.baz = 1; } }`);\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~foo.bar + biz.toLowerCase()>');\n               });\n            });\n\n            suite('class declaration w/ computed (template literal) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze('class Foo { [`${foo}`]() { this.baz = 1; } }');\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~`${foo}`>');\n               });\n            });\n\n            suite('class declaration w/ computed (template literal + concatenation) method:', () =>\n            {\n               test('class method has correct name', () =>\n               {\n                  const report = parser.analyze('class Foo { [`${foo}`+bar]() { this.baz = 1; } }');\n                  assert.strictEqual(report.classes[0].methods[0].name, '<computed~`${foo}` + bar>');\n               });\n            });\n\n            suite('class declaration w/ getter method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo { get bar() { return \"bar\"; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 2);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 2);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 2);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 1);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.001);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.056);\n               });\n\n               test('methodAggregate has `get` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('get'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ setter method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo { set bar(data) { this._bar = data; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 1);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 6);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1.333);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 13.932);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 18.575);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.005);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 1.032);\n               });\n\n               test('methodAggregate has `set` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('set'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 11);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 161.007);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 1);\n               });\n            });\n\n            suite('class declaration w/ static method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo { static bar() { return \"bar\"; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 2);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 2);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 2);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 1);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.001);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.056);\n               });\n\n               test('methodAggregate has `static` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('static'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class declaration w/ constructor + meta property:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('class Foo { constructor() { new.target.name; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'constructor');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 4);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 10);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 5);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.003);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.278);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 8);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 165.496);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 1);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 4);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 4);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 151.273);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression (named):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class Foo {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 5);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 4);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 148.139);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression w/ superclass:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Bar = class {}; const Foo = class extends Bar {};');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.25);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 135.373);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression (named) w/ superclass:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Bar = class Bar {}; const Foo = class Foo extends Bar {};');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 4);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 11);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3.75);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 132.94);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression w/ constructor:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class { constructor() { this.bar = 1; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'constructor');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 11.61);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 11.61);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.004);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.645);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 11);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 162.615);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression w/ method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class { bar() { this.baz = 1; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 11.61);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 11.61);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.004);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.645);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 11);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 162.615);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression w/ getter method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class { get bar() { return \"bar\"; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 2);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 2);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 2);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 1);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.001);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.056);\n               });\n\n               test('methodAggregate has `get` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('get'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 9);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression w/ setter method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class { set bar(data) { this._bar = data; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 1);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 6);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 5);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 1.333);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 13.932);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 18.575);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.005);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 1.032);\n               });\n\n               test('methodAggregate has `set` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('set'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 7);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 13);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 11);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3.6);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 161.007);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 1);\n               });\n            });\n\n            suite('class expression w/ static method:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class { static bar() { return \"bar\"; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'bar');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 2);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 2);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 2);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 1);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.001);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.056);\n               });\n\n               test('methodAggregate has `static` Halstead operator identifier', () =>\n               {\n                  assert.isAtLeast(report.methodAggregate.halstead.operators.identifiers.indexOf('static'), 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 9);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('class expression w/ constructor + meta property:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const Foo = class { constructor() { new.target.name; } }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 3);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('class methods has correct length', () =>\n               {\n                  assert.lengthOf(report.classes[0].methods, 1);\n               });\n\n               test('class method has correct name', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].name, 'constructor');\n               });\n\n               test('class method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.physical, 1);\n               });\n\n               test('class method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].sloc.logical, 1);\n               });\n\n               test('class method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].cyclomatic, 1);\n               });\n\n               test('class method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].params, 0);\n               });\n\n               test('class method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.length, 5);\n               });\n\n               test('class method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.vocabulary, 4);\n               });\n\n               test('class method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('class method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.volume, 10);\n               });\n\n               test('class method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.effort, 5);\n               });\n\n               test('class method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.bugs, 0.003);\n               });\n\n               test('class method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.classes[0].methods[0].halstead.time, 0.278);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 11);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 165.496);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n         });\n\n         suite('Modules', () =>\n         {\n            suite('export all from import:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('export * from \"module\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 1);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 3);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 3);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('export default class declaration:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('export default class Foo {}');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 1);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 1);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 1);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 4);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 4);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.5);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 162.502);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('export default function declaration:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('export default function foo () { return \"bar\"; }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'foo');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 1);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 6);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 6);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 2);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 2);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 2);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 1);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.001);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.056);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('export named from import:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('export { foo, bar } from \"module\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1.667);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('export named function declaration:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('export function foo () { return \"bar\"; }');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, 'foo');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 1);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 6);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 6);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 2);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 2);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 2);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 1);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.001);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.056);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('export default arrow function declaration:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const s_FOO = () => { return \"bar\"; }; export default s_FOO;');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, '<anonymous>');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 1);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 9);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 8);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 4.5);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 2);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 2);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 2);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 1);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.001);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.056);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('export named arrow function declaration:', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const s_FOO = () => { return \"bar\"; }; export { s_FOO };');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, '<anonymous>');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 1);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 10);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 8);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 6);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 2);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 2);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 2);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 1);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.001);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.056);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('export named arrow function declaration (aliased):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('const s_FOO = () => { return \"bar\"; }; export { s_FOO as s_BAR };');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 2);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 1);\n               });\n\n               test('method has correct name', () =>\n               {\n                  assert.strictEqual(report.methods[0].name, '<anonymous>');\n               });\n\n               test('method has correct physical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.physical, 1);\n               });\n\n               test('method has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methods[0].sloc.logical, 1);\n               });\n\n               test('method has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methods[0].cyclomatic, 1);\n               });\n\n               test('method has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methods[0].params, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 7);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 7);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 11);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 10);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 4.667);\n               });\n\n               test('method has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.length, 2);\n               });\n\n               test('method has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.vocabulary, 2);\n               });\n\n               test('method has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.difficulty, 0.5);\n               });\n\n               test('method has correct Halstead volume', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.volume, 2);\n               });\n\n               test('method has correct Halstead effort', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.effort, 1);\n               });\n\n               test('method has correct Halstead bugs', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.bugs, 0.001);\n               });\n\n               test('method has correct Halstead time', () =>\n               {\n                  assert.strictEqual(report.methods[0].halstead.time, 0.056);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct parameter count', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.params, 0);\n               });\n            });\n\n            suite('import default (1):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('import foo from \"module\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 4);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 4);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct dependency length', () =>\n               {\n                  assert.lengthOf(report.dependencies, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].line, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].path, 'module');\n               });\n\n               test('methodAggregate has correct dependency entry[0] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].type, 'esm');\n               });\n            });\n\n            suite('import default (3):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze(\n                     'import foo from \"./foo.js\";\\nimport bar from \"./bar.js\";\\nimport baz from \"./baz.js\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 6);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 6);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 12);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 8);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 1);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct dependency length', () =>\n               {\n                  assert.lengthOf(report.dependencies, 3);\n               });\n\n               test('methodAggregate has correct dependency entry[0] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].line, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].path, './foo.js');\n               });\n\n               test('methodAggregate has correct dependency entry[0] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].type, 'esm');\n               });\n\n               test('methodAggregate has correct dependency entry[1] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[1].line, 2);\n               });\n\n               test('methodAggregate has correct dependency entry[1] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[1].path, './bar.js');\n               });\n\n               test('methodAggregate has correct dependency entry[1] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[1].type, 'esm');\n               });\n\n               test('methodAggregate has correct dependency entry[2] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[2].line, 3);\n               });\n\n               test('methodAggregate has correct dependency entry[2] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[2].path, './baz.js');\n               });\n\n               test('methodAggregate has correct dependency entry[2] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[2].type, 'esm');\n               });\n            });\n\n            suite('import named (1):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('import {baz} from \"module\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 6);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 5);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2.25);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct dependency length', () =>\n               {\n                  assert.lengthOf(report.dependencies, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].line, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].path, 'module');\n               });\n\n               test('methodAggregate has correct dependency entry[0] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].type, 'esm');\n               });\n            });\n\n            suite('import named as (1):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('import {foo as bar} from \"module\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 4);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 3);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 3);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 7);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct dependency length', () =>\n               {\n                  assert.lengthOf(report.dependencies, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].line, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].path, 'module');\n               });\n\n               test('methodAggregate has correct dependency entry[0] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].type, 'esm');\n               });\n            });\n\n            suite('import namespace (1):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze('import * as foo from \"mod.js\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 5);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 4);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 2);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 2);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 7);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 6);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 2);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct dependency length', () =>\n               {\n                  assert.lengthOf(report.dependencies, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].line, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].path, 'mod.js');\n               });\n\n               test('methodAggregate has correct dependency entry[0] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].type, 'esm');\n               });\n            });\n\n            suite('import mixed (4):', () =>\n            {\n               let report;\n\n               setup(() =>\n               {\n                  report = parser.analyze(\n                     'import foo from \"./foo.js\";\\nimport {bar} from \"./bar.js\";\\n'\n                   + 'import {bar as baz} from \"./bar.js\";\\nimport * as bam from \"./bam.js\";');\n               });\n\n               teardown(() =>\n               {\n                  report = undefined;\n               });\n\n               test('methodAggregate has correct logical lines of code', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.sloc.logical, 0);\n               });\n\n               test('methodAggregate has correct cyclomatic complexity', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.cyclomatic, 1);\n               });\n\n               test('functions has correct length', () =>\n               {\n                  assert.lengthOf(report.methods, 0);\n               });\n\n               test('methodAggregate has correct Halstead total operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.total, 14);\n               });\n\n               test('methodAggregate has correct Halstead distinct operators', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operators.distinct, 5);\n               });\n\n               test('methodAggregate has correct Halstead total operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.total, 10);\n               });\n\n               test('methodAggregate has correct Halstead distinct operands', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.operands.distinct, 7);\n               });\n\n               test('methodAggregate has correct Halstead length', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.length, 24);\n               });\n\n               test('methodAggregate has correct Halstead vocabulary', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.vocabulary, 12);\n               });\n\n               test('methodAggregate has correct Halstead difficulty', () =>\n               {\n                  assert.strictEqual(report.methodAggregate.halstead.difficulty, 3.571);\n               });\n\n               test('maintainability index is correct', () =>\n               {\n                  assert.strictEqual(report.maintainability, 171);\n               });\n\n               test('methodAggregate has correct dependency length', () =>\n               {\n                  assert.lengthOf(report.dependencies, 4);\n               });\n\n               test('methodAggregate has correct dependency entry[0] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].line, 1);\n               });\n\n               test('methodAggregate has correct dependency entry[0] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].path, './foo.js');\n               });\n\n               test('methodAggregate has correct dependency entry[0] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[0].type, 'esm');\n               });\n\n               test('methodAggregate has correct dependency entry[1] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[1].line, 2);\n               });\n\n               test('methodAggregate has correct dependency entry[1] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[1].path, './bar.js');\n               });\n\n               test('methodAggregate has correct dependency entry[1] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[1].type, 'esm');\n               });\n\n               test('methodAggregate has correct dependency entry[2] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[2].line, 3);\n               });\n\n               test('methodAggregate has correct dependency entry[2] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[2].path, './bar.js');\n               });\n\n               test('methodAggregate has correct dependency entry[2] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[2].type, 'esm');\n               });\n\n               test('methodAggregate has correct dependency entry[3] line', () =>\n               {\n                  assert.strictEqual(report.dependencies[3].line, 4);\n               });\n\n               test('methodAggregate has correct dependency entry[3] path', () =>\n               {\n                  assert.strictEqual(report.dependencies[3].path, './bam.js');\n               });\n\n               test('methodAggregate has correct dependency entry[3] type', () =>\n               {\n                  assert.strictEqual(report.dependencies[3].type, 'esm');\n               });\n            });\n         });\n      });\n   });\n}\n",
    "___id": "T000002R000646",
    "___s": true
  },
  {
    "__docId__": 647,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite569",
    "testId": 569,
    "memberof": "src/moduleES6.js",
    "testDepth": 0,
    "longname": "src/moduleES6.js~suite569",
    "access": null,
    "lineNumber": 12,
    "___id": "T000002R000647",
    "___s": true
  },
  {
    "__docId__": 648,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite570",
    "testId": 570,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite570",
    "access": null,
    "description": "Functions",
    "lineNumber": 14,
    "___id": "T000002R000648",
    "___s": true
  },
  {
    "__docId__": 649,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite571",
    "testId": 571,
    "memberof": "src/moduleES6.js~suite569.suite570",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite570.suite571",
    "access": null,
    "description": "generator functions:",
    "lineNumber": 16,
    "___id": "T000002R000649",
    "___s": true
  },
  {
    "__docId__": 650,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test572",
    "testId": 572,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test572",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 30,
    "___id": "T000002R000650",
    "___s": true
  },
  {
    "__docId__": 651,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test573",
    "testId": 573,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test573",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 35,
    "___id": "T000002R000651",
    "___s": true
  },
  {
    "__docId__": 652,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test574",
    "testId": 574,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test574",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 40,
    "___id": "T000002R000652",
    "___s": true
  },
  {
    "__docId__": 653,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test575",
    "testId": 575,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test575",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 45,
    "___id": "T000002R000653",
    "___s": true
  },
  {
    "__docId__": 654,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test576",
    "testId": 576,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test576",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 50,
    "___id": "T000002R000654",
    "___s": true
  },
  {
    "__docId__": 655,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test577",
    "testId": 577,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test577",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 55,
    "___id": "T000002R000655",
    "___s": true
  },
  {
    "__docId__": 656,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test578",
    "testId": 578,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test578",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 60,
    "___id": "T000002R000656",
    "___s": true
  },
  {
    "__docId__": 657,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test579",
    "testId": 579,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test579",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 65,
    "___id": "T000002R000657",
    "___s": true
  },
  {
    "__docId__": 658,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test580",
    "testId": 580,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test580",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 70,
    "___id": "T000002R000658",
    "___s": true
  },
  {
    "__docId__": 659,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test581",
    "testId": 581,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test581",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 75,
    "___id": "T000002R000659",
    "___s": true
  },
  {
    "__docId__": 660,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test582",
    "testId": 582,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test582",
    "access": null,
    "description": "methodAggregate has generator function Halstead operator",
    "lineNumber": 80,
    "___id": "T000002R000660",
    "___s": true
  },
  {
    "__docId__": 661,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test583",
    "testId": 583,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test583",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 85,
    "___id": "T000002R000661",
    "___s": true
  },
  {
    "__docId__": 662,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test584",
    "testId": 584,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test584",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 90,
    "___id": "T000002R000662",
    "___s": true
  },
  {
    "__docId__": 663,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test585",
    "testId": 585,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test585",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 95,
    "___id": "T000002R000663",
    "___s": true
  },
  {
    "__docId__": 664,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test586",
    "testId": 586,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test586",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 100,
    "___id": "T000002R000664",
    "___s": true
  },
  {
    "__docId__": 665,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test587",
    "testId": 587,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test587",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 105,
    "___id": "T000002R000665",
    "___s": true
  },
  {
    "__docId__": 666,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test588",
    "testId": 588,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test588",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 110,
    "___id": "T000002R000666",
    "___s": true
  },
  {
    "__docId__": 667,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test589",
    "testId": 589,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test589",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 115,
    "___id": "T000002R000667",
    "___s": true
  },
  {
    "__docId__": 668,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test590",
    "testId": 590,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test590",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 120,
    "___id": "T000002R000668",
    "___s": true
  },
  {
    "__docId__": 669,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test591",
    "testId": 591,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test591",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 125,
    "___id": "T000002R000669",
    "___s": true
  },
  {
    "__docId__": 670,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test592",
    "testId": 592,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test592",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 130,
    "___id": "T000002R000670",
    "___s": true
  },
  {
    "__docId__": 671,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test593",
    "testId": 593,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test593",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 135,
    "___id": "T000002R000671",
    "___s": true
  },
  {
    "__docId__": 672,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test594",
    "testId": 594,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test594",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 140,
    "___id": "T000002R000672",
    "___s": true
  },
  {
    "__docId__": 673,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test595",
    "testId": 595,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test595",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 145,
    "___id": "T000002R000673",
    "___s": true
  },
  {
    "__docId__": 674,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test596",
    "testId": 596,
    "memberof": "src/moduleES6.js~suite569.suite570.suite571",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite570.suite571.test596",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 150,
    "___id": "T000002R000674",
    "___s": true
  },
  {
    "__docId__": 675,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite597",
    "testId": 597,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite597",
    "access": null,
    "description": "Statements",
    "lineNumber": 157,
    "___id": "T000002R000675",
    "___s": true
  },
  {
    "__docId__": 676,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite598",
    "testId": 598,
    "memberof": "src/moduleES6.js~suite569.suite597",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite597.suite598",
    "access": null,
    "description": "for...of:",
    "lineNumber": 159,
    "___id": "T000002R000676",
    "___s": true
  },
  {
    "__docId__": 677,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test599",
    "testId": 599,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test599",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 173,
    "___id": "T000002R000677",
    "___s": true
  },
  {
    "__docId__": 678,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test600",
    "testId": 600,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test600",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 178,
    "___id": "T000002R000678",
    "___s": true
  },
  {
    "__docId__": 679,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test601",
    "testId": 601,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test601",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 183,
    "___id": "T000002R000679",
    "___s": true
  },
  {
    "__docId__": 680,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test602",
    "testId": 602,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test602",
    "access": null,
    "description": "methodAggregate has forof Halstead operator identifier",
    "lineNumber": 188,
    "___id": "T000002R000680",
    "___s": true
  },
  {
    "__docId__": 681,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test603",
    "testId": 603,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test603",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 193,
    "___id": "T000002R000681",
    "___s": true
  },
  {
    "__docId__": 682,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test604",
    "testId": 604,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test604",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 198,
    "___id": "T000002R000682",
    "___s": true
  },
  {
    "__docId__": 683,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test605",
    "testId": 605,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test605",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 203,
    "___id": "T000002R000683",
    "___s": true
  },
  {
    "__docId__": 684,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test606",
    "testId": 606,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test606",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 208,
    "___id": "T000002R000684",
    "___s": true
  },
  {
    "__docId__": 685,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test607",
    "testId": 607,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test607",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 213,
    "___id": "T000002R000685",
    "___s": true
  },
  {
    "__docId__": 686,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test608",
    "testId": 608,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test608",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 218,
    "___id": "T000002R000686",
    "___s": true
  },
  {
    "__docId__": 687,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test609",
    "testId": 609,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test609",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 223,
    "___id": "T000002R000687",
    "___s": true
  },
  {
    "__docId__": 688,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test610",
    "testId": 610,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test610",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 228,
    "___id": "T000002R000688",
    "___s": true
  },
  {
    "__docId__": 689,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test611",
    "testId": 611,
    "memberof": "src/moduleES6.js~suite569.suite597.suite598",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite597.suite598.test611",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 233,
    "___id": "T000002R000689",
    "___s": true
  },
  {
    "__docId__": 690,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite612",
    "testId": 612,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite612",
    "access": null,
    "description": "Declarations",
    "lineNumber": 240,
    "___id": "T000002R000690",
    "___s": true
  },
  {
    "__docId__": 691,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite613",
    "testId": 613,
    "memberof": "src/moduleES6.js~suite569.suite612",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite612.suite613",
    "access": null,
    "description": "let / const variable declarations",
    "lineNumber": 242,
    "___id": "T000002R000691",
    "___s": true
  },
  {
    "__docId__": 692,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test614",
    "testId": 614,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test614",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 256,
    "___id": "T000002R000692",
    "___s": true
  },
  {
    "__docId__": 693,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test615",
    "testId": 615,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test615",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 261,
    "___id": "T000002R000693",
    "___s": true
  },
  {
    "__docId__": 694,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test616",
    "testId": 616,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test616",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 266,
    "___id": "T000002R000694",
    "___s": true
  },
  {
    "__docId__": 695,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test617",
    "testId": 617,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test617",
    "access": null,
    "description": "methodAggregate has let and const Halstead operator identifiers",
    "lineNumber": 271,
    "___id": "T000002R000695",
    "___s": true
  },
  {
    "__docId__": 696,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test618",
    "testId": 618,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test618",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 277,
    "___id": "T000002R000696",
    "___s": true
  },
  {
    "__docId__": 697,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test619",
    "testId": 619,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test619",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 282,
    "___id": "T000002R000697",
    "___s": true
  },
  {
    "__docId__": 698,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test620",
    "testId": 620,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test620",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 287,
    "___id": "T000002R000698",
    "___s": true
  },
  {
    "__docId__": 699,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test621",
    "testId": 621,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test621",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 292,
    "___id": "T000002R000699",
    "___s": true
  },
  {
    "__docId__": 700,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test622",
    "testId": 622,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test622",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 297,
    "___id": "T000002R000700",
    "___s": true
  },
  {
    "__docId__": 701,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test623",
    "testId": 623,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test623",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 302,
    "___id": "T000002R000701",
    "___s": true
  },
  {
    "__docId__": 702,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test624",
    "testId": 624,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test624",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 307,
    "___id": "T000002R000702",
    "___s": true
  },
  {
    "__docId__": 703,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test625",
    "testId": 625,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test625",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 312,
    "___id": "T000002R000703",
    "___s": true
  },
  {
    "__docId__": 704,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test626",
    "testId": 626,
    "memberof": "src/moduleES6.js~suite569.suite612.suite613",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite612.suite613.test626",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 317,
    "___id": "T000002R000704",
    "___s": true
  },
  {
    "__docId__": 705,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite627",
    "testId": 627,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite627",
    "access": null,
    "description": "Expressions",
    "lineNumber": 324,
    "___id": "T000002R000705",
    "___s": true
  },
  {
    "__docId__": 706,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite628",
    "testId": 628,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite628",
    "access": null,
    "description": "CallExpression (super):",
    "lineNumber": 326,
    "___id": "T000002R000706",
    "___s": true
  },
  {
    "__docId__": 707,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test629",
    "testId": 629,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test629",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 340,
    "___id": "T000002R000707",
    "___s": true
  },
  {
    "__docId__": 708,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test630",
    "testId": 630,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test630",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 345,
    "___id": "T000002R000708",
    "___s": true
  },
  {
    "__docId__": 709,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test631",
    "testId": 631,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test631",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 350,
    "___id": "T000002R000709",
    "___s": true
  },
  {
    "__docId__": 710,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test632",
    "testId": 632,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test632",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 355,
    "___id": "T000002R000710",
    "___s": true
  },
  {
    "__docId__": 711,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test633",
    "testId": 633,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test633",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 360,
    "___id": "T000002R000711",
    "___s": true
  },
  {
    "__docId__": 712,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test634",
    "testId": 634,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test634",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 365,
    "___id": "T000002R000712",
    "___s": true
  },
  {
    "__docId__": 713,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test635",
    "testId": 635,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test635",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 370,
    "___id": "T000002R000713",
    "___s": true
  },
  {
    "__docId__": 714,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test636",
    "testId": 636,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test636",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 375,
    "___id": "T000002R000714",
    "___s": true
  },
  {
    "__docId__": 715,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test637",
    "testId": 637,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test637",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 380,
    "___id": "T000002R000715",
    "___s": true
  },
  {
    "__docId__": 716,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test638",
    "testId": 638,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test638",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 385,
    "___id": "T000002R000716",
    "___s": true
  },
  {
    "__docId__": 717,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test639",
    "testId": 639,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test639",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 390,
    "___id": "T000002R000717",
    "___s": true
  },
  {
    "__docId__": 718,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test640",
    "testId": 640,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test640",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 395,
    "___id": "T000002R000718",
    "___s": true
  },
  {
    "__docId__": 719,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test641",
    "testId": 641,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test641",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 400,
    "___id": "T000002R000719",
    "___s": true
  },
  {
    "__docId__": 720,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test642",
    "testId": 642,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test642",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 405,
    "___id": "T000002R000720",
    "___s": true
  },
  {
    "__docId__": 721,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test643",
    "testId": 643,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test643",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 410,
    "___id": "T000002R000721",
    "___s": true
  },
  {
    "__docId__": 722,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test644",
    "testId": 644,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test644",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 415,
    "___id": "T000002R000722",
    "___s": true
  },
  {
    "__docId__": 723,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test645",
    "testId": 645,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test645",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 420,
    "___id": "T000002R000723",
    "___s": true
  },
  {
    "__docId__": 724,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test646",
    "testId": 646,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test646",
    "access": null,
    "description": "methodAggregate has super Halstead operand identifier",
    "lineNumber": 425,
    "___id": "T000002R000724",
    "___s": true
  },
  {
    "__docId__": 725,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test647",
    "testId": 647,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test647",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 430,
    "___id": "T000002R000725",
    "___s": true
  },
  {
    "__docId__": 726,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test648",
    "testId": 648,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test648",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 435,
    "___id": "T000002R000726",
    "___s": true
  },
  {
    "__docId__": 727,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test649",
    "testId": 649,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test649",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 440,
    "___id": "T000002R000727",
    "___s": true
  },
  {
    "__docId__": 728,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test650",
    "testId": 650,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test650",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 445,
    "___id": "T000002R000728",
    "___s": true
  },
  {
    "__docId__": 729,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test651",
    "testId": 651,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test651",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 450,
    "___id": "T000002R000729",
    "___s": true
  },
  {
    "__docId__": 730,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test652",
    "testId": 652,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test652",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 455,
    "___id": "T000002R000730",
    "___s": true
  },
  {
    "__docId__": 731,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test653",
    "testId": 653,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test653",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 460,
    "___id": "T000002R000731",
    "___s": true
  },
  {
    "__docId__": 732,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test654",
    "testId": 654,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test654",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 465,
    "___id": "T000002R000732",
    "___s": true
  },
  {
    "__docId__": 733,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test655",
    "testId": 655,
    "memberof": "src/moduleES6.js~suite569.suite627.suite628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite628.test655",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 470,
    "___id": "T000002R000733",
    "___s": true
  },
  {
    "__docId__": 734,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite656",
    "testId": 656,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite656",
    "access": null,
    "description": "MemberExpression (super):",
    "lineNumber": 476,
    "___id": "T000002R000734",
    "___s": true
  },
  {
    "__docId__": 735,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test657",
    "testId": 657,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test657",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 491,
    "___id": "T000002R000735",
    "___s": true
  },
  {
    "__docId__": 736,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test658",
    "testId": 658,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test658",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 496,
    "___id": "T000002R000736",
    "___s": true
  },
  {
    "__docId__": 737,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test659",
    "testId": 659,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test659",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 501,
    "___id": "T000002R000737",
    "___s": true
  },
  {
    "__docId__": 738,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test660",
    "testId": 660,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test660",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 506,
    "___id": "T000002R000738",
    "___s": true
  },
  {
    "__docId__": 739,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test661",
    "testId": 661,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test661",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 511,
    "___id": "T000002R000739",
    "___s": true
  },
  {
    "__docId__": 740,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test662",
    "testId": 662,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test662",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 516,
    "___id": "T000002R000740",
    "___s": true
  },
  {
    "__docId__": 741,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test663",
    "testId": 663,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test663",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 521,
    "___id": "T000002R000741",
    "___s": true
  },
  {
    "__docId__": 742,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test664",
    "testId": 664,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test664",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 526,
    "___id": "T000002R000742",
    "___s": true
  },
  {
    "__docId__": 743,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test665",
    "testId": 665,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test665",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 531,
    "___id": "T000002R000743",
    "___s": true
  },
  {
    "__docId__": 744,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test666",
    "testId": 666,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test666",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 536,
    "___id": "T000002R000744",
    "___s": true
  },
  {
    "__docId__": 745,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test667",
    "testId": 667,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test667",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 541,
    "___id": "T000002R000745",
    "___s": true
  },
  {
    "__docId__": 746,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test668",
    "testId": 668,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test668",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 546,
    "___id": "T000002R000746",
    "___s": true
  },
  {
    "__docId__": 747,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test669",
    "testId": 669,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test669",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 551,
    "___id": "T000002R000747",
    "___s": true
  },
  {
    "__docId__": 748,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test670",
    "testId": 670,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test670",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 556,
    "___id": "T000002R000748",
    "___s": true
  },
  {
    "__docId__": 749,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test671",
    "testId": 671,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test671",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 561,
    "___id": "T000002R000749",
    "___s": true
  },
  {
    "__docId__": 750,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test672",
    "testId": 672,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test672",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 566,
    "___id": "T000002R000750",
    "___s": true
  },
  {
    "__docId__": 751,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test673",
    "testId": 673,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test673",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 571,
    "___id": "T000002R000751",
    "___s": true
  },
  {
    "__docId__": 752,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test674",
    "testId": 674,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test674",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 576,
    "___id": "T000002R000752",
    "___s": true
  },
  {
    "__docId__": 753,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test675",
    "testId": 675,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test675",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 581,
    "___id": "T000002R000753",
    "___s": true
  },
  {
    "__docId__": 754,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test676",
    "testId": 676,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test676",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 586,
    "___id": "T000002R000754",
    "___s": true
  },
  {
    "__docId__": 755,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test677",
    "testId": 677,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test677",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 591,
    "___id": "T000002R000755",
    "___s": true
  },
  {
    "__docId__": 756,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test678",
    "testId": 678,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test678",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 596,
    "___id": "T000002R000756",
    "___s": true
  },
  {
    "__docId__": 757,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test679",
    "testId": 679,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test679",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 601,
    "___id": "T000002R000757",
    "___s": true
  },
  {
    "__docId__": 758,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test680",
    "testId": 680,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test680",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 606,
    "___id": "T000002R000758",
    "___s": true
  },
  {
    "__docId__": 759,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test681",
    "testId": 681,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test681",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 611,
    "___id": "T000002R000759",
    "___s": true
  },
  {
    "__docId__": 760,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test682",
    "testId": 682,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test682",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 616,
    "___id": "T000002R000760",
    "___s": true
  },
  {
    "__docId__": 761,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test683",
    "testId": 683,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test683",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 621,
    "___id": "T000002R000761",
    "___s": true
  },
  {
    "__docId__": 762,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test684",
    "testId": 684,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test684",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 626,
    "___id": "T000002R000762",
    "___s": true
  },
  {
    "__docId__": 763,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test685",
    "testId": 685,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test685",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 631,
    "___id": "T000002R000763",
    "___s": true
  },
  {
    "__docId__": 764,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test686",
    "testId": 686,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test686",
    "access": null,
    "description": "methodAggregate has super Halstead operand identifier",
    "lineNumber": 636,
    "___id": "T000002R000764",
    "___s": true
  },
  {
    "__docId__": 765,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test687",
    "testId": 687,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test687",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 641,
    "___id": "T000002R000765",
    "___s": true
  },
  {
    "__docId__": 766,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test688",
    "testId": 688,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test688",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 646,
    "___id": "T000002R000766",
    "___s": true
  },
  {
    "__docId__": 767,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test689",
    "testId": 689,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test689",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 651,
    "___id": "T000002R000767",
    "___s": true
  },
  {
    "__docId__": 768,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test690",
    "testId": 690,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test690",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 656,
    "___id": "T000002R000768",
    "___s": true
  },
  {
    "__docId__": 769,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test691",
    "testId": 691,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test691",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 661,
    "___id": "T000002R000769",
    "___s": true
  },
  {
    "__docId__": 770,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test692",
    "testId": 692,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test692",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 666,
    "___id": "T000002R000770",
    "___s": true
  },
  {
    "__docId__": 771,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test693",
    "testId": 693,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test693",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 671,
    "___id": "T000002R000771",
    "___s": true
  },
  {
    "__docId__": 772,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test694",
    "testId": 694,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test694",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 676,
    "___id": "T000002R000772",
    "___s": true
  },
  {
    "__docId__": 773,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test695",
    "testId": 695,
    "memberof": "src/moduleES6.js~suite569.suite627.suite656",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite656.test695",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 681,
    "___id": "T000002R000773",
    "___s": true
  },
  {
    "__docId__": 774,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite696",
    "testId": 696,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite696",
    "access": null,
    "description": "ArrayExpression (spread)",
    "lineNumber": 687,
    "___id": "T000002R000774",
    "___s": true
  },
  {
    "__docId__": 775,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test697",
    "testId": 697,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test697",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 701,
    "___id": "T000002R000775",
    "___s": true
  },
  {
    "__docId__": 776,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test698",
    "testId": 698,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test698",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 706,
    "___id": "T000002R000776",
    "___s": true
  },
  {
    "__docId__": 777,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test699",
    "testId": 699,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test699",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 711,
    "___id": "T000002R000777",
    "___s": true
  },
  {
    "__docId__": 778,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test700",
    "testId": 700,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test700",
    "access": null,
    "description": "methodAggregate has `... (spread)` Halstead operator identifier",
    "lineNumber": 716,
    "___id": "T000002R000778",
    "___s": true
  },
  {
    "__docId__": 779,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test701",
    "testId": 701,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test701",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 721,
    "___id": "T000002R000779",
    "___s": true
  },
  {
    "__docId__": 780,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test702",
    "testId": 702,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test702",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 726,
    "___id": "T000002R000780",
    "___s": true
  },
  {
    "__docId__": 781,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test703",
    "testId": 703,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test703",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 731,
    "___id": "T000002R000781",
    "___s": true
  },
  {
    "__docId__": 782,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test704",
    "testId": 704,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test704",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 736,
    "___id": "T000002R000782",
    "___s": true
  },
  {
    "__docId__": 783,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test705",
    "testId": 705,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test705",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 741,
    "___id": "T000002R000783",
    "___s": true
  },
  {
    "__docId__": 784,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test706",
    "testId": 706,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test706",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 746,
    "___id": "T000002R000784",
    "___s": true
  },
  {
    "__docId__": 785,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test707",
    "testId": 707,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test707",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 751,
    "___id": "T000002R000785",
    "___s": true
  },
  {
    "__docId__": 786,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test708",
    "testId": 708,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test708",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 756,
    "___id": "T000002R000786",
    "___s": true
  },
  {
    "__docId__": 787,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test709",
    "testId": 709,
    "memberof": "src/moduleES6.js~suite569.suite627.suite696",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite696.test709",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 761,
    "___id": "T000002R000787",
    "___s": true
  },
  {
    "__docId__": 788,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite710",
    "testId": 710,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite710",
    "access": null,
    "description": "CallExpression (spread):",
    "lineNumber": 767,
    "___id": "T000002R000788",
    "___s": true
  },
  {
    "__docId__": 789,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test711",
    "testId": 711,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test711",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 781,
    "___id": "T000002R000789",
    "___s": true
  },
  {
    "__docId__": 790,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test712",
    "testId": 712,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test712",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 786,
    "___id": "T000002R000790",
    "___s": true
  },
  {
    "__docId__": 791,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test713",
    "testId": 713,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test713",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 791,
    "___id": "T000002R000791",
    "___s": true
  },
  {
    "__docId__": 792,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test714",
    "testId": 714,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test714",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 796,
    "___id": "T000002R000792",
    "___s": true
  },
  {
    "__docId__": 793,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test715",
    "testId": 715,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test715",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 801,
    "___id": "T000002R000793",
    "___s": true
  },
  {
    "__docId__": 794,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test716",
    "testId": 716,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test716",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 806,
    "___id": "T000002R000794",
    "___s": true
  },
  {
    "__docId__": 795,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test717",
    "testId": 717,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test717",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 811,
    "___id": "T000002R000795",
    "___s": true
  },
  {
    "__docId__": 796,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test718",
    "testId": 718,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test718",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 816,
    "___id": "T000002R000796",
    "___s": true
  },
  {
    "__docId__": 797,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test719",
    "testId": 719,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test719",
    "access": null,
    "description": "methodAggregate has `... (spread)` Halstead operator identifier",
    "lineNumber": 821,
    "___id": "T000002R000797",
    "___s": true
  },
  {
    "__docId__": 798,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test720",
    "testId": 720,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test720",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 826,
    "___id": "T000002R000798",
    "___s": true
  },
  {
    "__docId__": 799,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test721",
    "testId": 721,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test721",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 831,
    "___id": "T000002R000799",
    "___s": true
  },
  {
    "__docId__": 800,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test722",
    "testId": 722,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test722",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 836,
    "___id": "T000002R000800",
    "___s": true
  },
  {
    "__docId__": 801,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test723",
    "testId": 723,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test723",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 841,
    "___id": "T000002R000801",
    "___s": true
  },
  {
    "__docId__": 802,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test724",
    "testId": 724,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test724",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 846,
    "___id": "T000002R000802",
    "___s": true
  },
  {
    "__docId__": 803,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test725",
    "testId": 725,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test725",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 851,
    "___id": "T000002R000803",
    "___s": true
  },
  {
    "__docId__": 804,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test726",
    "testId": 726,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test726",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 856,
    "___id": "T000002R000804",
    "___s": true
  },
  {
    "__docId__": 805,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test727",
    "testId": 727,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test727",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 861,
    "___id": "T000002R000805",
    "___s": true
  },
  {
    "__docId__": 806,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test728",
    "testId": 728,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test728",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 866,
    "___id": "T000002R000806",
    "___s": true
  },
  {
    "__docId__": 807,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test729",
    "testId": 729,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test729",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 871,
    "___id": "T000002R000807",
    "___s": true
  },
  {
    "__docId__": 808,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test730",
    "testId": 730,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test730",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 876,
    "___id": "T000002R000808",
    "___s": true
  },
  {
    "__docId__": 809,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test731",
    "testId": 731,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test731",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 881,
    "___id": "T000002R000809",
    "___s": true
  },
  {
    "__docId__": 810,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test732",
    "testId": 732,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test732",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 886,
    "___id": "T000002R000810",
    "___s": true
  },
  {
    "__docId__": 811,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test733",
    "testId": 733,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test733",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 891,
    "___id": "T000002R000811",
    "___s": true
  },
  {
    "__docId__": 812,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test734",
    "testId": 734,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test734",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 896,
    "___id": "T000002R000812",
    "___s": true
  },
  {
    "__docId__": 813,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test735",
    "testId": 735,
    "memberof": "src/moduleES6.js~suite569.suite627.suite710",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite710.test735",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 901,
    "___id": "T000002R000813",
    "___s": true
  },
  {
    "__docId__": 814,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite736",
    "testId": 736,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite736",
    "access": null,
    "description": "ArrowFunctionExpression (explicit):",
    "lineNumber": 907,
    "___id": "T000002R000814",
    "___s": true
  },
  {
    "__docId__": 815,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test737",
    "testId": 737,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test737",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 921,
    "___id": "T000002R000815",
    "___s": true
  },
  {
    "__docId__": 816,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test738",
    "testId": 738,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test738",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 926,
    "___id": "T000002R000816",
    "___s": true
  },
  {
    "__docId__": 817,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test739",
    "testId": 739,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test739",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 931,
    "___id": "T000002R000817",
    "___s": true
  },
  {
    "__docId__": 818,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test740",
    "testId": 740,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test740",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 936,
    "___id": "T000002R000818",
    "___s": true
  },
  {
    "__docId__": 819,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test741",
    "testId": 741,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test741",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 941,
    "___id": "T000002R000819",
    "___s": true
  },
  {
    "__docId__": 820,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test742",
    "testId": 742,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test742",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 946,
    "___id": "T000002R000820",
    "___s": true
  },
  {
    "__docId__": 821,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test743",
    "testId": 743,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test743",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 951,
    "___id": "T000002R000821",
    "___s": true
  },
  {
    "__docId__": 822,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test744",
    "testId": 744,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test744",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 956,
    "___id": "T000002R000822",
    "___s": true
  },
  {
    "__docId__": 823,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test745",
    "testId": 745,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test745",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 961,
    "___id": "T000002R000823",
    "___s": true
  },
  {
    "__docId__": 824,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test746",
    "testId": 746,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test746",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 966,
    "___id": "T000002R000824",
    "___s": true
  },
  {
    "__docId__": 825,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test747",
    "testId": 747,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test747",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 971,
    "___id": "T000002R000825",
    "___s": true
  },
  {
    "__docId__": 826,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test748",
    "testId": 748,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test748",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 976,
    "___id": "T000002R000826",
    "___s": true
  },
  {
    "__docId__": 827,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test749",
    "testId": 749,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test749",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 981,
    "___id": "T000002R000827",
    "___s": true
  },
  {
    "__docId__": 828,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test750",
    "testId": 750,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test750",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 986,
    "___id": "T000002R000828",
    "___s": true
  },
  {
    "__docId__": 829,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test751",
    "testId": 751,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test751",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 991,
    "___id": "T000002R000829",
    "___s": true
  },
  {
    "__docId__": 830,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test752",
    "testId": 752,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test752",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 996,
    "___id": "T000002R000830",
    "___s": true
  },
  {
    "__docId__": 831,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test753",
    "testId": 753,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test753",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 1001,
    "___id": "T000002R000831",
    "___s": true
  },
  {
    "__docId__": 832,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test754",
    "testId": 754,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test754",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 1006,
    "___id": "T000002R000832",
    "___s": true
  },
  {
    "__docId__": 833,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test755",
    "testId": 755,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test755",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 1011,
    "___id": "T000002R000833",
    "___s": true
  },
  {
    "__docId__": 834,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test756",
    "testId": 756,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test756",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 1016,
    "___id": "T000002R000834",
    "___s": true
  },
  {
    "__docId__": 835,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test757",
    "testId": 757,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test757",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 1021,
    "___id": "T000002R000835",
    "___s": true
  },
  {
    "__docId__": 836,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test758",
    "testId": 758,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test758",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 1026,
    "___id": "T000002R000836",
    "___s": true
  },
  {
    "__docId__": 837,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test759",
    "testId": 759,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test759",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1031,
    "___id": "T000002R000837",
    "___s": true
  },
  {
    "__docId__": 838,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test760",
    "testId": 760,
    "memberof": "src/moduleES6.js~suite569.suite627.suite736",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite736.test760",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1036,
    "___id": "T000002R000838",
    "___s": true
  },
  {
    "__docId__": 839,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite761",
    "testId": 761,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite761",
    "access": null,
    "description": "ArrowFunctionExpression (implicit):",
    "lineNumber": 1042,
    "___id": "T000002R000839",
    "___s": true
  },
  {
    "__docId__": 840,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test762",
    "testId": 762,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test762",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1056,
    "___id": "T000002R000840",
    "___s": true
  },
  {
    "__docId__": 841,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test763",
    "testId": 763,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test763",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1061,
    "___id": "T000002R000841",
    "___s": true
  },
  {
    "__docId__": 842,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test764",
    "testId": 764,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test764",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1066,
    "___id": "T000002R000842",
    "___s": true
  },
  {
    "__docId__": 843,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test765",
    "testId": 765,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test765",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 1071,
    "___id": "T000002R000843",
    "___s": true
  },
  {
    "__docId__": 844,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test766",
    "testId": 766,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test766",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 1076,
    "___id": "T000002R000844",
    "___s": true
  },
  {
    "__docId__": 845,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test767",
    "testId": 767,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test767",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 1081,
    "___id": "T000002R000845",
    "___s": true
  },
  {
    "__docId__": 846,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test768",
    "testId": 768,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test768",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1086,
    "___id": "T000002R000846",
    "___s": true
  },
  {
    "__docId__": 847,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test769",
    "testId": 769,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test769",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 1091,
    "___id": "T000002R000847",
    "___s": true
  },
  {
    "__docId__": 848,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test770",
    "testId": 770,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test770",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1096,
    "___id": "T000002R000848",
    "___s": true
  },
  {
    "__docId__": 849,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test771",
    "testId": 771,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test771",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1101,
    "___id": "T000002R000849",
    "___s": true
  },
  {
    "__docId__": 850,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test772",
    "testId": 772,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test772",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1106,
    "___id": "T000002R000850",
    "___s": true
  },
  {
    "__docId__": 851,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test773",
    "testId": 773,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test773",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1111,
    "___id": "T000002R000851",
    "___s": true
  },
  {
    "__docId__": 852,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test774",
    "testId": 774,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test774",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1116,
    "___id": "T000002R000852",
    "___s": true
  },
  {
    "__docId__": 853,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test775",
    "testId": 775,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test775",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1121,
    "___id": "T000002R000853",
    "___s": true
  },
  {
    "__docId__": 854,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test776",
    "testId": 776,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test776",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1126,
    "___id": "T000002R000854",
    "___s": true
  },
  {
    "__docId__": 855,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test777",
    "testId": 777,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test777",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 1131,
    "___id": "T000002R000855",
    "___s": true
  },
  {
    "__docId__": 856,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test778",
    "testId": 778,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test778",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 1136,
    "___id": "T000002R000856",
    "___s": true
  },
  {
    "__docId__": 857,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test779",
    "testId": 779,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test779",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 1141,
    "___id": "T000002R000857",
    "___s": true
  },
  {
    "__docId__": 858,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test780",
    "testId": 780,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test780",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 1146,
    "___id": "T000002R000858",
    "___s": true
  },
  {
    "__docId__": 859,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test781",
    "testId": 781,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test781",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 1151,
    "___id": "T000002R000859",
    "___s": true
  },
  {
    "__docId__": 860,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test782",
    "testId": 782,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test782",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 1156,
    "___id": "T000002R000860",
    "___s": true
  },
  {
    "__docId__": 861,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test783",
    "testId": 783,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test783",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 1161,
    "___id": "T000002R000861",
    "___s": true
  },
  {
    "__docId__": 862,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test784",
    "testId": 784,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test784",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1166,
    "___id": "T000002R000862",
    "___s": true
  },
  {
    "__docId__": 863,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test785",
    "testId": 785,
    "memberof": "src/moduleES6.js~suite569.suite627.suite761",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite761.test785",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1171,
    "___id": "T000002R000863",
    "___s": true
  },
  {
    "__docId__": 864,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite786",
    "testId": 786,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite786",
    "access": null,
    "description": "YieldExpression (yield):",
    "lineNumber": 1177,
    "___id": "T000002R000864",
    "___s": true
  },
  {
    "__docId__": 865,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test787",
    "testId": 787,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test787",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1191,
    "___id": "T000002R000865",
    "___s": true
  },
  {
    "__docId__": 866,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test788",
    "testId": 788,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test788",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1196,
    "___id": "T000002R000866",
    "___s": true
  },
  {
    "__docId__": 867,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test789",
    "testId": 789,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test789",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1201,
    "___id": "T000002R000867",
    "___s": true
  },
  {
    "__docId__": 868,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test790",
    "testId": 790,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test790",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 1206,
    "___id": "T000002R000868",
    "___s": true
  },
  {
    "__docId__": 869,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test791",
    "testId": 791,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test791",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 1211,
    "___id": "T000002R000869",
    "___s": true
  },
  {
    "__docId__": 870,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test792",
    "testId": 792,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test792",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 1216,
    "___id": "T000002R000870",
    "___s": true
  },
  {
    "__docId__": 871,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test793",
    "testId": 793,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test793",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1221,
    "___id": "T000002R000871",
    "___s": true
  },
  {
    "__docId__": 872,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test794",
    "testId": 794,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test794",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 1226,
    "___id": "T000002R000872",
    "___s": true
  },
  {
    "__docId__": 873,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test795",
    "testId": 795,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test795",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1231,
    "___id": "T000002R000873",
    "___s": true
  },
  {
    "__docId__": 874,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test796",
    "testId": 796,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test796",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1236,
    "___id": "T000002R000874",
    "___s": true
  },
  {
    "__docId__": 875,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test797",
    "testId": 797,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test797",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1241,
    "___id": "T000002R000875",
    "___s": true
  },
  {
    "__docId__": 876,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test798",
    "testId": 798,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test798",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1246,
    "___id": "T000002R000876",
    "___s": true
  },
  {
    "__docId__": 877,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test799",
    "testId": 799,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test799",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1251,
    "___id": "T000002R000877",
    "___s": true
  },
  {
    "__docId__": 878,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test800",
    "testId": 800,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test800",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1256,
    "___id": "T000002R000878",
    "___s": true
  },
  {
    "__docId__": 879,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test801",
    "testId": 801,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test801",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1261,
    "___id": "T000002R000879",
    "___s": true
  },
  {
    "__docId__": 880,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test802",
    "testId": 802,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test802",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 1266,
    "___id": "T000002R000880",
    "___s": true
  },
  {
    "__docId__": 881,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test803",
    "testId": 803,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test803",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 1271,
    "___id": "T000002R000881",
    "___s": true
  },
  {
    "__docId__": 882,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test804",
    "testId": 804,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test804",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 1276,
    "___id": "T000002R000882",
    "___s": true
  },
  {
    "__docId__": 883,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test805",
    "testId": 805,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test805",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 1281,
    "___id": "T000002R000883",
    "___s": true
  },
  {
    "__docId__": 884,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test806",
    "testId": 806,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test806",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 1286,
    "___id": "T000002R000884",
    "___s": true
  },
  {
    "__docId__": 885,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test807",
    "testId": 807,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test807",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 1291,
    "___id": "T000002R000885",
    "___s": true
  },
  {
    "__docId__": 886,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test808",
    "testId": 808,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test808",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 1296,
    "___id": "T000002R000886",
    "___s": true
  },
  {
    "__docId__": 887,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test809",
    "testId": 809,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test809",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1301,
    "___id": "T000002R000887",
    "___s": true
  },
  {
    "__docId__": 888,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test810",
    "testId": 810,
    "memberof": "src/moduleES6.js~suite569.suite627.suite786",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite786.test810",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1306,
    "___id": "T000002R000888",
    "___s": true
  },
  {
    "__docId__": 889,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite811",
    "testId": 811,
    "memberof": "src/moduleES6.js~suite569.suite627",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite627.suite811",
    "access": null,
    "description": "YieldExpression (yield*):",
    "lineNumber": 1312,
    "___id": "T000002R000889",
    "___s": true
  },
  {
    "__docId__": 890,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test812",
    "testId": 812,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test812",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1326,
    "___id": "T000002R000890",
    "___s": true
  },
  {
    "__docId__": 891,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test813",
    "testId": 813,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test813",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1331,
    "___id": "T000002R000891",
    "___s": true
  },
  {
    "__docId__": 892,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test814",
    "testId": 814,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test814",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1336,
    "___id": "T000002R000892",
    "___s": true
  },
  {
    "__docId__": 893,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test815",
    "testId": 815,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test815",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 1341,
    "___id": "T000002R000893",
    "___s": true
  },
  {
    "__docId__": 894,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test816",
    "testId": 816,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test816",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 1346,
    "___id": "T000002R000894",
    "___s": true
  },
  {
    "__docId__": 895,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test817",
    "testId": 817,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test817",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 1351,
    "___id": "T000002R000895",
    "___s": true
  },
  {
    "__docId__": 896,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test818",
    "testId": 818,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test818",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 1356,
    "___id": "T000002R000896",
    "___s": true
  },
  {
    "__docId__": 897,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test819",
    "testId": 819,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test819",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 1361,
    "___id": "T000002R000897",
    "___s": true
  },
  {
    "__docId__": 898,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test820",
    "testId": 820,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test820",
    "access": null,
    "description": "methodAggregate has generator function Halstead operator identifier",
    "lineNumber": 1366,
    "___id": "T000002R000898",
    "___s": true
  },
  {
    "__docId__": 899,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test821",
    "testId": 821,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test821",
    "access": null,
    "description": "methodAggregate has delegate yield function Halstead operator identifier",
    "lineNumber": 1371,
    "___id": "T000002R000899",
    "___s": true
  },
  {
    "__docId__": 900,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test822",
    "testId": 822,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test822",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1376,
    "___id": "T000002R000900",
    "___s": true
  },
  {
    "__docId__": 901,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test823",
    "testId": 823,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test823",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1381,
    "___id": "T000002R000901",
    "___s": true
  },
  {
    "__docId__": 902,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test824",
    "testId": 824,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test824",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1386,
    "___id": "T000002R000902",
    "___s": true
  },
  {
    "__docId__": 903,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test825",
    "testId": 825,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test825",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1391,
    "___id": "T000002R000903",
    "___s": true
  },
  {
    "__docId__": 904,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test826",
    "testId": 826,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test826",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1396,
    "___id": "T000002R000904",
    "___s": true
  },
  {
    "__docId__": 905,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test827",
    "testId": 827,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test827",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1401,
    "___id": "T000002R000905",
    "___s": true
  },
  {
    "__docId__": 906,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test828",
    "testId": 828,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test828",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1406,
    "___id": "T000002R000906",
    "___s": true
  },
  {
    "__docId__": 907,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test829",
    "testId": 829,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test829",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 1411,
    "___id": "T000002R000907",
    "___s": true
  },
  {
    "__docId__": 908,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test830",
    "testId": 830,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test830",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 1416,
    "___id": "T000002R000908",
    "___s": true
  },
  {
    "__docId__": 909,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test831",
    "testId": 831,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test831",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 1421,
    "___id": "T000002R000909",
    "___s": true
  },
  {
    "__docId__": 910,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test832",
    "testId": 832,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test832",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 1426,
    "___id": "T000002R000910",
    "___s": true
  },
  {
    "__docId__": 911,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test833",
    "testId": 833,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test833",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 1431,
    "___id": "T000002R000911",
    "___s": true
  },
  {
    "__docId__": 912,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test834",
    "testId": 834,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test834",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 1436,
    "___id": "T000002R000912",
    "___s": true
  },
  {
    "__docId__": 913,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test835",
    "testId": 835,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test835",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 1441,
    "___id": "T000002R000913",
    "___s": true
  },
  {
    "__docId__": 914,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test836",
    "testId": 836,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test836",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1446,
    "___id": "T000002R000914",
    "___s": true
  },
  {
    "__docId__": 915,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test837",
    "testId": 837,
    "memberof": "src/moduleES6.js~suite569.suite627.suite811",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite627.suite811.test837",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1451,
    "___id": "T000002R000915",
    "___s": true
  },
  {
    "__docId__": 916,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite838",
    "testId": 838,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite838",
    "access": null,
    "description": "Template Literals",
    "lineNumber": 1458,
    "___id": "T000002R000916",
    "___s": true
  },
  {
    "__docId__": 917,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite839",
    "testId": 839,
    "memberof": "src/moduleES6.js~suite569.suite838",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite838.suite839",
    "access": null,
    "description": "TemplateLiteral / TemplateElement (basic):",
    "lineNumber": 1460,
    "___id": "T000002R000917",
    "___s": true
  },
  {
    "__docId__": 918,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test840",
    "testId": 840,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test840",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1474,
    "___id": "T000002R000918",
    "___s": true
  },
  {
    "__docId__": 919,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test841",
    "testId": 841,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test841",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1479,
    "___id": "T000002R000919",
    "___s": true
  },
  {
    "__docId__": 920,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test842",
    "testId": 842,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test842",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1484,
    "___id": "T000002R000920",
    "___s": true
  },
  {
    "__docId__": 921,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test843",
    "testId": 843,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test843",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1489,
    "___id": "T000002R000921",
    "___s": true
  },
  {
    "__docId__": 922,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test844",
    "testId": 844,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test844",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1494,
    "___id": "T000002R000922",
    "___s": true
  },
  {
    "__docId__": 923,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test845",
    "testId": 845,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test845",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1499,
    "___id": "T000002R000923",
    "___s": true
  },
  {
    "__docId__": 924,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test846",
    "testId": 846,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test846",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1504,
    "___id": "T000002R000924",
    "___s": true
  },
  {
    "__docId__": 925,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test847",
    "testId": 847,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test847",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1509,
    "___id": "T000002R000925",
    "___s": true
  },
  {
    "__docId__": 926,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test848",
    "testId": 848,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test848",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1514,
    "___id": "T000002R000926",
    "___s": true
  },
  {
    "__docId__": 927,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test849",
    "testId": 849,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test849",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1519,
    "___id": "T000002R000927",
    "___s": true
  },
  {
    "__docId__": 928,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test850",
    "testId": 850,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test850",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1524,
    "___id": "T000002R000928",
    "___s": true
  },
  {
    "__docId__": 929,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test851",
    "testId": 851,
    "memberof": "src/moduleES6.js~suite569.suite838.suite839",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite839.test851",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1529,
    "___id": "T000002R000929",
    "___s": true
  },
  {
    "__docId__": 930,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite852",
    "testId": 852,
    "memberof": "src/moduleES6.js~suite569.suite838",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite838.suite852",
    "access": null,
    "description": "TemplateLiteral / TemplateElement (variable):",
    "lineNumber": 1535,
    "___id": "T000002R000930",
    "___s": true
  },
  {
    "__docId__": 931,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test853",
    "testId": 853,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test853",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1549,
    "___id": "T000002R000931",
    "___s": true
  },
  {
    "__docId__": 932,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test854",
    "testId": 854,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test854",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1554,
    "___id": "T000002R000932",
    "___s": true
  },
  {
    "__docId__": 933,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test855",
    "testId": 855,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test855",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1559,
    "___id": "T000002R000933",
    "___s": true
  },
  {
    "__docId__": 934,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test856",
    "testId": 856,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test856",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1564,
    "___id": "T000002R000934",
    "___s": true
  },
  {
    "__docId__": 935,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test857",
    "testId": 857,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test857",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1569,
    "___id": "T000002R000935",
    "___s": true
  },
  {
    "__docId__": 936,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test858",
    "testId": 858,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test858",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1574,
    "___id": "T000002R000936",
    "___s": true
  },
  {
    "__docId__": 937,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test859",
    "testId": 859,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test859",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1579,
    "___id": "T000002R000937",
    "___s": true
  },
  {
    "__docId__": 938,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test860",
    "testId": 860,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test860",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1584,
    "___id": "T000002R000938",
    "___s": true
  },
  {
    "__docId__": 939,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test861",
    "testId": 861,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test861",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1589,
    "___id": "T000002R000939",
    "___s": true
  },
  {
    "__docId__": 940,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test862",
    "testId": 862,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test862",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1594,
    "___id": "T000002R000940",
    "___s": true
  },
  {
    "__docId__": 941,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test863",
    "testId": 863,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test863",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1599,
    "___id": "T000002R000941",
    "___s": true
  },
  {
    "__docId__": 942,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test864",
    "testId": 864,
    "memberof": "src/moduleES6.js~suite569.suite838.suite852",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite852.test864",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1604,
    "___id": "T000002R000942",
    "___s": true
  },
  {
    "__docId__": 943,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite865",
    "testId": 865,
    "memberof": "src/moduleES6.js~suite569.suite838",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite838.suite865",
    "access": null,
    "description": "TemplateLiteral / TemplateElement (function):",
    "lineNumber": 1610,
    "___id": "T000002R000943",
    "___s": true
  },
  {
    "__docId__": 944,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test866",
    "testId": 866,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test866",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1624,
    "___id": "T000002R000944",
    "___s": true
  },
  {
    "__docId__": 945,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test867",
    "testId": 867,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test867",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1629,
    "___id": "T000002R000945",
    "___s": true
  },
  {
    "__docId__": 946,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test868",
    "testId": 868,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test868",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1634,
    "___id": "T000002R000946",
    "___s": true
  },
  {
    "__docId__": 947,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test869",
    "testId": 869,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test869",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1639,
    "___id": "T000002R000947",
    "___s": true
  },
  {
    "__docId__": 948,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test870",
    "testId": 870,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test870",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1644,
    "___id": "T000002R000948",
    "___s": true
  },
  {
    "__docId__": 949,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test871",
    "testId": 871,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test871",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1649,
    "___id": "T000002R000949",
    "___s": true
  },
  {
    "__docId__": 950,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test872",
    "testId": 872,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test872",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1654,
    "___id": "T000002R000950",
    "___s": true
  },
  {
    "__docId__": 951,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test873",
    "testId": 873,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test873",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1659,
    "___id": "T000002R000951",
    "___s": true
  },
  {
    "__docId__": 952,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test874",
    "testId": 874,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test874",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1664,
    "___id": "T000002R000952",
    "___s": true
  },
  {
    "__docId__": 953,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test875",
    "testId": 875,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test875",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1669,
    "___id": "T000002R000953",
    "___s": true
  },
  {
    "__docId__": 954,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test876",
    "testId": 876,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test876",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1674,
    "___id": "T000002R000954",
    "___s": true
  },
  {
    "__docId__": 955,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test877",
    "testId": 877,
    "memberof": "src/moduleES6.js~suite569.suite838.suite865",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite865.test877",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1679,
    "___id": "T000002R000955",
    "___s": true
  },
  {
    "__docId__": 956,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite878",
    "testId": 878,
    "memberof": "src/moduleES6.js~suite569.suite838",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite838.suite878",
    "access": null,
    "description": "TaggedTemplateExpression:",
    "lineNumber": 1685,
    "___id": "T000002R000956",
    "___s": true
  },
  {
    "__docId__": 957,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test879",
    "testId": 879,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test879",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1699,
    "___id": "T000002R000957",
    "___s": true
  },
  {
    "__docId__": 958,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test880",
    "testId": 880,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test880",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1704,
    "___id": "T000002R000958",
    "___s": true
  },
  {
    "__docId__": 959,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test881",
    "testId": 881,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test881",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1709,
    "___id": "T000002R000959",
    "___s": true
  },
  {
    "__docId__": 960,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test882",
    "testId": 882,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test882",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1714,
    "___id": "T000002R000960",
    "___s": true
  },
  {
    "__docId__": 961,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test883",
    "testId": 883,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test883",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1719,
    "___id": "T000002R000961",
    "___s": true
  },
  {
    "__docId__": 962,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test884",
    "testId": 884,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test884",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1724,
    "___id": "T000002R000962",
    "___s": true
  },
  {
    "__docId__": 963,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test885",
    "testId": 885,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test885",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1729,
    "___id": "T000002R000963",
    "___s": true
  },
  {
    "__docId__": 964,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test886",
    "testId": 886,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test886",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1734,
    "___id": "T000002R000964",
    "___s": true
  },
  {
    "__docId__": 965,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test887",
    "testId": 887,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test887",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1739,
    "___id": "T000002R000965",
    "___s": true
  },
  {
    "__docId__": 966,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test888",
    "testId": 888,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test888",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1744,
    "___id": "T000002R000966",
    "___s": true
  },
  {
    "__docId__": 967,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test889",
    "testId": 889,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test889",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1749,
    "___id": "T000002R000967",
    "___s": true
  },
  {
    "__docId__": 968,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test890",
    "testId": 890,
    "memberof": "src/moduleES6.js~suite569.suite838.suite878",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite838.suite878.test890",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1754,
    "___id": "T000002R000968",
    "___s": true
  },
  {
    "__docId__": 969,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite891",
    "testId": 891,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite891",
    "access": null,
    "description": "Patterns",
    "lineNumber": 1761,
    "___id": "T000002R000969",
    "___s": true
  },
  {
    "__docId__": 970,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite892",
    "testId": 892,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite892",
    "access": null,
    "description": "ObjectPattern (destructuring assignment):",
    "lineNumber": 1763,
    "___id": "T000002R000970",
    "___s": true
  },
  {
    "__docId__": 971,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test893",
    "testId": 893,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test893",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1777,
    "___id": "T000002R000971",
    "___s": true
  },
  {
    "__docId__": 972,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test894",
    "testId": 894,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test894",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1782,
    "___id": "T000002R000972",
    "___s": true
  },
  {
    "__docId__": 973,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test895",
    "testId": 895,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test895",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1787,
    "___id": "T000002R000973",
    "___s": true
  },
  {
    "__docId__": 974,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test896",
    "testId": 896,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test896",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1792,
    "___id": "T000002R000974",
    "___s": true
  },
  {
    "__docId__": 975,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test897",
    "testId": 897,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test897",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1797,
    "___id": "T000002R000975",
    "___s": true
  },
  {
    "__docId__": 976,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test898",
    "testId": 898,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test898",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1802,
    "___id": "T000002R000976",
    "___s": true
  },
  {
    "__docId__": 977,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test899",
    "testId": 899,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test899",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1807,
    "___id": "T000002R000977",
    "___s": true
  },
  {
    "__docId__": 978,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test900",
    "testId": 900,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test900",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1812,
    "___id": "T000002R000978",
    "___s": true
  },
  {
    "__docId__": 979,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test901",
    "testId": 901,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test901",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1817,
    "___id": "T000002R000979",
    "___s": true
  },
  {
    "__docId__": 980,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test902",
    "testId": 902,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test902",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1822,
    "___id": "T000002R000980",
    "___s": true
  },
  {
    "__docId__": 981,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test903",
    "testId": 903,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test903",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1827,
    "___id": "T000002R000981",
    "___s": true
  },
  {
    "__docId__": 982,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test904",
    "testId": 904,
    "memberof": "src/moduleES6.js~suite569.suite891.suite892",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite892.test904",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1832,
    "___id": "T000002R000982",
    "___s": true
  },
  {
    "__docId__": 983,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite905",
    "testId": 905,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite905",
    "access": null,
    "description": "ObjectPattern (anonymous destructuring assignment):",
    "lineNumber": 1838,
    "___id": "T000002R000983",
    "___s": true
  },
  {
    "__docId__": 984,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test906",
    "testId": 906,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test906",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1852,
    "___id": "T000002R000984",
    "___s": true
  },
  {
    "__docId__": 985,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test907",
    "testId": 907,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test907",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1857,
    "___id": "T000002R000985",
    "___s": true
  },
  {
    "__docId__": 986,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test908",
    "testId": 908,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test908",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1862,
    "___id": "T000002R000986",
    "___s": true
  },
  {
    "__docId__": 987,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test909",
    "testId": 909,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test909",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1867,
    "___id": "T000002R000987",
    "___s": true
  },
  {
    "__docId__": 988,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test910",
    "testId": 910,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test910",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1872,
    "___id": "T000002R000988",
    "___s": true
  },
  {
    "__docId__": 989,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test911",
    "testId": 911,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test911",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1877,
    "___id": "T000002R000989",
    "___s": true
  },
  {
    "__docId__": 990,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test912",
    "testId": 912,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test912",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1882,
    "___id": "T000002R000990",
    "___s": true
  },
  {
    "__docId__": 991,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test913",
    "testId": 913,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test913",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1887,
    "___id": "T000002R000991",
    "___s": true
  },
  {
    "__docId__": 992,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test914",
    "testId": 914,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test914",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1892,
    "___id": "T000002R000992",
    "___s": true
  },
  {
    "__docId__": 993,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test915",
    "testId": 915,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test915",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1897,
    "___id": "T000002R000993",
    "___s": true
  },
  {
    "__docId__": 994,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test916",
    "testId": 916,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test916",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1902,
    "___id": "T000002R000994",
    "___s": true
  },
  {
    "__docId__": 995,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test917",
    "testId": 917,
    "memberof": "src/moduleES6.js~suite569.suite891.suite905",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite905.test917",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1907,
    "___id": "T000002R000995",
    "___s": true
  },
  {
    "__docId__": 996,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite918",
    "testId": 918,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite918",
    "access": null,
    "description": "ObjectPattern (computed object property names and anonymous destructuring assignment):",
    "lineNumber": 1913,
    "___id": "T000002R000996",
    "___s": true
  },
  {
    "__docId__": 997,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test919",
    "testId": 919,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test919",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 1927,
    "___id": "T000002R000997",
    "___s": true
  },
  {
    "__docId__": 998,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test920",
    "testId": 920,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test920",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 1932,
    "___id": "T000002R000998",
    "___s": true
  },
  {
    "__docId__": 999,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test921",
    "testId": 921,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test921",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 1937,
    "___id": "T000002R000999",
    "___s": true
  },
  {
    "__docId__": 1000,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test922",
    "testId": 922,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test922",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 1942,
    "___id": "T000002R001000",
    "___s": true
  },
  {
    "__docId__": 1001,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test923",
    "testId": 923,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test923",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 1947,
    "___id": "T000002R001001",
    "___s": true
  },
  {
    "__docId__": 1002,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test924",
    "testId": 924,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test924",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 1952,
    "___id": "T000002R001002",
    "___s": true
  },
  {
    "__docId__": 1003,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test925",
    "testId": 925,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test925",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 1957,
    "___id": "T000002R001003",
    "___s": true
  },
  {
    "__docId__": 1004,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test926",
    "testId": 926,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test926",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 1962,
    "___id": "T000002R001004",
    "___s": true
  },
  {
    "__docId__": 1005,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test927",
    "testId": 927,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test927",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 1967,
    "___id": "T000002R001005",
    "___s": true
  },
  {
    "__docId__": 1006,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test928",
    "testId": 928,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test928",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 1972,
    "___id": "T000002R001006",
    "___s": true
  },
  {
    "__docId__": 1007,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test929",
    "testId": 929,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test929",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 1977,
    "___id": "T000002R001007",
    "___s": true
  },
  {
    "__docId__": 1008,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test930",
    "testId": 930,
    "memberof": "src/moduleES6.js~suite569.suite891.suite918",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite918.test930",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 1982,
    "___id": "T000002R001008",
    "___s": true
  },
  {
    "__docId__": 1009,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite931",
    "testId": 931,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite931",
    "access": null,
    "description": "ObjectPattern 2 (anonymous destructuring assignment):",
    "lineNumber": 1988,
    "___id": "T000002R001009",
    "___s": true
  },
  {
    "__docId__": 1010,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test932",
    "testId": 932,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test932",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2002,
    "___id": "T000002R001010",
    "___s": true
  },
  {
    "__docId__": 1011,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test933",
    "testId": 933,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test933",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2007,
    "___id": "T000002R001011",
    "___s": true
  },
  {
    "__docId__": 1012,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test934",
    "testId": 934,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test934",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2012,
    "___id": "T000002R001012",
    "___s": true
  },
  {
    "__docId__": 1013,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test935",
    "testId": 935,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test935",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2017,
    "___id": "T000002R001013",
    "___s": true
  },
  {
    "__docId__": 1014,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test936",
    "testId": 936,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test936",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2022,
    "___id": "T000002R001014",
    "___s": true
  },
  {
    "__docId__": 1015,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test937",
    "testId": 937,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test937",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2027,
    "___id": "T000002R001015",
    "___s": true
  },
  {
    "__docId__": 1016,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test938",
    "testId": 938,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test938",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2032,
    "___id": "T000002R001016",
    "___s": true
  },
  {
    "__docId__": 1017,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test939",
    "testId": 939,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test939",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2037,
    "___id": "T000002R001017",
    "___s": true
  },
  {
    "__docId__": 1018,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test940",
    "testId": 940,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test940",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2042,
    "___id": "T000002R001018",
    "___s": true
  },
  {
    "__docId__": 1019,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test941",
    "testId": 941,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test941",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2047,
    "___id": "T000002R001019",
    "___s": true
  },
  {
    "__docId__": 1020,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test942",
    "testId": 942,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test942",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2052,
    "___id": "T000002R001020",
    "___s": true
  },
  {
    "__docId__": 1021,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test943",
    "testId": 943,
    "memberof": "src/moduleES6.js~suite569.suite891.suite931",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite931.test943",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2057,
    "___id": "T000002R001021",
    "___s": true
  },
  {
    "__docId__": 1022,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite944",
    "testId": 944,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite944",
    "access": null,
    "description": "ArrayPattern (destructuring assignment):",
    "lineNumber": 2063,
    "___id": "T000002R001022",
    "___s": true
  },
  {
    "__docId__": 1023,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test945",
    "testId": 945,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test945",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2077,
    "___id": "T000002R001023",
    "___s": true
  },
  {
    "__docId__": 1024,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test946",
    "testId": 946,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test946",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2082,
    "___id": "T000002R001024",
    "___s": true
  },
  {
    "__docId__": 1025,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test947",
    "testId": 947,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test947",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2087,
    "___id": "T000002R001025",
    "___s": true
  },
  {
    "__docId__": 1026,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test948",
    "testId": 948,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test948",
    "access": null,
    "description": "methodAggregate does not have <anonymous> (object) Halstead operand identifier",
    "lineNumber": 2092,
    "___id": "T000002R001026",
    "___s": true
  },
  {
    "__docId__": 1027,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test949",
    "testId": 949,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test949",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2097,
    "___id": "T000002R001027",
    "___s": true
  },
  {
    "__docId__": 1028,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test950",
    "testId": 950,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test950",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2102,
    "___id": "T000002R001028",
    "___s": true
  },
  {
    "__docId__": 1029,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test951",
    "testId": 951,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test951",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2107,
    "___id": "T000002R001029",
    "___s": true
  },
  {
    "__docId__": 1030,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test952",
    "testId": 952,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test952",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2112,
    "___id": "T000002R001030",
    "___s": true
  },
  {
    "__docId__": 1031,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test953",
    "testId": 953,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test953",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2117,
    "___id": "T000002R001031",
    "___s": true
  },
  {
    "__docId__": 1032,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test954",
    "testId": 954,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test954",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2122,
    "___id": "T000002R001032",
    "___s": true
  },
  {
    "__docId__": 1033,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test955",
    "testId": 955,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test955",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2127,
    "___id": "T000002R001033",
    "___s": true
  },
  {
    "__docId__": 1034,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test956",
    "testId": 956,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test956",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2132,
    "___id": "T000002R001034",
    "___s": true
  },
  {
    "__docId__": 1035,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test957",
    "testId": 957,
    "memberof": "src/moduleES6.js~suite569.suite891.suite944",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite944.test957",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2137,
    "___id": "T000002R001035",
    "___s": true
  },
  {
    "__docId__": 1036,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite958",
    "testId": 958,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite958",
    "access": null,
    "description": "ArrayPattern (anonymous destructuring assignment):",
    "lineNumber": 2143,
    "___id": "T000002R001036",
    "___s": true
  },
  {
    "__docId__": 1037,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test959",
    "testId": 959,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test959",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2157,
    "___id": "T000002R001037",
    "___s": true
  },
  {
    "__docId__": 1038,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test960",
    "testId": 960,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test960",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2162,
    "___id": "T000002R001038",
    "___s": true
  },
  {
    "__docId__": 1039,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test961",
    "testId": 961,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test961",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2167,
    "___id": "T000002R001039",
    "___s": true
  },
  {
    "__docId__": 1040,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test962",
    "testId": 962,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test962",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2172,
    "___id": "T000002R001040",
    "___s": true
  },
  {
    "__docId__": 1041,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test963",
    "testId": 963,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test963",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2177,
    "___id": "T000002R001041",
    "___s": true
  },
  {
    "__docId__": 1042,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test964",
    "testId": 964,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test964",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2182,
    "___id": "T000002R001042",
    "___s": true
  },
  {
    "__docId__": 1043,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test965",
    "testId": 965,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test965",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2187,
    "___id": "T000002R001043",
    "___s": true
  },
  {
    "__docId__": 1044,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test966",
    "testId": 966,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test966",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2192,
    "___id": "T000002R001044",
    "___s": true
  },
  {
    "__docId__": 1045,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test967",
    "testId": 967,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test967",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2197,
    "___id": "T000002R001045",
    "___s": true
  },
  {
    "__docId__": 1046,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test968",
    "testId": 968,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test968",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2202,
    "___id": "T000002R001046",
    "___s": true
  },
  {
    "__docId__": 1047,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test969",
    "testId": 969,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test969",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2207,
    "___id": "T000002R001047",
    "___s": true
  },
  {
    "__docId__": 1048,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test970",
    "testId": 970,
    "memberof": "src/moduleES6.js~suite569.suite891.suite958",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite958.test970",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2212,
    "___id": "T000002R001048",
    "___s": true
  },
  {
    "__docId__": 1049,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite971",
    "testId": 971,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite971",
    "access": null,
    "description": "ArrayPattern / RestElement (anonymous destructuring assignment):",
    "lineNumber": 2218,
    "___id": "T000002R001049",
    "___s": true
  },
  {
    "__docId__": 1050,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test972",
    "testId": 972,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test972",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2232,
    "___id": "T000002R001050",
    "___s": true
  },
  {
    "__docId__": 1051,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test973",
    "testId": 973,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test973",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2237,
    "___id": "T000002R001051",
    "___s": true
  },
  {
    "__docId__": 1052,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test974",
    "testId": 974,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test974",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2242,
    "___id": "T000002R001052",
    "___s": true
  },
  {
    "__docId__": 1053,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test975",
    "testId": 975,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test975",
    "access": null,
    "description": "methodAggregate has `... (rest)` Halstead operator identifier",
    "lineNumber": 2247,
    "___id": "T000002R001053",
    "___s": true
  },
  {
    "__docId__": 1054,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test976",
    "testId": 976,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test976",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2252,
    "___id": "T000002R001054",
    "___s": true
  },
  {
    "__docId__": 1055,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test977",
    "testId": 977,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test977",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2257,
    "___id": "T000002R001055",
    "___s": true
  },
  {
    "__docId__": 1056,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test978",
    "testId": 978,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test978",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2262,
    "___id": "T000002R001056",
    "___s": true
  },
  {
    "__docId__": 1057,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test979",
    "testId": 979,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test979",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2267,
    "___id": "T000002R001057",
    "___s": true
  },
  {
    "__docId__": 1058,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test980",
    "testId": 980,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test980",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2272,
    "___id": "T000002R001058",
    "___s": true
  },
  {
    "__docId__": 1059,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test981",
    "testId": 981,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test981",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2277,
    "___id": "T000002R001059",
    "___s": true
  },
  {
    "__docId__": 1060,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test982",
    "testId": 982,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test982",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2282,
    "___id": "T000002R001060",
    "___s": true
  },
  {
    "__docId__": 1061,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test983",
    "testId": 983,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test983",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2287,
    "___id": "T000002R001061",
    "___s": true
  },
  {
    "__docId__": 1062,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test984",
    "testId": 984,
    "memberof": "src/moduleES6.js~suite569.suite891.suite971",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite971.test984",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2292,
    "___id": "T000002R001062",
    "___s": true
  },
  {
    "__docId__": 1063,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite985",
    "testId": 985,
    "memberof": "src/moduleES6.js~suite569.suite891",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite891.suite985",
    "access": null,
    "description": "FunctionDeclaration `defaults` (esprima) / AssignmentPattern (espree):",
    "lineNumber": 2298,
    "___id": "T000002R001063",
    "___s": true
  },
  {
    "__docId__": 1064,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test986",
    "testId": 986,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test986",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2312,
    "___id": "T000002R001064",
    "___s": true
  },
  {
    "__docId__": 1065,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test987",
    "testId": 987,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test987",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2317,
    "___id": "T000002R001065",
    "___s": true
  },
  {
    "__docId__": 1066,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test988",
    "testId": 988,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test988",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2322,
    "___id": "T000002R001066",
    "___s": true
  },
  {
    "__docId__": 1067,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test989",
    "testId": 989,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test989",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 2327,
    "___id": "T000002R001067",
    "___s": true
  },
  {
    "__docId__": 1068,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test990",
    "testId": 990,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test990",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 2332,
    "___id": "T000002R001068",
    "___s": true
  },
  {
    "__docId__": 1069,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test991",
    "testId": 991,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test991",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 2337,
    "___id": "T000002R001069",
    "___s": true
  },
  {
    "__docId__": 1070,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test992",
    "testId": 992,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test992",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 2342,
    "___id": "T000002R001070",
    "___s": true
  },
  {
    "__docId__": 1071,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test993",
    "testId": 993,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test993",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 2347,
    "___id": "T000002R001071",
    "___s": true
  },
  {
    "__docId__": 1072,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test994",
    "testId": 994,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test994",
    "access": null,
    "description": "methodAggregate has `... (rest)` Halstead operator identifier",
    "lineNumber": 2352,
    "___id": "T000002R001072",
    "___s": true
  },
  {
    "__docId__": 1073,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test995",
    "testId": 995,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test995",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2357,
    "___id": "T000002R001073",
    "___s": true
  },
  {
    "__docId__": 1074,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test996",
    "testId": 996,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test996",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2362,
    "___id": "T000002R001074",
    "___s": true
  },
  {
    "__docId__": 1075,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test997",
    "testId": 997,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test997",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2367,
    "___id": "T000002R001075",
    "___s": true
  },
  {
    "__docId__": 1076,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test998",
    "testId": 998,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test998",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2372,
    "___id": "T000002R001076",
    "___s": true
  },
  {
    "__docId__": 1077,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test999",
    "testId": 999,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test999",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2377,
    "___id": "T000002R001077",
    "___s": true
  },
  {
    "__docId__": 1078,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1000",
    "testId": 1000,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1000",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2382,
    "___id": "T000002R001078",
    "___s": true
  },
  {
    "__docId__": 1079,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1001",
    "testId": 1001,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1001",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2387,
    "___id": "T000002R001079",
    "___s": true
  },
  {
    "__docId__": 1080,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1002",
    "testId": 1002,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1002",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 2392,
    "___id": "T000002R001080",
    "___s": true
  },
  {
    "__docId__": 1081,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1003",
    "testId": 1003,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1003",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 2397,
    "___id": "T000002R001081",
    "___s": true
  },
  {
    "__docId__": 1082,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1004",
    "testId": 1004,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1004",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 2402,
    "___id": "T000002R001082",
    "___s": true
  },
  {
    "__docId__": 1083,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1005",
    "testId": 1005,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1005",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 2407,
    "___id": "T000002R001083",
    "___s": true
  },
  {
    "__docId__": 1084,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1006",
    "testId": 1006,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1006",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 2412,
    "___id": "T000002R001084",
    "___s": true
  },
  {
    "__docId__": 1085,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1007",
    "testId": 1007,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1007",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 2417,
    "___id": "T000002R001085",
    "___s": true
  },
  {
    "__docId__": 1086,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1008",
    "testId": 1008,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1008",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 2422,
    "___id": "T000002R001086",
    "___s": true
  },
  {
    "__docId__": 1087,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1009",
    "testId": 1009,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1009",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2427,
    "___id": "T000002R001087",
    "___s": true
  },
  {
    "__docId__": 1088,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1010",
    "testId": 1010,
    "memberof": "src/moduleES6.js~suite569.suite891.suite985",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite891.suite985.test1010",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2432,
    "___id": "T000002R001088",
    "___s": true
  },
  {
    "__docId__": 1089,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1011",
    "testId": 1011,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite1011",
    "access": null,
    "description": "Classes",
    "lineNumber": 2439,
    "___id": "T000002R001089",
    "___s": true
  },
  {
    "__docId__": 1090,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1012",
    "testId": 1012,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012",
    "access": null,
    "description": "class declaration:",
    "lineNumber": 2441,
    "___id": "T000002R001090",
    "___s": true
  },
  {
    "__docId__": 1091,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1013",
    "testId": 1013,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1013",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2455,
    "___id": "T000002R001091",
    "___s": true
  },
  {
    "__docId__": 1092,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1014",
    "testId": 1014,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1014",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2460,
    "___id": "T000002R001092",
    "___s": true
  },
  {
    "__docId__": 1093,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1015",
    "testId": 1015,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1015",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2465,
    "___id": "T000002R001093",
    "___s": true
  },
  {
    "__docId__": 1094,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1016",
    "testId": 1016,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1016",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2470,
    "___id": "T000002R001094",
    "___s": true
  },
  {
    "__docId__": 1095,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1017",
    "testId": 1017,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1017",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2475,
    "___id": "T000002R001095",
    "___s": true
  },
  {
    "__docId__": 1096,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1018",
    "testId": 1018,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1018",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2480,
    "___id": "T000002R001096",
    "___s": true
  },
  {
    "__docId__": 1097,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1019",
    "testId": 1019,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1019",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2485,
    "___id": "T000002R001097",
    "___s": true
  },
  {
    "__docId__": 1098,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1020",
    "testId": 1020,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1020",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2490,
    "___id": "T000002R001098",
    "___s": true
  },
  {
    "__docId__": 1099,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1021",
    "testId": 1021,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1021",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2495,
    "___id": "T000002R001099",
    "___s": true
  },
  {
    "__docId__": 1100,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1022",
    "testId": 1022,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1022",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2500,
    "___id": "T000002R001100",
    "___s": true
  },
  {
    "__docId__": 1101,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1023",
    "testId": 1023,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1023",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2505,
    "___id": "T000002R001101",
    "___s": true
  },
  {
    "__docId__": 1102,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1024",
    "testId": 1024,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1012",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1012.test1024",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2510,
    "___id": "T000002R001102",
    "___s": true
  },
  {
    "__docId__": 1103,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1025",
    "testId": 1025,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025",
    "access": null,
    "description": "class declaration w/ superclass:",
    "lineNumber": 2516,
    "___id": "T000002R001103",
    "___s": true
  },
  {
    "__docId__": 1104,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1026",
    "testId": 1026,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1026",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2530,
    "___id": "T000002R001104",
    "___s": true
  },
  {
    "__docId__": 1105,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1027",
    "testId": 1027,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1027",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2535,
    "___id": "T000002R001105",
    "___s": true
  },
  {
    "__docId__": 1106,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1028",
    "testId": 1028,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1028",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2540,
    "___id": "T000002R001106",
    "___s": true
  },
  {
    "__docId__": 1107,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1029",
    "testId": 1029,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1029",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2545,
    "___id": "T000002R001107",
    "___s": true
  },
  {
    "__docId__": 1108,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1030",
    "testId": 1030,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1030",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2550,
    "___id": "T000002R001108",
    "___s": true
  },
  {
    "__docId__": 1109,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1031",
    "testId": 1031,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1031",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2555,
    "___id": "T000002R001109",
    "___s": true
  },
  {
    "__docId__": 1110,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1032",
    "testId": 1032,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1032",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2560,
    "___id": "T000002R001110",
    "___s": true
  },
  {
    "__docId__": 1111,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1033",
    "testId": 1033,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1033",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2565,
    "___id": "T000002R001111",
    "___s": true
  },
  {
    "__docId__": 1112,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1034",
    "testId": 1034,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1034",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2570,
    "___id": "T000002R001112",
    "___s": true
  },
  {
    "__docId__": 1113,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1035",
    "testId": 1035,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1035",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2575,
    "___id": "T000002R001113",
    "___s": true
  },
  {
    "__docId__": 1114,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1036",
    "testId": 1036,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1036",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2580,
    "___id": "T000002R001114",
    "___s": true
  },
  {
    "__docId__": 1115,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1037",
    "testId": 1037,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1025",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1025.test1037",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2585,
    "___id": "T000002R001115",
    "___s": true
  },
  {
    "__docId__": 1116,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1038",
    "testId": 1038,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038",
    "access": null,
    "description": "class declaration w/ constructor:",
    "lineNumber": 2591,
    "___id": "T000002R001116",
    "___s": true
  },
  {
    "__docId__": 1117,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1039",
    "testId": 1039,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1039",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2605,
    "___id": "T000002R001117",
    "___s": true
  },
  {
    "__docId__": 1118,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1040",
    "testId": 1040,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1040",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2610,
    "___id": "T000002R001118",
    "___s": true
  },
  {
    "__docId__": 1119,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1041",
    "testId": 1041,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1041",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2615,
    "___id": "T000002R001119",
    "___s": true
  },
  {
    "__docId__": 1120,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1042",
    "testId": 1042,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1042",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 2620,
    "___id": "T000002R001120",
    "___s": true
  },
  {
    "__docId__": 1121,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1043",
    "testId": 1043,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1043",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 2625,
    "___id": "T000002R001121",
    "___s": true
  },
  {
    "__docId__": 1122,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1044",
    "testId": 1044,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1044",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 2630,
    "___id": "T000002R001122",
    "___s": true
  },
  {
    "__docId__": 1123,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1045",
    "testId": 1045,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1045",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 2635,
    "___id": "T000002R001123",
    "___s": true
  },
  {
    "__docId__": 1124,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1046",
    "testId": 1046,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1046",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 2640,
    "___id": "T000002R001124",
    "___s": true
  },
  {
    "__docId__": 1125,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1047",
    "testId": 1047,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1047",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 2645,
    "___id": "T000002R001125",
    "___s": true
  },
  {
    "__docId__": 1126,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1048",
    "testId": 1048,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1048",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 2650,
    "___id": "T000002R001126",
    "___s": true
  },
  {
    "__docId__": 1127,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1049",
    "testId": 1049,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1049",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 2655,
    "___id": "T000002R001127",
    "___s": true
  },
  {
    "__docId__": 1128,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1050",
    "testId": 1050,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1050",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 2660,
    "___id": "T000002R001128",
    "___s": true
  },
  {
    "__docId__": 1129,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1051",
    "testId": 1051,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1051",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 2665,
    "___id": "T000002R001129",
    "___s": true
  },
  {
    "__docId__": 1130,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1052",
    "testId": 1052,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1052",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 2670,
    "___id": "T000002R001130",
    "___s": true
  },
  {
    "__docId__": 1131,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1053",
    "testId": 1053,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1053",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 2675,
    "___id": "T000002R001131",
    "___s": true
  },
  {
    "__docId__": 1132,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1054",
    "testId": 1054,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1054",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 2680,
    "___id": "T000002R001132",
    "___s": true
  },
  {
    "__docId__": 1133,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1055",
    "testId": 1055,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1055",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2685,
    "___id": "T000002R001133",
    "___s": true
  },
  {
    "__docId__": 1134,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1056",
    "testId": 1056,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1056",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2690,
    "___id": "T000002R001134",
    "___s": true
  },
  {
    "__docId__": 1135,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1057",
    "testId": 1057,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1057",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2695,
    "___id": "T000002R001135",
    "___s": true
  },
  {
    "__docId__": 1136,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1058",
    "testId": 1058,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1058",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2700,
    "___id": "T000002R001136",
    "___s": true
  },
  {
    "__docId__": 1137,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1059",
    "testId": 1059,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1059",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2705,
    "___id": "T000002R001137",
    "___s": true
  },
  {
    "__docId__": 1138,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1060",
    "testId": 1060,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1060",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2710,
    "___id": "T000002R001138",
    "___s": true
  },
  {
    "__docId__": 1139,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1061",
    "testId": 1061,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1061",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2715,
    "___id": "T000002R001139",
    "___s": true
  },
  {
    "__docId__": 1140,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1062",
    "testId": 1062,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1062",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2720,
    "___id": "T000002R001140",
    "___s": true
  },
  {
    "__docId__": 1141,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1063",
    "testId": 1063,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1038",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1038.test1063",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2725,
    "___id": "T000002R001141",
    "___s": true
  },
  {
    "__docId__": 1142,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1064",
    "testId": 1064,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064",
    "access": null,
    "description": "class declaration w/ method:",
    "lineNumber": 2731,
    "___id": "T000002R001142",
    "___s": true
  },
  {
    "__docId__": 1143,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1065",
    "testId": 1065,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1065",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2745,
    "___id": "T000002R001143",
    "___s": true
  },
  {
    "__docId__": 1144,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1066",
    "testId": 1066,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1066",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2750,
    "___id": "T000002R001144",
    "___s": true
  },
  {
    "__docId__": 1145,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1067",
    "testId": 1067,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1067",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2755,
    "___id": "T000002R001145",
    "___s": true
  },
  {
    "__docId__": 1146,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1068",
    "testId": 1068,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1068",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 2760,
    "___id": "T000002R001146",
    "___s": true
  },
  {
    "__docId__": 1147,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1069",
    "testId": 1069,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1069",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 2765,
    "___id": "T000002R001147",
    "___s": true
  },
  {
    "__docId__": 1148,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1070",
    "testId": 1070,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1070",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 2770,
    "___id": "T000002R001148",
    "___s": true
  },
  {
    "__docId__": 1149,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1071",
    "testId": 1071,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1071",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 2775,
    "___id": "T000002R001149",
    "___s": true
  },
  {
    "__docId__": 1150,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1072",
    "testId": 1072,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1072",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 2780,
    "___id": "T000002R001150",
    "___s": true
  },
  {
    "__docId__": 1151,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1073",
    "testId": 1073,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1073",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 2785,
    "___id": "T000002R001151",
    "___s": true
  },
  {
    "__docId__": 1152,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1074",
    "testId": 1074,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1074",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 2790,
    "___id": "T000002R001152",
    "___s": true
  },
  {
    "__docId__": 1153,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1075",
    "testId": 1075,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1075",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 2795,
    "___id": "T000002R001153",
    "___s": true
  },
  {
    "__docId__": 1154,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1076",
    "testId": 1076,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1076",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 2800,
    "___id": "T000002R001154",
    "___s": true
  },
  {
    "__docId__": 1155,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1077",
    "testId": 1077,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1077",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 2805,
    "___id": "T000002R001155",
    "___s": true
  },
  {
    "__docId__": 1156,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1078",
    "testId": 1078,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1078",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 2810,
    "___id": "T000002R001156",
    "___s": true
  },
  {
    "__docId__": 1157,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1079",
    "testId": 1079,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1079",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 2815,
    "___id": "T000002R001157",
    "___s": true
  },
  {
    "__docId__": 1158,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1080",
    "testId": 1080,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1080",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 2820,
    "___id": "T000002R001158",
    "___s": true
  },
  {
    "__docId__": 1159,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1081",
    "testId": 1081,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1081",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2825,
    "___id": "T000002R001159",
    "___s": true
  },
  {
    "__docId__": 1160,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1082",
    "testId": 1082,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1082",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2830,
    "___id": "T000002R001160",
    "___s": true
  },
  {
    "__docId__": 1161,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1083",
    "testId": 1083,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1083",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2835,
    "___id": "T000002R001161",
    "___s": true
  },
  {
    "__docId__": 1162,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1084",
    "testId": 1084,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1084",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2840,
    "___id": "T000002R001162",
    "___s": true
  },
  {
    "__docId__": 1163,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1085",
    "testId": 1085,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1085",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2845,
    "___id": "T000002R001163",
    "___s": true
  },
  {
    "__docId__": 1164,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1086",
    "testId": 1086,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1086",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 2850,
    "___id": "T000002R001164",
    "___s": true
  },
  {
    "__docId__": 1165,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1087",
    "testId": 1087,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1087",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 2855,
    "___id": "T000002R001165",
    "___s": true
  },
  {
    "__docId__": 1166,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1088",
    "testId": 1088,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1088",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 2860,
    "___id": "T000002R001166",
    "___s": true
  },
  {
    "__docId__": 1167,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1089",
    "testId": 1089,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1064",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1064.test1089",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 2865,
    "___id": "T000002R001167",
    "___s": true
  },
  {
    "__docId__": 1168,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1090",
    "testId": 1090,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090",
    "access": null,
    "description": "class declaration w/ computed generator function method and computed delegated yield:",
    "lineNumber": 2871,
    "___id": "T000002R001168",
    "___s": true
  },
  {
    "__docId__": 1169,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1091",
    "testId": 1091,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1091",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 2885,
    "___id": "T000002R001169",
    "___s": true
  },
  {
    "__docId__": 1170,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1092",
    "testId": 1092,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1092",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 2890,
    "___id": "T000002R001170",
    "___s": true
  },
  {
    "__docId__": 1171,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1093",
    "testId": 1093,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1093",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 2895,
    "___id": "T000002R001171",
    "___s": true
  },
  {
    "__docId__": 1172,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1094",
    "testId": 1094,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1094",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 2900,
    "___id": "T000002R001172",
    "___s": true
  },
  {
    "__docId__": 1173,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1095",
    "testId": 1095,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1095",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 2905,
    "___id": "T000002R001173",
    "___s": true
  },
  {
    "__docId__": 1174,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1096",
    "testId": 1096,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1096",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 2910,
    "___id": "T000002R001174",
    "___s": true
  },
  {
    "__docId__": 1175,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1097",
    "testId": 1097,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1097",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 2915,
    "___id": "T000002R001175",
    "___s": true
  },
  {
    "__docId__": 1176,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1098",
    "testId": 1098,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1098",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 2920,
    "___id": "T000002R001176",
    "___s": true
  },
  {
    "__docId__": 1177,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1099",
    "testId": 1099,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1099",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 2925,
    "___id": "T000002R001177",
    "___s": true
  },
  {
    "__docId__": 1178,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1100",
    "testId": 1100,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1100",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 2930,
    "___id": "T000002R001178",
    "___s": true
  },
  {
    "__docId__": 1179,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1101",
    "testId": 1101,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1101",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 2935,
    "___id": "T000002R001179",
    "___s": true
  },
  {
    "__docId__": 1180,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1102",
    "testId": 1102,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1102",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 2940,
    "___id": "T000002R001180",
    "___s": true
  },
  {
    "__docId__": 1181,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1103",
    "testId": 1103,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1103",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 2945,
    "___id": "T000002R001181",
    "___s": true
  },
  {
    "__docId__": 1182,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1104",
    "testId": 1104,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1104",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 2950,
    "___id": "T000002R001182",
    "___s": true
  },
  {
    "__docId__": 1183,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1105",
    "testId": 1105,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1105",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 2955,
    "___id": "T000002R001183",
    "___s": true
  },
  {
    "__docId__": 1184,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1106",
    "testId": 1106,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1106",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 2960,
    "___id": "T000002R001184",
    "___s": true
  },
  {
    "__docId__": 1185,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1107",
    "testId": 1107,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1107",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 2965,
    "___id": "T000002R001185",
    "___s": true
  },
  {
    "__docId__": 1186,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1108",
    "testId": 1108,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1108",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 2970,
    "___id": "T000002R001186",
    "___s": true
  },
  {
    "__docId__": 1187,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1109",
    "testId": 1109,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1109",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 2975,
    "___id": "T000002R001187",
    "___s": true
  },
  {
    "__docId__": 1188,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1110",
    "testId": 1110,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1110",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 2980,
    "___id": "T000002R001188",
    "___s": true
  },
  {
    "__docId__": 1189,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1111",
    "testId": 1111,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1111",
    "access": null,
    "description": "methodAggregate has correct Halstead operand identifiers",
    "lineNumber": 2985,
    "___id": "T000002R001189",
    "___s": true
  },
  {
    "__docId__": 1190,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1112",
    "testId": 1112,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1112",
    "access": null,
    "description": "methodAggregate has correct Halstead operator identifiers",
    "lineNumber": 2991,
    "___id": "T000002R001190",
    "___s": true
  },
  {
    "__docId__": 1191,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1113",
    "testId": 1113,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1113",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 2997,
    "___id": "T000002R001191",
    "___s": true
  },
  {
    "__docId__": 1192,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1114",
    "testId": 1114,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1114",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3002,
    "___id": "T000002R001192",
    "___s": true
  },
  {
    "__docId__": 1193,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1115",
    "testId": 1115,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1115",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3007,
    "___id": "T000002R001193",
    "___s": true
  },
  {
    "__docId__": 1194,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1116",
    "testId": 1116,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1116",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3012,
    "___id": "T000002R001194",
    "___s": true
  },
  {
    "__docId__": 1195,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1117",
    "testId": 1117,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1090",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1090.test1117",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3017,
    "___id": "T000002R001195",
    "___s": true
  },
  {
    "__docId__": 1196,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1118",
    "testId": 1118,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118",
    "access": null,
    "description": "class declaration w/ computed (string) method:",
    "lineNumber": 3023,
    "___id": "T000002R001196",
    "___s": true
  },
  {
    "__docId__": 1197,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1119",
    "testId": 1119,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1119",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 3037,
    "___id": "T000002R001197",
    "___s": true
  },
  {
    "__docId__": 1198,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1120",
    "testId": 1120,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1120",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 3042,
    "___id": "T000002R001198",
    "___s": true
  },
  {
    "__docId__": 1199,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1121",
    "testId": 1121,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1121",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 3047,
    "___id": "T000002R001199",
    "___s": true
  },
  {
    "__docId__": 1200,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1122",
    "testId": 1122,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1122",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 3052,
    "___id": "T000002R001200",
    "___s": true
  },
  {
    "__docId__": 1201,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1123",
    "testId": 1123,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1123",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3057,
    "___id": "T000002R001201",
    "___s": true
  },
  {
    "__docId__": 1202,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1124",
    "testId": 1124,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1124",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 3062,
    "___id": "T000002R001202",
    "___s": true
  },
  {
    "__docId__": 1203,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1125",
    "testId": 1125,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1125",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 3067,
    "___id": "T000002R001203",
    "___s": true
  },
  {
    "__docId__": 1204,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1126",
    "testId": 1126,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1126",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 3072,
    "___id": "T000002R001204",
    "___s": true
  },
  {
    "__docId__": 1205,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1127",
    "testId": 1127,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1127",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 3077,
    "___id": "T000002R001205",
    "___s": true
  },
  {
    "__docId__": 1206,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1128",
    "testId": 1128,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1128",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 3082,
    "___id": "T000002R001206",
    "___s": true
  },
  {
    "__docId__": 1207,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1129",
    "testId": 1129,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1129",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 3087,
    "___id": "T000002R001207",
    "___s": true
  },
  {
    "__docId__": 1208,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1130",
    "testId": 1130,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1130",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 3092,
    "___id": "T000002R001208",
    "___s": true
  },
  {
    "__docId__": 1209,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1131",
    "testId": 1131,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1131",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 3097,
    "___id": "T000002R001209",
    "___s": true
  },
  {
    "__docId__": 1210,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1132",
    "testId": 1132,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1132",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 3102,
    "___id": "T000002R001210",
    "___s": true
  },
  {
    "__docId__": 1211,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1133",
    "testId": 1133,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1133",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 3107,
    "___id": "T000002R001211",
    "___s": true
  },
  {
    "__docId__": 1212,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1134",
    "testId": 1134,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1134",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 3112,
    "___id": "T000002R001212",
    "___s": true
  },
  {
    "__docId__": 1213,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1135",
    "testId": 1135,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1135",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 3117,
    "___id": "T000002R001213",
    "___s": true
  },
  {
    "__docId__": 1214,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1136",
    "testId": 1136,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1136",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 3122,
    "___id": "T000002R001214",
    "___s": true
  },
  {
    "__docId__": 1215,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1137",
    "testId": 1137,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1137",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 3127,
    "___id": "T000002R001215",
    "___s": true
  },
  {
    "__docId__": 1216,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1138",
    "testId": 1138,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1138",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 3132,
    "___id": "T000002R001216",
    "___s": true
  },
  {
    "__docId__": 1217,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1139",
    "testId": 1139,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1139",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 3137,
    "___id": "T000002R001217",
    "___s": true
  },
  {
    "__docId__": 1218,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1140",
    "testId": 1140,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1140",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3142,
    "___id": "T000002R001218",
    "___s": true
  },
  {
    "__docId__": 1219,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1141",
    "testId": 1141,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1141",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3147,
    "___id": "T000002R001219",
    "___s": true
  },
  {
    "__docId__": 1220,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1142",
    "testId": 1142,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1142",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3152,
    "___id": "T000002R001220",
    "___s": true
  },
  {
    "__docId__": 1221,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1143",
    "testId": 1143,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1118",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1118.test1143",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3157,
    "___id": "T000002R001221",
    "___s": true
  },
  {
    "__docId__": 1222,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1144",
    "testId": 1144,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1144",
    "access": null,
    "description": "class declaration w/ computed (variable) method:",
    "lineNumber": 3163,
    "___id": "T000002R001222",
    "___s": true
  },
  {
    "__docId__": 1223,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1145",
    "testId": 1145,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1144",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1144.test1145",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3165,
    "___id": "T000002R001223",
    "___s": true
  },
  {
    "__docId__": 1224,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1146",
    "testId": 1146,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1146",
    "access": null,
    "description": "class declaration w/ computed (2 variable concatenation) method:",
    "lineNumber": 3172,
    "___id": "T000002R001224",
    "___s": true
  },
  {
    "__docId__": 1225,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1147",
    "testId": 1147,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1146",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1146.test1147",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3174,
    "___id": "T000002R001225",
    "___s": true
  },
  {
    "__docId__": 1226,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1148",
    "testId": 1148,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1148",
    "access": null,
    "description": "class declaration w/ computed (3 variable concatenation) method:",
    "lineNumber": 3181,
    "___id": "T000002R001226",
    "___s": true
  },
  {
    "__docId__": 1227,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1149",
    "testId": 1149,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1148",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1148.test1149",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3183,
    "___id": "T000002R001227",
    "___s": true
  },
  {
    "__docId__": 1228,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1150",
    "testId": 1150,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1150",
    "access": null,
    "description": "class declaration w/ computed (2 variable + literal concatenation) method:",
    "lineNumber": 3190,
    "___id": "T000002R001228",
    "___s": true
  },
  {
    "__docId__": 1229,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1151",
    "testId": 1151,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1150",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1150.test1151",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3192,
    "___id": "T000002R001229",
    "___s": true
  },
  {
    "__docId__": 1230,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1152",
    "testId": 1152,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1152",
    "access": null,
    "description": "class declaration w/ computed (2 variable + numerical concatenation) method:",
    "lineNumber": 3199,
    "___id": "T000002R001230",
    "___s": true
  },
  {
    "__docId__": 1231,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1153",
    "testId": 1153,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1152",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1152.test1153",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3201,
    "___id": "T000002R001231",
    "___s": true
  },
  {
    "__docId__": 1232,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1154",
    "testId": 1154,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1154",
    "access": null,
    "description": "class declaration w/ computed (2 variable + numerical concatenation) method:",
    "lineNumber": 3208,
    "___id": "T000002R001232",
    "___s": true
  },
  {
    "__docId__": 1233,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1155",
    "testId": 1155,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1154",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1154.test1155",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3210,
    "___id": "T000002R001233",
    "___s": true
  },
  {
    "__docId__": 1234,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1156",
    "testId": 1156,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1156",
    "access": null,
    "description": "class declaration w/ computed (2 variable + null concatenation) method:",
    "lineNumber": 3217,
    "___id": "T000002R001234",
    "___s": true
  },
  {
    "__docId__": 1235,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1157",
    "testId": 1157,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1156",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1156.test1157",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3219,
    "___id": "T000002R001235",
    "___s": true
  },
  {
    "__docId__": 1236,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1158",
    "testId": 1158,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1158",
    "access": null,
    "description": "class declaration w/ computed (Symbol / 2 member expression) method:",
    "lineNumber": 3226,
    "___id": "T000002R001236",
    "___s": true
  },
  {
    "__docId__": 1237,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1159",
    "testId": 1159,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1158",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1158.test1159",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3228,
    "___id": "T000002R001237",
    "___s": true
  },
  {
    "__docId__": 1238,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1160",
    "testId": 1160,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1160",
    "access": null,
    "description": "class declaration w/ computed (3 member expression) method:",
    "lineNumber": 3235,
    "___id": "T000002R001238",
    "___s": true
  },
  {
    "__docId__": 1239,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1161",
    "testId": 1161,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1160",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1160.test1161",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3237,
    "___id": "T000002R001239",
    "___s": true
  },
  {
    "__docId__": 1240,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1162",
    "testId": 1162,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1162",
    "access": null,
    "description": "class declaration w/ computed (2 member expression + concatenation) method:",
    "lineNumber": 3244,
    "___id": "T000002R001240",
    "___s": true
  },
  {
    "__docId__": 1241,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1163",
    "testId": 1163,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1162",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1162.test1163",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3246,
    "___id": "T000002R001241",
    "___s": true
  },
  {
    "__docId__": 1242,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1164",
    "testId": 1164,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1164",
    "access": null,
    "description": "class declaration w/ computed (2 member expression + concatenation with method called) method:",
    "lineNumber": 3253,
    "___id": "T000002R001242",
    "___s": true
  },
  {
    "__docId__": 1243,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1165",
    "testId": 1165,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1164",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1164.test1165",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3255,
    "___id": "T000002R001243",
    "___s": true
  },
  {
    "__docId__": 1244,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1166",
    "testId": 1166,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1166",
    "access": null,
    "description": "class declaration w/ computed (template literal) method:",
    "lineNumber": 3262,
    "___id": "T000002R001244",
    "___s": true
  },
  {
    "__docId__": 1245,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1167",
    "testId": 1167,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1166",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1166.test1167",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3264,
    "___id": "T000002R001245",
    "___s": true
  },
  {
    "__docId__": 1246,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1168",
    "testId": 1168,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1168",
    "access": null,
    "description": "class declaration w/ computed (template literal + concatenation) method:",
    "lineNumber": 3271,
    "___id": "T000002R001246",
    "___s": true
  },
  {
    "__docId__": 1247,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1169",
    "testId": 1169,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1168",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1168.test1169",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3273,
    "___id": "T000002R001247",
    "___s": true
  },
  {
    "__docId__": 1248,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1170",
    "testId": 1170,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170",
    "access": null,
    "description": "class declaration w/ getter method:",
    "lineNumber": 3280,
    "___id": "T000002R001248",
    "___s": true
  },
  {
    "__docId__": 1249,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1171",
    "testId": 1171,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1171",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 3294,
    "___id": "T000002R001249",
    "___s": true
  },
  {
    "__docId__": 1250,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1172",
    "testId": 1172,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1172",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 3299,
    "___id": "T000002R001250",
    "___s": true
  },
  {
    "__docId__": 1251,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1173",
    "testId": 1173,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1173",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 3304,
    "___id": "T000002R001251",
    "___s": true
  },
  {
    "__docId__": 1252,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1174",
    "testId": 1174,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1174",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 3309,
    "___id": "T000002R001252",
    "___s": true
  },
  {
    "__docId__": 1253,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1175",
    "testId": 1175,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1175",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3314,
    "___id": "T000002R001253",
    "___s": true
  },
  {
    "__docId__": 1254,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1176",
    "testId": 1176,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1176",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 3319,
    "___id": "T000002R001254",
    "___s": true
  },
  {
    "__docId__": 1255,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1177",
    "testId": 1177,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1177",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 3324,
    "___id": "T000002R001255",
    "___s": true
  },
  {
    "__docId__": 1256,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1178",
    "testId": 1178,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1178",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 3329,
    "___id": "T000002R001256",
    "___s": true
  },
  {
    "__docId__": 1257,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1179",
    "testId": 1179,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1179",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 3334,
    "___id": "T000002R001257",
    "___s": true
  },
  {
    "__docId__": 1258,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1180",
    "testId": 1180,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1180",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 3339,
    "___id": "T000002R001258",
    "___s": true
  },
  {
    "__docId__": 1259,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1181",
    "testId": 1181,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1181",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 3344,
    "___id": "T000002R001259",
    "___s": true
  },
  {
    "__docId__": 1260,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1182",
    "testId": 1182,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1182",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 3349,
    "___id": "T000002R001260",
    "___s": true
  },
  {
    "__docId__": 1261,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1183",
    "testId": 1183,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1183",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 3354,
    "___id": "T000002R001261",
    "___s": true
  },
  {
    "__docId__": 1262,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1184",
    "testId": 1184,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1184",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 3359,
    "___id": "T000002R001262",
    "___s": true
  },
  {
    "__docId__": 1263,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1185",
    "testId": 1185,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1185",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 3364,
    "___id": "T000002R001263",
    "___s": true
  },
  {
    "__docId__": 1264,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1186",
    "testId": 1186,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1186",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 3369,
    "___id": "T000002R001264",
    "___s": true
  },
  {
    "__docId__": 1265,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1187",
    "testId": 1187,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1187",
    "access": null,
    "description": "methodAggregate has `get` Halstead operator identifier",
    "lineNumber": 3374,
    "___id": "T000002R001265",
    "___s": true
  },
  {
    "__docId__": 1266,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1188",
    "testId": 1188,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1188",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 3379,
    "___id": "T000002R001266",
    "___s": true
  },
  {
    "__docId__": 1267,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1189",
    "testId": 1189,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1189",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 3384,
    "___id": "T000002R001267",
    "___s": true
  },
  {
    "__docId__": 1268,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1190",
    "testId": 1190,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1190",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 3389,
    "___id": "T000002R001268",
    "___s": true
  },
  {
    "__docId__": 1269,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1191",
    "testId": 1191,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1191",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 3394,
    "___id": "T000002R001269",
    "___s": true
  },
  {
    "__docId__": 1270,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1192",
    "testId": 1192,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1192",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 3399,
    "___id": "T000002R001270",
    "___s": true
  },
  {
    "__docId__": 1271,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1193",
    "testId": 1193,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1193",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3404,
    "___id": "T000002R001271",
    "___s": true
  },
  {
    "__docId__": 1272,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1194",
    "testId": 1194,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1194",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3409,
    "___id": "T000002R001272",
    "___s": true
  },
  {
    "__docId__": 1273,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1195",
    "testId": 1195,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1195",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3414,
    "___id": "T000002R001273",
    "___s": true
  },
  {
    "__docId__": 1274,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1196",
    "testId": 1196,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1170",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1170.test1196",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3419,
    "___id": "T000002R001274",
    "___s": true
  },
  {
    "__docId__": 1275,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1197",
    "testId": 1197,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197",
    "access": null,
    "description": "class declaration w/ setter method:",
    "lineNumber": 3425,
    "___id": "T000002R001275",
    "___s": true
  },
  {
    "__docId__": 1276,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1198",
    "testId": 1198,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1198",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 3439,
    "___id": "T000002R001276",
    "___s": true
  },
  {
    "__docId__": 1277,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1199",
    "testId": 1199,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1199",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 3444,
    "___id": "T000002R001277",
    "___s": true
  },
  {
    "__docId__": 1278,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1200",
    "testId": 1200,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1200",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 3449,
    "___id": "T000002R001278",
    "___s": true
  },
  {
    "__docId__": 1279,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1201",
    "testId": 1201,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1201",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 3454,
    "___id": "T000002R001279",
    "___s": true
  },
  {
    "__docId__": 1280,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1202",
    "testId": 1202,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1202",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3459,
    "___id": "T000002R001280",
    "___s": true
  },
  {
    "__docId__": 1281,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1203",
    "testId": 1203,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1203",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 3464,
    "___id": "T000002R001281",
    "___s": true
  },
  {
    "__docId__": 1282,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1204",
    "testId": 1204,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1204",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 3469,
    "___id": "T000002R001282",
    "___s": true
  },
  {
    "__docId__": 1283,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1205",
    "testId": 1205,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1205",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 3474,
    "___id": "T000002R001283",
    "___s": true
  },
  {
    "__docId__": 1284,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1206",
    "testId": 1206,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1206",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 3479,
    "___id": "T000002R001284",
    "___s": true
  },
  {
    "__docId__": 1285,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1207",
    "testId": 1207,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1207",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 3484,
    "___id": "T000002R001285",
    "___s": true
  },
  {
    "__docId__": 1286,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1208",
    "testId": 1208,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1208",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 3489,
    "___id": "T000002R001286",
    "___s": true
  },
  {
    "__docId__": 1287,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1209",
    "testId": 1209,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1209",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 3494,
    "___id": "T000002R001287",
    "___s": true
  },
  {
    "__docId__": 1288,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1210",
    "testId": 1210,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1210",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 3499,
    "___id": "T000002R001288",
    "___s": true
  },
  {
    "__docId__": 1289,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1211",
    "testId": 1211,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1211",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 3504,
    "___id": "T000002R001289",
    "___s": true
  },
  {
    "__docId__": 1290,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1212",
    "testId": 1212,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1212",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 3509,
    "___id": "T000002R001290",
    "___s": true
  },
  {
    "__docId__": 1291,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1213",
    "testId": 1213,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1213",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 3514,
    "___id": "T000002R001291",
    "___s": true
  },
  {
    "__docId__": 1292,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1214",
    "testId": 1214,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1214",
    "access": null,
    "description": "methodAggregate has `set` Halstead operator identifier",
    "lineNumber": 3519,
    "___id": "T000002R001292",
    "___s": true
  },
  {
    "__docId__": 1293,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1215",
    "testId": 1215,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1215",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 3524,
    "___id": "T000002R001293",
    "___s": true
  },
  {
    "__docId__": 1294,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1216",
    "testId": 1216,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1216",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 3529,
    "___id": "T000002R001294",
    "___s": true
  },
  {
    "__docId__": 1295,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1217",
    "testId": 1217,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1217",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 3534,
    "___id": "T000002R001295",
    "___s": true
  },
  {
    "__docId__": 1296,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1218",
    "testId": 1218,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1218",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 3539,
    "___id": "T000002R001296",
    "___s": true
  },
  {
    "__docId__": 1297,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1219",
    "testId": 1219,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1219",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 3544,
    "___id": "T000002R001297",
    "___s": true
  },
  {
    "__docId__": 1298,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1220",
    "testId": 1220,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1220",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3549,
    "___id": "T000002R001298",
    "___s": true
  },
  {
    "__docId__": 1299,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1221",
    "testId": 1221,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1221",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3554,
    "___id": "T000002R001299",
    "___s": true
  },
  {
    "__docId__": 1300,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1222",
    "testId": 1222,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1222",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3559,
    "___id": "T000002R001300",
    "___s": true
  },
  {
    "__docId__": 1301,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1223",
    "testId": 1223,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1197",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1197.test1223",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3564,
    "___id": "T000002R001301",
    "___s": true
  },
  {
    "__docId__": 1302,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1224",
    "testId": 1224,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224",
    "access": null,
    "description": "class declaration w/ static method:",
    "lineNumber": 3570,
    "___id": "T000002R001302",
    "___s": true
  },
  {
    "__docId__": 1303,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1225",
    "testId": 1225,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1225",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 3584,
    "___id": "T000002R001303",
    "___s": true
  },
  {
    "__docId__": 1304,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1226",
    "testId": 1226,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1226",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 3589,
    "___id": "T000002R001304",
    "___s": true
  },
  {
    "__docId__": 1305,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1227",
    "testId": 1227,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1227",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 3594,
    "___id": "T000002R001305",
    "___s": true
  },
  {
    "__docId__": 1306,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1228",
    "testId": 1228,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1228",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 3599,
    "___id": "T000002R001306",
    "___s": true
  },
  {
    "__docId__": 1307,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1229",
    "testId": 1229,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1229",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3604,
    "___id": "T000002R001307",
    "___s": true
  },
  {
    "__docId__": 1308,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1230",
    "testId": 1230,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1230",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 3609,
    "___id": "T000002R001308",
    "___s": true
  },
  {
    "__docId__": 1309,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1231",
    "testId": 1231,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1231",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 3614,
    "___id": "T000002R001309",
    "___s": true
  },
  {
    "__docId__": 1310,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1232",
    "testId": 1232,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1232",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 3619,
    "___id": "T000002R001310",
    "___s": true
  },
  {
    "__docId__": 1311,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1233",
    "testId": 1233,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1233",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 3624,
    "___id": "T000002R001311",
    "___s": true
  },
  {
    "__docId__": 1312,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1234",
    "testId": 1234,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1234",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 3629,
    "___id": "T000002R001312",
    "___s": true
  },
  {
    "__docId__": 1313,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1235",
    "testId": 1235,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1235",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 3634,
    "___id": "T000002R001313",
    "___s": true
  },
  {
    "__docId__": 1314,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1236",
    "testId": 1236,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1236",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 3639,
    "___id": "T000002R001314",
    "___s": true
  },
  {
    "__docId__": 1315,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1237",
    "testId": 1237,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1237",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 3644,
    "___id": "T000002R001315",
    "___s": true
  },
  {
    "__docId__": 1316,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1238",
    "testId": 1238,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1238",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 3649,
    "___id": "T000002R001316",
    "___s": true
  },
  {
    "__docId__": 1317,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1239",
    "testId": 1239,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1239",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 3654,
    "___id": "T000002R001317",
    "___s": true
  },
  {
    "__docId__": 1318,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1240",
    "testId": 1240,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1240",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 3659,
    "___id": "T000002R001318",
    "___s": true
  },
  {
    "__docId__": 1319,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1241",
    "testId": 1241,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1241",
    "access": null,
    "description": "methodAggregate has `static` Halstead operator identifier",
    "lineNumber": 3664,
    "___id": "T000002R001319",
    "___s": true
  },
  {
    "__docId__": 1320,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1242",
    "testId": 1242,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1242",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 3669,
    "___id": "T000002R001320",
    "___s": true
  },
  {
    "__docId__": 1321,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1243",
    "testId": 1243,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1243",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 3674,
    "___id": "T000002R001321",
    "___s": true
  },
  {
    "__docId__": 1322,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1244",
    "testId": 1244,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1244",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 3679,
    "___id": "T000002R001322",
    "___s": true
  },
  {
    "__docId__": 1323,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1245",
    "testId": 1245,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1245",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 3684,
    "___id": "T000002R001323",
    "___s": true
  },
  {
    "__docId__": 1324,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1246",
    "testId": 1246,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1246",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 3689,
    "___id": "T000002R001324",
    "___s": true
  },
  {
    "__docId__": 1325,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1247",
    "testId": 1247,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1247",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3694,
    "___id": "T000002R001325",
    "___s": true
  },
  {
    "__docId__": 1326,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1248",
    "testId": 1248,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1248",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3699,
    "___id": "T000002R001326",
    "___s": true
  },
  {
    "__docId__": 1327,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1249",
    "testId": 1249,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1249",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3704,
    "___id": "T000002R001327",
    "___s": true
  },
  {
    "__docId__": 1328,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1250",
    "testId": 1250,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1224",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1224.test1250",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3709,
    "___id": "T000002R001328",
    "___s": true
  },
  {
    "__docId__": 1329,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1251",
    "testId": 1251,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251",
    "access": null,
    "description": "class declaration w/ constructor + meta property:",
    "lineNumber": 3715,
    "___id": "T000002R001329",
    "___s": true
  },
  {
    "__docId__": 1330,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1252",
    "testId": 1252,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1252",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 3729,
    "___id": "T000002R001330",
    "___s": true
  },
  {
    "__docId__": 1331,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1253",
    "testId": 1253,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1253",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 3734,
    "___id": "T000002R001331",
    "___s": true
  },
  {
    "__docId__": 1332,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1254",
    "testId": 1254,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1254",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 3739,
    "___id": "T000002R001332",
    "___s": true
  },
  {
    "__docId__": 1333,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1255",
    "testId": 1255,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1255",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 3744,
    "___id": "T000002R001333",
    "___s": true
  },
  {
    "__docId__": 1334,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1256",
    "testId": 1256,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1256",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 3749,
    "___id": "T000002R001334",
    "___s": true
  },
  {
    "__docId__": 1335,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1257",
    "testId": 1257,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1257",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 3754,
    "___id": "T000002R001335",
    "___s": true
  },
  {
    "__docId__": 1336,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1258",
    "testId": 1258,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1258",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 3759,
    "___id": "T000002R001336",
    "___s": true
  },
  {
    "__docId__": 1337,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1259",
    "testId": 1259,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1259",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 3764,
    "___id": "T000002R001337",
    "___s": true
  },
  {
    "__docId__": 1338,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1260",
    "testId": 1260,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1260",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 3769,
    "___id": "T000002R001338",
    "___s": true
  },
  {
    "__docId__": 1339,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1261",
    "testId": 1261,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1261",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 3774,
    "___id": "T000002R001339",
    "___s": true
  },
  {
    "__docId__": 1340,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1262",
    "testId": 1262,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1262",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 3779,
    "___id": "T000002R001340",
    "___s": true
  },
  {
    "__docId__": 1341,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1263",
    "testId": 1263,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1263",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 3784,
    "___id": "T000002R001341",
    "___s": true
  },
  {
    "__docId__": 1342,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1264",
    "testId": 1264,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1264",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 3789,
    "___id": "T000002R001342",
    "___s": true
  },
  {
    "__docId__": 1343,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1265",
    "testId": 1265,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1265",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 3794,
    "___id": "T000002R001343",
    "___s": true
  },
  {
    "__docId__": 1344,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1266",
    "testId": 1266,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1266",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 3799,
    "___id": "T000002R001344",
    "___s": true
  },
  {
    "__docId__": 1345,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1267",
    "testId": 1267,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1267",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 3804,
    "___id": "T000002R001345",
    "___s": true
  },
  {
    "__docId__": 1346,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1268",
    "testId": 1268,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1268",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 3809,
    "___id": "T000002R001346",
    "___s": true
  },
  {
    "__docId__": 1347,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1269",
    "testId": 1269,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1269",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 3814,
    "___id": "T000002R001347",
    "___s": true
  },
  {
    "__docId__": 1348,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1270",
    "testId": 1270,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1270",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 3819,
    "___id": "T000002R001348",
    "___s": true
  },
  {
    "__docId__": 1349,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1271",
    "testId": 1271,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1271",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 3824,
    "___id": "T000002R001349",
    "___s": true
  },
  {
    "__docId__": 1350,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1272",
    "testId": 1272,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1272",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 3829,
    "___id": "T000002R001350",
    "___s": true
  },
  {
    "__docId__": 1351,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1273",
    "testId": 1273,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1273",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3834,
    "___id": "T000002R001351",
    "___s": true
  },
  {
    "__docId__": 1352,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1274",
    "testId": 1274,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1274",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3839,
    "___id": "T000002R001352",
    "___s": true
  },
  {
    "__docId__": 1353,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1275",
    "testId": 1275,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1275",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3844,
    "___id": "T000002R001353",
    "___s": true
  },
  {
    "__docId__": 1354,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1276",
    "testId": 1276,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1251",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1251.test1276",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3849,
    "___id": "T000002R001354",
    "___s": true
  },
  {
    "__docId__": 1355,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1277",
    "testId": 1277,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277",
    "access": null,
    "description": "class expression:",
    "lineNumber": 3855,
    "___id": "T000002R001355",
    "___s": true
  },
  {
    "__docId__": 1356,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1278",
    "testId": 1278,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1278",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 3869,
    "___id": "T000002R001356",
    "___s": true
  },
  {
    "__docId__": 1357,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1279",
    "testId": 1279,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1279",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 3874,
    "___id": "T000002R001357",
    "___s": true
  },
  {
    "__docId__": 1358,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1280",
    "testId": 1280,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1280",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 3879,
    "___id": "T000002R001358",
    "___s": true
  },
  {
    "__docId__": 1359,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1281",
    "testId": 1281,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1281",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 3884,
    "___id": "T000002R001359",
    "___s": true
  },
  {
    "__docId__": 1360,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1282",
    "testId": 1282,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1282",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 3889,
    "___id": "T000002R001360",
    "___s": true
  },
  {
    "__docId__": 1361,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1283",
    "testId": 1283,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1283",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 3894,
    "___id": "T000002R001361",
    "___s": true
  },
  {
    "__docId__": 1362,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1284",
    "testId": 1284,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1284",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 3899,
    "___id": "T000002R001362",
    "___s": true
  },
  {
    "__docId__": 1363,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1285",
    "testId": 1285,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1285",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 3904,
    "___id": "T000002R001363",
    "___s": true
  },
  {
    "__docId__": 1364,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1286",
    "testId": 1286,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1286",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3909,
    "___id": "T000002R001364",
    "___s": true
  },
  {
    "__docId__": 1365,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1287",
    "testId": 1287,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1287",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3914,
    "___id": "T000002R001365",
    "___s": true
  },
  {
    "__docId__": 1366,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1288",
    "testId": 1288,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1288",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3919,
    "___id": "T000002R001366",
    "___s": true
  },
  {
    "__docId__": 1367,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1289",
    "testId": 1289,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1277",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1277.test1289",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3924,
    "___id": "T000002R001367",
    "___s": true
  },
  {
    "__docId__": 1368,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1290",
    "testId": 1290,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290",
    "access": null,
    "description": "class expression (named):",
    "lineNumber": 3930,
    "___id": "T000002R001368",
    "___s": true
  },
  {
    "__docId__": 1369,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1291",
    "testId": 1291,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1291",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 3944,
    "___id": "T000002R001369",
    "___s": true
  },
  {
    "__docId__": 1370,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1292",
    "testId": 1292,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1292",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 3949,
    "___id": "T000002R001370",
    "___s": true
  },
  {
    "__docId__": 1371,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1293",
    "testId": 1293,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1293",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 3954,
    "___id": "T000002R001371",
    "___s": true
  },
  {
    "__docId__": 1372,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1294",
    "testId": 1294,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1294",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 3959,
    "___id": "T000002R001372",
    "___s": true
  },
  {
    "__docId__": 1373,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1295",
    "testId": 1295,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1295",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 3964,
    "___id": "T000002R001373",
    "___s": true
  },
  {
    "__docId__": 1374,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1296",
    "testId": 1296,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1296",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 3969,
    "___id": "T000002R001374",
    "___s": true
  },
  {
    "__docId__": 1375,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1297",
    "testId": 1297,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1297",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 3974,
    "___id": "T000002R001375",
    "___s": true
  },
  {
    "__docId__": 1376,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1298",
    "testId": 1298,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1298",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 3979,
    "___id": "T000002R001376",
    "___s": true
  },
  {
    "__docId__": 1377,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1299",
    "testId": 1299,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1299",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 3984,
    "___id": "T000002R001377",
    "___s": true
  },
  {
    "__docId__": 1378,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1300",
    "testId": 1300,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1300",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 3989,
    "___id": "T000002R001378",
    "___s": true
  },
  {
    "__docId__": 1379,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1301",
    "testId": 1301,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1301",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 3994,
    "___id": "T000002R001379",
    "___s": true
  },
  {
    "__docId__": 1380,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1302",
    "testId": 1302,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1290",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1290.test1302",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 3999,
    "___id": "T000002R001380",
    "___s": true
  },
  {
    "__docId__": 1381,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1303",
    "testId": 1303,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303",
    "access": null,
    "description": "class expression w/ superclass:",
    "lineNumber": 4005,
    "___id": "T000002R001381",
    "___s": true
  },
  {
    "__docId__": 1382,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1304",
    "testId": 1304,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1304",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4019,
    "___id": "T000002R001382",
    "___s": true
  },
  {
    "__docId__": 1383,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1305",
    "testId": 1305,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1305",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4024,
    "___id": "T000002R001383",
    "___s": true
  },
  {
    "__docId__": 1384,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1306",
    "testId": 1306,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1306",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4029,
    "___id": "T000002R001384",
    "___s": true
  },
  {
    "__docId__": 1385,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1307",
    "testId": 1307,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1307",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4034,
    "___id": "T000002R001385",
    "___s": true
  },
  {
    "__docId__": 1386,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1308",
    "testId": 1308,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1308",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4039,
    "___id": "T000002R001386",
    "___s": true
  },
  {
    "__docId__": 1387,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1309",
    "testId": 1309,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1309",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4044,
    "___id": "T000002R001387",
    "___s": true
  },
  {
    "__docId__": 1388,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1310",
    "testId": 1310,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1310",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4049,
    "___id": "T000002R001388",
    "___s": true
  },
  {
    "__docId__": 1389,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1311",
    "testId": 1311,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1311",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4054,
    "___id": "T000002R001389",
    "___s": true
  },
  {
    "__docId__": 1390,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1312",
    "testId": 1312,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1312",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4059,
    "___id": "T000002R001390",
    "___s": true
  },
  {
    "__docId__": 1391,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1313",
    "testId": 1313,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1313",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4064,
    "___id": "T000002R001391",
    "___s": true
  },
  {
    "__docId__": 1392,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1314",
    "testId": 1314,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1314",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4069,
    "___id": "T000002R001392",
    "___s": true
  },
  {
    "__docId__": 1393,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1315",
    "testId": 1315,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1303",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1303.test1315",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 4074,
    "___id": "T000002R001393",
    "___s": true
  },
  {
    "__docId__": 1394,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1316",
    "testId": 1316,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316",
    "access": null,
    "description": "class expression (named) w/ superclass:",
    "lineNumber": 4080,
    "___id": "T000002R001394",
    "___s": true
  },
  {
    "__docId__": 1395,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1317",
    "testId": 1317,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1317",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4094,
    "___id": "T000002R001395",
    "___s": true
  },
  {
    "__docId__": 1396,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1318",
    "testId": 1318,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1318",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4099,
    "___id": "T000002R001396",
    "___s": true
  },
  {
    "__docId__": 1397,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1319",
    "testId": 1319,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1319",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4104,
    "___id": "T000002R001397",
    "___s": true
  },
  {
    "__docId__": 1398,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1320",
    "testId": 1320,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1320",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4109,
    "___id": "T000002R001398",
    "___s": true
  },
  {
    "__docId__": 1399,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1321",
    "testId": 1321,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1321",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4114,
    "___id": "T000002R001399",
    "___s": true
  },
  {
    "__docId__": 1400,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1322",
    "testId": 1322,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1322",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4119,
    "___id": "T000002R001400",
    "___s": true
  },
  {
    "__docId__": 1401,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1323",
    "testId": 1323,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1323",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4124,
    "___id": "T000002R001401",
    "___s": true
  },
  {
    "__docId__": 1402,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1324",
    "testId": 1324,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1324",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4129,
    "___id": "T000002R001402",
    "___s": true
  },
  {
    "__docId__": 1403,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1325",
    "testId": 1325,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1325",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4134,
    "___id": "T000002R001403",
    "___s": true
  },
  {
    "__docId__": 1404,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1326",
    "testId": 1326,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1326",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4139,
    "___id": "T000002R001404",
    "___s": true
  },
  {
    "__docId__": 1405,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1327",
    "testId": 1327,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1327",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4144,
    "___id": "T000002R001405",
    "___s": true
  },
  {
    "__docId__": 1406,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1328",
    "testId": 1328,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1316",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1316.test1328",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 4149,
    "___id": "T000002R001406",
    "___s": true
  },
  {
    "__docId__": 1407,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1329",
    "testId": 1329,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329",
    "access": null,
    "description": "class expression w/ constructor:",
    "lineNumber": 4155,
    "___id": "T000002R001407",
    "___s": true
  },
  {
    "__docId__": 1408,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1330",
    "testId": 1330,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1330",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4169,
    "___id": "T000002R001408",
    "___s": true
  },
  {
    "__docId__": 1409,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1331",
    "testId": 1331,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1331",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4174,
    "___id": "T000002R001409",
    "___s": true
  },
  {
    "__docId__": 1410,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1332",
    "testId": 1332,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1332",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4179,
    "___id": "T000002R001410",
    "___s": true
  },
  {
    "__docId__": 1411,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1333",
    "testId": 1333,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1333",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 4184,
    "___id": "T000002R001411",
    "___s": true
  },
  {
    "__docId__": 1412,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1334",
    "testId": 1334,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1334",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 4189,
    "___id": "T000002R001412",
    "___s": true
  },
  {
    "__docId__": 1413,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1335",
    "testId": 1335,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1335",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 4194,
    "___id": "T000002R001413",
    "___s": true
  },
  {
    "__docId__": 1414,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1336",
    "testId": 1336,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1336",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 4199,
    "___id": "T000002R001414",
    "___s": true
  },
  {
    "__docId__": 1415,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1337",
    "testId": 1337,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1337",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 4204,
    "___id": "T000002R001415",
    "___s": true
  },
  {
    "__docId__": 1416,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1338",
    "testId": 1338,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1338",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 4209,
    "___id": "T000002R001416",
    "___s": true
  },
  {
    "__docId__": 1417,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1339",
    "testId": 1339,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1339",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 4214,
    "___id": "T000002R001417",
    "___s": true
  },
  {
    "__docId__": 1418,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1340",
    "testId": 1340,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1340",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 4219,
    "___id": "T000002R001418",
    "___s": true
  },
  {
    "__docId__": 1419,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1341",
    "testId": 1341,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1341",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 4224,
    "___id": "T000002R001419",
    "___s": true
  },
  {
    "__docId__": 1420,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1342",
    "testId": 1342,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1342",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 4229,
    "___id": "T000002R001420",
    "___s": true
  },
  {
    "__docId__": 1421,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1343",
    "testId": 1343,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1343",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 4234,
    "___id": "T000002R001421",
    "___s": true
  },
  {
    "__docId__": 1422,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1344",
    "testId": 1344,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1344",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 4239,
    "___id": "T000002R001422",
    "___s": true
  },
  {
    "__docId__": 1423,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1345",
    "testId": 1345,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1345",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 4244,
    "___id": "T000002R001423",
    "___s": true
  },
  {
    "__docId__": 1424,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1346",
    "testId": 1346,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1346",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4249,
    "___id": "T000002R001424",
    "___s": true
  },
  {
    "__docId__": 1425,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1347",
    "testId": 1347,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1347",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4254,
    "___id": "T000002R001425",
    "___s": true
  },
  {
    "__docId__": 1426,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1348",
    "testId": 1348,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1348",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4259,
    "___id": "T000002R001426",
    "___s": true
  },
  {
    "__docId__": 1427,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1349",
    "testId": 1349,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1349",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4264,
    "___id": "T000002R001427",
    "___s": true
  },
  {
    "__docId__": 1428,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1350",
    "testId": 1350,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1350",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4269,
    "___id": "T000002R001428",
    "___s": true
  },
  {
    "__docId__": 1429,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1351",
    "testId": 1351,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1351",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4274,
    "___id": "T000002R001429",
    "___s": true
  },
  {
    "__docId__": 1430,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1352",
    "testId": 1352,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1352",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4279,
    "___id": "T000002R001430",
    "___s": true
  },
  {
    "__docId__": 1431,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1353",
    "testId": 1353,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1353",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4284,
    "___id": "T000002R001431",
    "___s": true
  },
  {
    "__docId__": 1432,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1354",
    "testId": 1354,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1329",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1329.test1354",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 4289,
    "___id": "T000002R001432",
    "___s": true
  },
  {
    "__docId__": 1433,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1355",
    "testId": 1355,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355",
    "access": null,
    "description": "class expression w/ method:",
    "lineNumber": 4295,
    "___id": "T000002R001433",
    "___s": true
  },
  {
    "__docId__": 1434,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1356",
    "testId": 1356,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1356",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4309,
    "___id": "T000002R001434",
    "___s": true
  },
  {
    "__docId__": 1435,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1357",
    "testId": 1357,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1357",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4314,
    "___id": "T000002R001435",
    "___s": true
  },
  {
    "__docId__": 1436,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1358",
    "testId": 1358,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1358",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4319,
    "___id": "T000002R001436",
    "___s": true
  },
  {
    "__docId__": 1437,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1359",
    "testId": 1359,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1359",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 4324,
    "___id": "T000002R001437",
    "___s": true
  },
  {
    "__docId__": 1438,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1360",
    "testId": 1360,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1360",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 4329,
    "___id": "T000002R001438",
    "___s": true
  },
  {
    "__docId__": 1439,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1361",
    "testId": 1361,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1361",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 4334,
    "___id": "T000002R001439",
    "___s": true
  },
  {
    "__docId__": 1440,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1362",
    "testId": 1362,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1362",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 4339,
    "___id": "T000002R001440",
    "___s": true
  },
  {
    "__docId__": 1441,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1363",
    "testId": 1363,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1363",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 4344,
    "___id": "T000002R001441",
    "___s": true
  },
  {
    "__docId__": 1442,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1364",
    "testId": 1364,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1364",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 4349,
    "___id": "T000002R001442",
    "___s": true
  },
  {
    "__docId__": 1443,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1365",
    "testId": 1365,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1365",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 4354,
    "___id": "T000002R001443",
    "___s": true
  },
  {
    "__docId__": 1444,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1366",
    "testId": 1366,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1366",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 4359,
    "___id": "T000002R001444",
    "___s": true
  },
  {
    "__docId__": 1445,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1367",
    "testId": 1367,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1367",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 4364,
    "___id": "T000002R001445",
    "___s": true
  },
  {
    "__docId__": 1446,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1368",
    "testId": 1368,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1368",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 4369,
    "___id": "T000002R001446",
    "___s": true
  },
  {
    "__docId__": 1447,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1369",
    "testId": 1369,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1369",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 4374,
    "___id": "T000002R001447",
    "___s": true
  },
  {
    "__docId__": 1448,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1370",
    "testId": 1370,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1370",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 4379,
    "___id": "T000002R001448",
    "___s": true
  },
  {
    "__docId__": 1449,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1371",
    "testId": 1371,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1371",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 4384,
    "___id": "T000002R001449",
    "___s": true
  },
  {
    "__docId__": 1450,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1372",
    "testId": 1372,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1372",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4389,
    "___id": "T000002R001450",
    "___s": true
  },
  {
    "__docId__": 1451,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1373",
    "testId": 1373,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1373",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4394,
    "___id": "T000002R001451",
    "___s": true
  },
  {
    "__docId__": 1452,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1374",
    "testId": 1374,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1374",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4399,
    "___id": "T000002R001452",
    "___s": true
  },
  {
    "__docId__": 1453,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1375",
    "testId": 1375,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1375",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4404,
    "___id": "T000002R001453",
    "___s": true
  },
  {
    "__docId__": 1454,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1376",
    "testId": 1376,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1376",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4409,
    "___id": "T000002R001454",
    "___s": true
  },
  {
    "__docId__": 1455,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1377",
    "testId": 1377,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1377",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4414,
    "___id": "T000002R001455",
    "___s": true
  },
  {
    "__docId__": 1456,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1378",
    "testId": 1378,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1378",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4419,
    "___id": "T000002R001456",
    "___s": true
  },
  {
    "__docId__": 1457,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1379",
    "testId": 1379,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1379",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4424,
    "___id": "T000002R001457",
    "___s": true
  },
  {
    "__docId__": 1458,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1380",
    "testId": 1380,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1355",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1355.test1380",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 4429,
    "___id": "T000002R001458",
    "___s": true
  },
  {
    "__docId__": 1459,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1381",
    "testId": 1381,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381",
    "access": null,
    "description": "class expression w/ getter method:",
    "lineNumber": 4435,
    "___id": "T000002R001459",
    "___s": true
  },
  {
    "__docId__": 1460,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1382",
    "testId": 1382,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1382",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4449,
    "___id": "T000002R001460",
    "___s": true
  },
  {
    "__docId__": 1461,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1383",
    "testId": 1383,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1383",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4454,
    "___id": "T000002R001461",
    "___s": true
  },
  {
    "__docId__": 1462,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1384",
    "testId": 1384,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1384",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4459,
    "___id": "T000002R001462",
    "___s": true
  },
  {
    "__docId__": 1463,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1385",
    "testId": 1385,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1385",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 4464,
    "___id": "T000002R001463",
    "___s": true
  },
  {
    "__docId__": 1464,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1386",
    "testId": 1386,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1386",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 4469,
    "___id": "T000002R001464",
    "___s": true
  },
  {
    "__docId__": 1465,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1387",
    "testId": 1387,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1387",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 4474,
    "___id": "T000002R001465",
    "___s": true
  },
  {
    "__docId__": 1466,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1388",
    "testId": 1388,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1388",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 4479,
    "___id": "T000002R001466",
    "___s": true
  },
  {
    "__docId__": 1467,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1389",
    "testId": 1389,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1389",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 4484,
    "___id": "T000002R001467",
    "___s": true
  },
  {
    "__docId__": 1468,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1390",
    "testId": 1390,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1390",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 4489,
    "___id": "T000002R001468",
    "___s": true
  },
  {
    "__docId__": 1469,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1391",
    "testId": 1391,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1391",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 4494,
    "___id": "T000002R001469",
    "___s": true
  },
  {
    "__docId__": 1470,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1392",
    "testId": 1392,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1392",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 4499,
    "___id": "T000002R001470",
    "___s": true
  },
  {
    "__docId__": 1471,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1393",
    "testId": 1393,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1393",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 4504,
    "___id": "T000002R001471",
    "___s": true
  },
  {
    "__docId__": 1472,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1394",
    "testId": 1394,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1394",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 4509,
    "___id": "T000002R001472",
    "___s": true
  },
  {
    "__docId__": 1473,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1395",
    "testId": 1395,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1395",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 4514,
    "___id": "T000002R001473",
    "___s": true
  },
  {
    "__docId__": 1474,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1396",
    "testId": 1396,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1396",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 4519,
    "___id": "T000002R001474",
    "___s": true
  },
  {
    "__docId__": 1475,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1397",
    "testId": 1397,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1397",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 4524,
    "___id": "T000002R001475",
    "___s": true
  },
  {
    "__docId__": 1476,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1398",
    "testId": 1398,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1398",
    "access": null,
    "description": "methodAggregate has `get` Halstead operator identifier",
    "lineNumber": 4529,
    "___id": "T000002R001476",
    "___s": true
  },
  {
    "__docId__": 1477,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1399",
    "testId": 1399,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1399",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4534,
    "___id": "T000002R001477",
    "___s": true
  },
  {
    "__docId__": 1478,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1400",
    "testId": 1400,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1400",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4539,
    "___id": "T000002R001478",
    "___s": true
  },
  {
    "__docId__": 1479,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1401",
    "testId": 1401,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1401",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4544,
    "___id": "T000002R001479",
    "___s": true
  },
  {
    "__docId__": 1480,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1402",
    "testId": 1402,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1402",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4549,
    "___id": "T000002R001480",
    "___s": true
  },
  {
    "__docId__": 1481,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1403",
    "testId": 1403,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1403",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4554,
    "___id": "T000002R001481",
    "___s": true
  },
  {
    "__docId__": 1482,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1404",
    "testId": 1404,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1404",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4559,
    "___id": "T000002R001482",
    "___s": true
  },
  {
    "__docId__": 1483,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1405",
    "testId": 1405,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1405",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4564,
    "___id": "T000002R001483",
    "___s": true
  },
  {
    "__docId__": 1484,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1406",
    "testId": 1406,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1406",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4569,
    "___id": "T000002R001484",
    "___s": true
  },
  {
    "__docId__": 1485,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1407",
    "testId": 1407,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1381",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1381.test1407",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 4574,
    "___id": "T000002R001485",
    "___s": true
  },
  {
    "__docId__": 1486,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1408",
    "testId": 1408,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408",
    "access": null,
    "description": "class expression w/ setter method:",
    "lineNumber": 4580,
    "___id": "T000002R001486",
    "___s": true
  },
  {
    "__docId__": 1487,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1409",
    "testId": 1409,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1409",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4594,
    "___id": "T000002R001487",
    "___s": true
  },
  {
    "__docId__": 1488,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1410",
    "testId": 1410,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1410",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4599,
    "___id": "T000002R001488",
    "___s": true
  },
  {
    "__docId__": 1489,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1411",
    "testId": 1411,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1411",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4604,
    "___id": "T000002R001489",
    "___s": true
  },
  {
    "__docId__": 1490,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1412",
    "testId": 1412,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1412",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 4609,
    "___id": "T000002R001490",
    "___s": true
  },
  {
    "__docId__": 1491,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1413",
    "testId": 1413,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1413",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 4614,
    "___id": "T000002R001491",
    "___s": true
  },
  {
    "__docId__": 1492,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1414",
    "testId": 1414,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1414",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 4619,
    "___id": "T000002R001492",
    "___s": true
  },
  {
    "__docId__": 1493,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1415",
    "testId": 1415,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1415",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 4624,
    "___id": "T000002R001493",
    "___s": true
  },
  {
    "__docId__": 1494,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1416",
    "testId": 1416,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1416",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 4629,
    "___id": "T000002R001494",
    "___s": true
  },
  {
    "__docId__": 1495,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1417",
    "testId": 1417,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1417",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 4634,
    "___id": "T000002R001495",
    "___s": true
  },
  {
    "__docId__": 1496,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1418",
    "testId": 1418,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1418",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 4639,
    "___id": "T000002R001496",
    "___s": true
  },
  {
    "__docId__": 1497,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1419",
    "testId": 1419,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1419",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 4644,
    "___id": "T000002R001497",
    "___s": true
  },
  {
    "__docId__": 1498,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1420",
    "testId": 1420,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1420",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 4649,
    "___id": "T000002R001498",
    "___s": true
  },
  {
    "__docId__": 1499,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1421",
    "testId": 1421,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1421",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 4654,
    "___id": "T000002R001499",
    "___s": true
  },
  {
    "__docId__": 1500,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1422",
    "testId": 1422,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1422",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 4659,
    "___id": "T000002R001500",
    "___s": true
  },
  {
    "__docId__": 1501,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1423",
    "testId": 1423,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1423",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 4664,
    "___id": "T000002R001501",
    "___s": true
  },
  {
    "__docId__": 1502,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1424",
    "testId": 1424,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1424",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 4669,
    "___id": "T000002R001502",
    "___s": true
  },
  {
    "__docId__": 1503,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1425",
    "testId": 1425,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1425",
    "access": null,
    "description": "methodAggregate has `set` Halstead operator identifier",
    "lineNumber": 4674,
    "___id": "T000002R001503",
    "___s": true
  },
  {
    "__docId__": 1504,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1426",
    "testId": 1426,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1426",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4679,
    "___id": "T000002R001504",
    "___s": true
  },
  {
    "__docId__": 1505,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1427",
    "testId": 1427,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1427",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4684,
    "___id": "T000002R001505",
    "___s": true
  },
  {
    "__docId__": 1506,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1428",
    "testId": 1428,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1428",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4689,
    "___id": "T000002R001506",
    "___s": true
  },
  {
    "__docId__": 1507,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1429",
    "testId": 1429,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1429",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4694,
    "___id": "T000002R001507",
    "___s": true
  },
  {
    "__docId__": 1508,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1430",
    "testId": 1430,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1430",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4699,
    "___id": "T000002R001508",
    "___s": true
  },
  {
    "__docId__": 1509,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1431",
    "testId": 1431,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1431",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4704,
    "___id": "T000002R001509",
    "___s": true
  },
  {
    "__docId__": 1510,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1432",
    "testId": 1432,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1432",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4709,
    "___id": "T000002R001510",
    "___s": true
  },
  {
    "__docId__": 1511,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1433",
    "testId": 1433,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1433",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4714,
    "___id": "T000002R001511",
    "___s": true
  },
  {
    "__docId__": 1512,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1434",
    "testId": 1434,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1408",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1408.test1434",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 4719,
    "___id": "T000002R001512",
    "___s": true
  },
  {
    "__docId__": 1513,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1435",
    "testId": 1435,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435",
    "access": null,
    "description": "class expression w/ static method:",
    "lineNumber": 4725,
    "___id": "T000002R001513",
    "___s": true
  },
  {
    "__docId__": 1514,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1436",
    "testId": 1436,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1436",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4739,
    "___id": "T000002R001514",
    "___s": true
  },
  {
    "__docId__": 1515,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1437",
    "testId": 1437,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1437",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4744,
    "___id": "T000002R001515",
    "___s": true
  },
  {
    "__docId__": 1516,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1438",
    "testId": 1438,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1438",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4749,
    "___id": "T000002R001516",
    "___s": true
  },
  {
    "__docId__": 1517,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1439",
    "testId": 1439,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1439",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 4754,
    "___id": "T000002R001517",
    "___s": true
  },
  {
    "__docId__": 1518,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1440",
    "testId": 1440,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1440",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 4759,
    "___id": "T000002R001518",
    "___s": true
  },
  {
    "__docId__": 1519,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1441",
    "testId": 1441,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1441",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 4764,
    "___id": "T000002R001519",
    "___s": true
  },
  {
    "__docId__": 1520,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1442",
    "testId": 1442,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1442",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 4769,
    "___id": "T000002R001520",
    "___s": true
  },
  {
    "__docId__": 1521,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1443",
    "testId": 1443,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1443",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 4774,
    "___id": "T000002R001521",
    "___s": true
  },
  {
    "__docId__": 1522,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1444",
    "testId": 1444,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1444",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 4779,
    "___id": "T000002R001522",
    "___s": true
  },
  {
    "__docId__": 1523,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1445",
    "testId": 1445,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1445",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 4784,
    "___id": "T000002R001523",
    "___s": true
  },
  {
    "__docId__": 1524,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1446",
    "testId": 1446,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1446",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 4789,
    "___id": "T000002R001524",
    "___s": true
  },
  {
    "__docId__": 1525,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1447",
    "testId": 1447,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1447",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 4794,
    "___id": "T000002R001525",
    "___s": true
  },
  {
    "__docId__": 1526,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1448",
    "testId": 1448,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1448",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 4799,
    "___id": "T000002R001526",
    "___s": true
  },
  {
    "__docId__": 1527,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1449",
    "testId": 1449,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1449",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 4804,
    "___id": "T000002R001527",
    "___s": true
  },
  {
    "__docId__": 1528,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1450",
    "testId": 1450,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1450",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 4809,
    "___id": "T000002R001528",
    "___s": true
  },
  {
    "__docId__": 1529,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1451",
    "testId": 1451,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1451",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 4814,
    "___id": "T000002R001529",
    "___s": true
  },
  {
    "__docId__": 1530,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1452",
    "testId": 1452,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1452",
    "access": null,
    "description": "methodAggregate has `static` Halstead operator identifier",
    "lineNumber": 4819,
    "___id": "T000002R001530",
    "___s": true
  },
  {
    "__docId__": 1531,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1453",
    "testId": 1453,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1453",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4824,
    "___id": "T000002R001531",
    "___s": true
  },
  {
    "__docId__": 1532,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1454",
    "testId": 1454,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1454",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4829,
    "___id": "T000002R001532",
    "___s": true
  },
  {
    "__docId__": 1533,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1455",
    "testId": 1455,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1455",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4834,
    "___id": "T000002R001533",
    "___s": true
  },
  {
    "__docId__": 1534,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1456",
    "testId": 1456,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1456",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4839,
    "___id": "T000002R001534",
    "___s": true
  },
  {
    "__docId__": 1535,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1457",
    "testId": 1457,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1457",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4844,
    "___id": "T000002R001535",
    "___s": true
  },
  {
    "__docId__": 1536,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1458",
    "testId": 1458,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1458",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4849,
    "___id": "T000002R001536",
    "___s": true
  },
  {
    "__docId__": 1537,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1459",
    "testId": 1459,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1459",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4854,
    "___id": "T000002R001537",
    "___s": true
  },
  {
    "__docId__": 1538,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1460",
    "testId": 1460,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1460",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4859,
    "___id": "T000002R001538",
    "___s": true
  },
  {
    "__docId__": 1539,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1461",
    "testId": 1461,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1435",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1435.test1461",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 4864,
    "___id": "T000002R001539",
    "___s": true
  },
  {
    "__docId__": 1540,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1462",
    "testId": 1462,
    "memberof": "src/moduleES6.js~suite569.suite1011",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462",
    "access": null,
    "description": "class expression w/ constructor + meta property:",
    "lineNumber": 4870,
    "___id": "T000002R001540",
    "___s": true
  },
  {
    "__docId__": 1541,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1463",
    "testId": 1463,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1463",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 4884,
    "___id": "T000002R001541",
    "___s": true
  },
  {
    "__docId__": 1542,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1464",
    "testId": 1464,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1464",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 4889,
    "___id": "T000002R001542",
    "___s": true
  },
  {
    "__docId__": 1543,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1465",
    "testId": 1465,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1465",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 4894,
    "___id": "T000002R001543",
    "___s": true
  },
  {
    "__docId__": 1544,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1466",
    "testId": 1466,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1466",
    "access": null,
    "description": "class methods has correct length",
    "lineNumber": 4899,
    "___id": "T000002R001544",
    "___s": true
  },
  {
    "__docId__": 1545,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1467",
    "testId": 1467,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1467",
    "access": null,
    "description": "class method has correct name",
    "lineNumber": 4904,
    "___id": "T000002R001545",
    "___s": true
  },
  {
    "__docId__": 1546,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1468",
    "testId": 1468,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1468",
    "access": null,
    "description": "class method has correct physical lines of code",
    "lineNumber": 4909,
    "___id": "T000002R001546",
    "___s": true
  },
  {
    "__docId__": 1547,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1469",
    "testId": 1469,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1469",
    "access": null,
    "description": "class method has correct logical lines of code",
    "lineNumber": 4914,
    "___id": "T000002R001547",
    "___s": true
  },
  {
    "__docId__": 1548,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1470",
    "testId": 1470,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1470",
    "access": null,
    "description": "class method has correct cyclomatic complexity",
    "lineNumber": 4919,
    "___id": "T000002R001548",
    "___s": true
  },
  {
    "__docId__": 1549,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1471",
    "testId": 1471,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1471",
    "access": null,
    "description": "class method has correct parameter count",
    "lineNumber": 4924,
    "___id": "T000002R001549",
    "___s": true
  },
  {
    "__docId__": 1550,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1472",
    "testId": 1472,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1472",
    "access": null,
    "description": "class method has correct Halstead length",
    "lineNumber": 4929,
    "___id": "T000002R001550",
    "___s": true
  },
  {
    "__docId__": 1551,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1473",
    "testId": 1473,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1473",
    "access": null,
    "description": "class method has correct Halstead vocabulary",
    "lineNumber": 4934,
    "___id": "T000002R001551",
    "___s": true
  },
  {
    "__docId__": 1552,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1474",
    "testId": 1474,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1474",
    "access": null,
    "description": "class method has correct Halstead difficulty",
    "lineNumber": 4939,
    "___id": "T000002R001552",
    "___s": true
  },
  {
    "__docId__": 1553,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1475",
    "testId": 1475,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1475",
    "access": null,
    "description": "class method has correct Halstead volume",
    "lineNumber": 4944,
    "___id": "T000002R001553",
    "___s": true
  },
  {
    "__docId__": 1554,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1476",
    "testId": 1476,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1476",
    "access": null,
    "description": "class method has correct Halstead effort",
    "lineNumber": 4949,
    "___id": "T000002R001554",
    "___s": true
  },
  {
    "__docId__": 1555,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1477",
    "testId": 1477,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1477",
    "access": null,
    "description": "class method has correct Halstead bugs",
    "lineNumber": 4954,
    "___id": "T000002R001555",
    "___s": true
  },
  {
    "__docId__": 1556,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1478",
    "testId": 1478,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1478",
    "access": null,
    "description": "class method has correct Halstead time",
    "lineNumber": 4959,
    "___id": "T000002R001556",
    "___s": true
  },
  {
    "__docId__": 1557,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1479",
    "testId": 1479,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1479",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 4964,
    "___id": "T000002R001557",
    "___s": true
  },
  {
    "__docId__": 1558,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1480",
    "testId": 1480,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1480",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 4969,
    "___id": "T000002R001558",
    "___s": true
  },
  {
    "__docId__": 1559,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1481",
    "testId": 1481,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1481",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 4974,
    "___id": "T000002R001559",
    "___s": true
  },
  {
    "__docId__": 1560,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1482",
    "testId": 1482,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1482",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 4979,
    "___id": "T000002R001560",
    "___s": true
  },
  {
    "__docId__": 1561,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1483",
    "testId": 1483,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1483",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 4984,
    "___id": "T000002R001561",
    "___s": true
  },
  {
    "__docId__": 1562,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1484",
    "testId": 1484,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1484",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 4989,
    "___id": "T000002R001562",
    "___s": true
  },
  {
    "__docId__": 1563,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1485",
    "testId": 1485,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1485",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 4994,
    "___id": "T000002R001563",
    "___s": true
  },
  {
    "__docId__": 1564,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1486",
    "testId": 1486,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1486",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 4999,
    "___id": "T000002R001564",
    "___s": true
  },
  {
    "__docId__": 1565,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1487",
    "testId": 1487,
    "memberof": "src/moduleES6.js~suite569.suite1011.suite1462",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1011.suite1462.test1487",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5004,
    "___id": "T000002R001565",
    "___s": true
  },
  {
    "__docId__": 1566,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1488",
    "testId": 1488,
    "memberof": "src/moduleES6.js~suite569",
    "testDepth": 1,
    "longname": "src/moduleES6.js~suite569.suite1488",
    "access": null,
    "description": "Modules",
    "lineNumber": 5011,
    "___id": "T000002R001566",
    "___s": true
  },
  {
    "__docId__": 1567,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1489",
    "testId": 1489,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489",
    "access": null,
    "description": "export all from import:",
    "lineNumber": 5013,
    "___id": "T000002R001567",
    "___s": true
  },
  {
    "__docId__": 1568,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1490",
    "testId": 1490,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1490",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5027,
    "___id": "T000002R001568",
    "___s": true
  },
  {
    "__docId__": 1569,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1491",
    "testId": 1491,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1491",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5032,
    "___id": "T000002R001569",
    "___s": true
  },
  {
    "__docId__": 1570,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1492",
    "testId": 1492,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1492",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5037,
    "___id": "T000002R001570",
    "___s": true
  },
  {
    "__docId__": 1571,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1493",
    "testId": 1493,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1493",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5042,
    "___id": "T000002R001571",
    "___s": true
  },
  {
    "__docId__": 1572,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1494",
    "testId": 1494,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1494",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5047,
    "___id": "T000002R001572",
    "___s": true
  },
  {
    "__docId__": 1573,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1495",
    "testId": 1495,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1495",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5052,
    "___id": "T000002R001573",
    "___s": true
  },
  {
    "__docId__": 1574,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1496",
    "testId": 1496,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1496",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5057,
    "___id": "T000002R001574",
    "___s": true
  },
  {
    "__docId__": 1575,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1497",
    "testId": 1497,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1497",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5062,
    "___id": "T000002R001575",
    "___s": true
  },
  {
    "__docId__": 1576,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1498",
    "testId": 1498,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1498",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5067,
    "___id": "T000002R001576",
    "___s": true
  },
  {
    "__docId__": 1577,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1499",
    "testId": 1499,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1499",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5072,
    "___id": "T000002R001577",
    "___s": true
  },
  {
    "__docId__": 1578,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1500",
    "testId": 1500,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1500",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5077,
    "___id": "T000002R001578",
    "___s": true
  },
  {
    "__docId__": 1579,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1501",
    "testId": 1501,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1489",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1489.test1501",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5082,
    "___id": "T000002R001579",
    "___s": true
  },
  {
    "__docId__": 1580,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1502",
    "testId": 1502,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502",
    "access": null,
    "description": "export default class declaration:",
    "lineNumber": 5088,
    "___id": "T000002R001580",
    "___s": true
  },
  {
    "__docId__": 1581,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1503",
    "testId": 1503,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1503",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5102,
    "___id": "T000002R001581",
    "___s": true
  },
  {
    "__docId__": 1582,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1504",
    "testId": 1504,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1504",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5107,
    "___id": "T000002R001582",
    "___s": true
  },
  {
    "__docId__": 1583,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1505",
    "testId": 1505,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1505",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5112,
    "___id": "T000002R001583",
    "___s": true
  },
  {
    "__docId__": 1584,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1506",
    "testId": 1506,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1506",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5117,
    "___id": "T000002R001584",
    "___s": true
  },
  {
    "__docId__": 1585,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1507",
    "testId": 1507,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1507",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5122,
    "___id": "T000002R001585",
    "___s": true
  },
  {
    "__docId__": 1586,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1508",
    "testId": 1508,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1508",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5127,
    "___id": "T000002R001586",
    "___s": true
  },
  {
    "__docId__": 1587,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1509",
    "testId": 1509,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1509",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5132,
    "___id": "T000002R001587",
    "___s": true
  },
  {
    "__docId__": 1588,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1510",
    "testId": 1510,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1510",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5137,
    "___id": "T000002R001588",
    "___s": true
  },
  {
    "__docId__": 1589,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1511",
    "testId": 1511,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1511",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5142,
    "___id": "T000002R001589",
    "___s": true
  },
  {
    "__docId__": 1590,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1512",
    "testId": 1512,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1512",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5147,
    "___id": "T000002R001590",
    "___s": true
  },
  {
    "__docId__": 1591,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1513",
    "testId": 1513,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1513",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5152,
    "___id": "T000002R001591",
    "___s": true
  },
  {
    "__docId__": 1592,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1514",
    "testId": 1514,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1502",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1502.test1514",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5157,
    "___id": "T000002R001592",
    "___s": true
  },
  {
    "__docId__": 1593,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1515",
    "testId": 1515,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515",
    "access": null,
    "description": "export default function declaration:",
    "lineNumber": 5163,
    "___id": "T000002R001593",
    "___s": true
  },
  {
    "__docId__": 1594,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1516",
    "testId": 1516,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1516",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5177,
    "___id": "T000002R001594",
    "___s": true
  },
  {
    "__docId__": 1595,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1517",
    "testId": 1517,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1517",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5182,
    "___id": "T000002R001595",
    "___s": true
  },
  {
    "__docId__": 1596,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1518",
    "testId": 1518,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1518",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5187,
    "___id": "T000002R001596",
    "___s": true
  },
  {
    "__docId__": 1597,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1519",
    "testId": 1519,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1519",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 5192,
    "___id": "T000002R001597",
    "___s": true
  },
  {
    "__docId__": 1598,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1520",
    "testId": 1520,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1520",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 5197,
    "___id": "T000002R001598",
    "___s": true
  },
  {
    "__docId__": 1599,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1521",
    "testId": 1521,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1521",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 5202,
    "___id": "T000002R001599",
    "___s": true
  },
  {
    "__docId__": 1600,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1522",
    "testId": 1522,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1522",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 5207,
    "___id": "T000002R001600",
    "___s": true
  },
  {
    "__docId__": 1601,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1523",
    "testId": 1523,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1523",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 5212,
    "___id": "T000002R001601",
    "___s": true
  },
  {
    "__docId__": 1602,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1524",
    "testId": 1524,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1524",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5217,
    "___id": "T000002R001602",
    "___s": true
  },
  {
    "__docId__": 1603,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1525",
    "testId": 1525,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1525",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5222,
    "___id": "T000002R001603",
    "___s": true
  },
  {
    "__docId__": 1604,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1526",
    "testId": 1526,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1526",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5227,
    "___id": "T000002R001604",
    "___s": true
  },
  {
    "__docId__": 1605,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1527",
    "testId": 1527,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1527",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5232,
    "___id": "T000002R001605",
    "___s": true
  },
  {
    "__docId__": 1606,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1528",
    "testId": 1528,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1528",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5237,
    "___id": "T000002R001606",
    "___s": true
  },
  {
    "__docId__": 1607,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1529",
    "testId": 1529,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1529",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5242,
    "___id": "T000002R001607",
    "___s": true
  },
  {
    "__docId__": 1608,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1530",
    "testId": 1530,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1530",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5247,
    "___id": "T000002R001608",
    "___s": true
  },
  {
    "__docId__": 1609,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1531",
    "testId": 1531,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1531",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 5252,
    "___id": "T000002R001609",
    "___s": true
  },
  {
    "__docId__": 1610,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1532",
    "testId": 1532,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1532",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 5257,
    "___id": "T000002R001610",
    "___s": true
  },
  {
    "__docId__": 1611,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1533",
    "testId": 1533,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1533",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 5262,
    "___id": "T000002R001611",
    "___s": true
  },
  {
    "__docId__": 1612,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1534",
    "testId": 1534,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1534",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 5267,
    "___id": "T000002R001612",
    "___s": true
  },
  {
    "__docId__": 1613,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1535",
    "testId": 1535,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1535",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 5272,
    "___id": "T000002R001613",
    "___s": true
  },
  {
    "__docId__": 1614,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1536",
    "testId": 1536,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1536",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 5277,
    "___id": "T000002R001614",
    "___s": true
  },
  {
    "__docId__": 1615,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1537",
    "testId": 1537,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1537",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 5282,
    "___id": "T000002R001615",
    "___s": true
  },
  {
    "__docId__": 1616,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1538",
    "testId": 1538,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1538",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5287,
    "___id": "T000002R001616",
    "___s": true
  },
  {
    "__docId__": 1617,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1539",
    "testId": 1539,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1515",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1515.test1539",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5292,
    "___id": "T000002R001617",
    "___s": true
  },
  {
    "__docId__": 1618,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1540",
    "testId": 1540,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540",
    "access": null,
    "description": "export named from import:",
    "lineNumber": 5298,
    "___id": "T000002R001618",
    "___s": true
  },
  {
    "__docId__": 1619,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1541",
    "testId": 1541,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1541",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5312,
    "___id": "T000002R001619",
    "___s": true
  },
  {
    "__docId__": 1620,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1542",
    "testId": 1542,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1542",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5317,
    "___id": "T000002R001620",
    "___s": true
  },
  {
    "__docId__": 1621,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1543",
    "testId": 1543,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1543",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5322,
    "___id": "T000002R001621",
    "___s": true
  },
  {
    "__docId__": 1622,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1544",
    "testId": 1544,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1544",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5327,
    "___id": "T000002R001622",
    "___s": true
  },
  {
    "__docId__": 1623,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1545",
    "testId": 1545,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1545",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5332,
    "___id": "T000002R001623",
    "___s": true
  },
  {
    "__docId__": 1624,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1546",
    "testId": 1546,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1546",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5337,
    "___id": "T000002R001624",
    "___s": true
  },
  {
    "__docId__": 1625,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1547",
    "testId": 1547,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1547",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5342,
    "___id": "T000002R001625",
    "___s": true
  },
  {
    "__docId__": 1626,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1548",
    "testId": 1548,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1548",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5347,
    "___id": "T000002R001626",
    "___s": true
  },
  {
    "__docId__": 1627,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1549",
    "testId": 1549,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1549",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5352,
    "___id": "T000002R001627",
    "___s": true
  },
  {
    "__docId__": 1628,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1550",
    "testId": 1550,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1550",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5357,
    "___id": "T000002R001628",
    "___s": true
  },
  {
    "__docId__": 1629,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1551",
    "testId": 1551,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1551",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5362,
    "___id": "T000002R001629",
    "___s": true
  },
  {
    "__docId__": 1630,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1552",
    "testId": 1552,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1540",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1540.test1552",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5367,
    "___id": "T000002R001630",
    "___s": true
  },
  {
    "__docId__": 1631,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1553",
    "testId": 1553,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553",
    "access": null,
    "description": "export named function declaration:",
    "lineNumber": 5373,
    "___id": "T000002R001631",
    "___s": true
  },
  {
    "__docId__": 1632,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1554",
    "testId": 1554,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1554",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5387,
    "___id": "T000002R001632",
    "___s": true
  },
  {
    "__docId__": 1633,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1555",
    "testId": 1555,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1555",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5392,
    "___id": "T000002R001633",
    "___s": true
  },
  {
    "__docId__": 1634,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1556",
    "testId": 1556,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1556",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5397,
    "___id": "T000002R001634",
    "___s": true
  },
  {
    "__docId__": 1635,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1557",
    "testId": 1557,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1557",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 5402,
    "___id": "T000002R001635",
    "___s": true
  },
  {
    "__docId__": 1636,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1558",
    "testId": 1558,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1558",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 5407,
    "___id": "T000002R001636",
    "___s": true
  },
  {
    "__docId__": 1637,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1559",
    "testId": 1559,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1559",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 5412,
    "___id": "T000002R001637",
    "___s": true
  },
  {
    "__docId__": 1638,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1560",
    "testId": 1560,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1560",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 5417,
    "___id": "T000002R001638",
    "___s": true
  },
  {
    "__docId__": 1639,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1561",
    "testId": 1561,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1561",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 5422,
    "___id": "T000002R001639",
    "___s": true
  },
  {
    "__docId__": 1640,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1562",
    "testId": 1562,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1562",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5427,
    "___id": "T000002R001640",
    "___s": true
  },
  {
    "__docId__": 1641,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1563",
    "testId": 1563,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1563",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5432,
    "___id": "T000002R001641",
    "___s": true
  },
  {
    "__docId__": 1642,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1564",
    "testId": 1564,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1564",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5437,
    "___id": "T000002R001642",
    "___s": true
  },
  {
    "__docId__": 1643,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1565",
    "testId": 1565,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1565",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5442,
    "___id": "T000002R001643",
    "___s": true
  },
  {
    "__docId__": 1644,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1566",
    "testId": 1566,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1566",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5447,
    "___id": "T000002R001644",
    "___s": true
  },
  {
    "__docId__": 1645,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1567",
    "testId": 1567,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1567",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5452,
    "___id": "T000002R001645",
    "___s": true
  },
  {
    "__docId__": 1646,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1568",
    "testId": 1568,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1568",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5457,
    "___id": "T000002R001646",
    "___s": true
  },
  {
    "__docId__": 1647,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1569",
    "testId": 1569,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1569",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 5462,
    "___id": "T000002R001647",
    "___s": true
  },
  {
    "__docId__": 1648,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1570",
    "testId": 1570,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1570",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 5467,
    "___id": "T000002R001648",
    "___s": true
  },
  {
    "__docId__": 1649,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1571",
    "testId": 1571,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1571",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 5472,
    "___id": "T000002R001649",
    "___s": true
  },
  {
    "__docId__": 1650,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1572",
    "testId": 1572,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1572",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 5477,
    "___id": "T000002R001650",
    "___s": true
  },
  {
    "__docId__": 1651,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1573",
    "testId": 1573,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1573",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 5482,
    "___id": "T000002R001651",
    "___s": true
  },
  {
    "__docId__": 1652,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1574",
    "testId": 1574,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1574",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 5487,
    "___id": "T000002R001652",
    "___s": true
  },
  {
    "__docId__": 1653,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1575",
    "testId": 1575,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1575",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 5492,
    "___id": "T000002R001653",
    "___s": true
  },
  {
    "__docId__": 1654,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1576",
    "testId": 1576,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1576",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5497,
    "___id": "T000002R001654",
    "___s": true
  },
  {
    "__docId__": 1655,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1577",
    "testId": 1577,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1553",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1553.test1577",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5502,
    "___id": "T000002R001655",
    "___s": true
  },
  {
    "__docId__": 1656,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1578",
    "testId": 1578,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578",
    "access": null,
    "description": "export default arrow function declaration:",
    "lineNumber": 5508,
    "___id": "T000002R001656",
    "___s": true
  },
  {
    "__docId__": 1657,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1579",
    "testId": 1579,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1579",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5522,
    "___id": "T000002R001657",
    "___s": true
  },
  {
    "__docId__": 1658,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1580",
    "testId": 1580,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1580",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5527,
    "___id": "T000002R001658",
    "___s": true
  },
  {
    "__docId__": 1659,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1581",
    "testId": 1581,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1581",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5532,
    "___id": "T000002R001659",
    "___s": true
  },
  {
    "__docId__": 1660,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1582",
    "testId": 1582,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1582",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 5537,
    "___id": "T000002R001660",
    "___s": true
  },
  {
    "__docId__": 1661,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1583",
    "testId": 1583,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1583",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 5542,
    "___id": "T000002R001661",
    "___s": true
  },
  {
    "__docId__": 1662,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1584",
    "testId": 1584,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1584",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 5547,
    "___id": "T000002R001662",
    "___s": true
  },
  {
    "__docId__": 1663,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1585",
    "testId": 1585,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1585",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 5552,
    "___id": "T000002R001663",
    "___s": true
  },
  {
    "__docId__": 1664,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1586",
    "testId": 1586,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1586",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 5557,
    "___id": "T000002R001664",
    "___s": true
  },
  {
    "__docId__": 1665,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1587",
    "testId": 1587,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1587",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5562,
    "___id": "T000002R001665",
    "___s": true
  },
  {
    "__docId__": 1666,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1588",
    "testId": 1588,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1588",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5567,
    "___id": "T000002R001666",
    "___s": true
  },
  {
    "__docId__": 1667,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1589",
    "testId": 1589,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1589",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5572,
    "___id": "T000002R001667",
    "___s": true
  },
  {
    "__docId__": 1668,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1590",
    "testId": 1590,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1590",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5577,
    "___id": "T000002R001668",
    "___s": true
  },
  {
    "__docId__": 1669,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1591",
    "testId": 1591,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1591",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5582,
    "___id": "T000002R001669",
    "___s": true
  },
  {
    "__docId__": 1670,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1592",
    "testId": 1592,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1592",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5587,
    "___id": "T000002R001670",
    "___s": true
  },
  {
    "__docId__": 1671,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1593",
    "testId": 1593,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1593",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5592,
    "___id": "T000002R001671",
    "___s": true
  },
  {
    "__docId__": 1672,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1594",
    "testId": 1594,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1594",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 5597,
    "___id": "T000002R001672",
    "___s": true
  },
  {
    "__docId__": 1673,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1595",
    "testId": 1595,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1595",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 5602,
    "___id": "T000002R001673",
    "___s": true
  },
  {
    "__docId__": 1674,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1596",
    "testId": 1596,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1596",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 5607,
    "___id": "T000002R001674",
    "___s": true
  },
  {
    "__docId__": 1675,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1597",
    "testId": 1597,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1597",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 5612,
    "___id": "T000002R001675",
    "___s": true
  },
  {
    "__docId__": 1676,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1598",
    "testId": 1598,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1598",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 5617,
    "___id": "T000002R001676",
    "___s": true
  },
  {
    "__docId__": 1677,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1599",
    "testId": 1599,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1599",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 5622,
    "___id": "T000002R001677",
    "___s": true
  },
  {
    "__docId__": 1678,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1600",
    "testId": 1600,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1600",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 5627,
    "___id": "T000002R001678",
    "___s": true
  },
  {
    "__docId__": 1679,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1601",
    "testId": 1601,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1601",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5632,
    "___id": "T000002R001679",
    "___s": true
  },
  {
    "__docId__": 1680,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1602",
    "testId": 1602,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1578",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1578.test1602",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5637,
    "___id": "T000002R001680",
    "___s": true
  },
  {
    "__docId__": 1681,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1603",
    "testId": 1603,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603",
    "access": null,
    "description": "export named arrow function declaration:",
    "lineNumber": 5643,
    "___id": "T000002R001681",
    "___s": true
  },
  {
    "__docId__": 1682,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1604",
    "testId": 1604,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1604",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5657,
    "___id": "T000002R001682",
    "___s": true
  },
  {
    "__docId__": 1683,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1605",
    "testId": 1605,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1605",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5662,
    "___id": "T000002R001683",
    "___s": true
  },
  {
    "__docId__": 1684,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1606",
    "testId": 1606,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1606",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5667,
    "___id": "T000002R001684",
    "___s": true
  },
  {
    "__docId__": 1685,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1607",
    "testId": 1607,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1607",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 5672,
    "___id": "T000002R001685",
    "___s": true
  },
  {
    "__docId__": 1686,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1608",
    "testId": 1608,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1608",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 5677,
    "___id": "T000002R001686",
    "___s": true
  },
  {
    "__docId__": 1687,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1609",
    "testId": 1609,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1609",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 5682,
    "___id": "T000002R001687",
    "___s": true
  },
  {
    "__docId__": 1688,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1610",
    "testId": 1610,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1610",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 5687,
    "___id": "T000002R001688",
    "___s": true
  },
  {
    "__docId__": 1689,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1611",
    "testId": 1611,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1611",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 5692,
    "___id": "T000002R001689",
    "___s": true
  },
  {
    "__docId__": 1690,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1612",
    "testId": 1612,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1612",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5697,
    "___id": "T000002R001690",
    "___s": true
  },
  {
    "__docId__": 1691,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1613",
    "testId": 1613,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1613",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5702,
    "___id": "T000002R001691",
    "___s": true
  },
  {
    "__docId__": 1692,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1614",
    "testId": 1614,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1614",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5707,
    "___id": "T000002R001692",
    "___s": true
  },
  {
    "__docId__": 1693,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1615",
    "testId": 1615,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1615",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5712,
    "___id": "T000002R001693",
    "___s": true
  },
  {
    "__docId__": 1694,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1616",
    "testId": 1616,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1616",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5717,
    "___id": "T000002R001694",
    "___s": true
  },
  {
    "__docId__": 1695,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1617",
    "testId": 1617,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1617",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5722,
    "___id": "T000002R001695",
    "___s": true
  },
  {
    "__docId__": 1696,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1618",
    "testId": 1618,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1618",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5727,
    "___id": "T000002R001696",
    "___s": true
  },
  {
    "__docId__": 1697,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1619",
    "testId": 1619,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1619",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 5732,
    "___id": "T000002R001697",
    "___s": true
  },
  {
    "__docId__": 1698,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1620",
    "testId": 1620,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1620",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 5737,
    "___id": "T000002R001698",
    "___s": true
  },
  {
    "__docId__": 1699,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1621",
    "testId": 1621,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1621",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 5742,
    "___id": "T000002R001699",
    "___s": true
  },
  {
    "__docId__": 1700,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1622",
    "testId": 1622,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1622",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 5747,
    "___id": "T000002R001700",
    "___s": true
  },
  {
    "__docId__": 1701,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1623",
    "testId": 1623,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1623",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 5752,
    "___id": "T000002R001701",
    "___s": true
  },
  {
    "__docId__": 1702,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1624",
    "testId": 1624,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1624",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 5757,
    "___id": "T000002R001702",
    "___s": true
  },
  {
    "__docId__": 1703,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1625",
    "testId": 1625,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1625",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 5762,
    "___id": "T000002R001703",
    "___s": true
  },
  {
    "__docId__": 1704,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1626",
    "testId": 1626,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1626",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5767,
    "___id": "T000002R001704",
    "___s": true
  },
  {
    "__docId__": 1705,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1627",
    "testId": 1627,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1603",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1603.test1627",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5772,
    "___id": "T000002R001705",
    "___s": true
  },
  {
    "__docId__": 1706,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1628",
    "testId": 1628,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628",
    "access": null,
    "description": "export named arrow function declaration (aliased):",
    "lineNumber": 5778,
    "___id": "T000002R001706",
    "___s": true
  },
  {
    "__docId__": 1707,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1629",
    "testId": 1629,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1629",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5792,
    "___id": "T000002R001707",
    "___s": true
  },
  {
    "__docId__": 1708,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1630",
    "testId": 1630,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1630",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5797,
    "___id": "T000002R001708",
    "___s": true
  },
  {
    "__docId__": 1709,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1631",
    "testId": 1631,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1631",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5802,
    "___id": "T000002R001709",
    "___s": true
  },
  {
    "__docId__": 1710,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1632",
    "testId": 1632,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1632",
    "access": null,
    "description": "method has correct name",
    "lineNumber": 5807,
    "___id": "T000002R001710",
    "___s": true
  },
  {
    "__docId__": 1711,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1633",
    "testId": 1633,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1633",
    "access": null,
    "description": "method has correct physical lines of code",
    "lineNumber": 5812,
    "___id": "T000002R001711",
    "___s": true
  },
  {
    "__docId__": 1712,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1634",
    "testId": 1634,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1634",
    "access": null,
    "description": "method has correct logical lines of code",
    "lineNumber": 5817,
    "___id": "T000002R001712",
    "___s": true
  },
  {
    "__docId__": 1713,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1635",
    "testId": 1635,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1635",
    "access": null,
    "description": "method has correct cyclomatic complexity",
    "lineNumber": 5822,
    "___id": "T000002R001713",
    "___s": true
  },
  {
    "__docId__": 1714,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1636",
    "testId": 1636,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1636",
    "access": null,
    "description": "method has correct parameter count",
    "lineNumber": 5827,
    "___id": "T000002R001714",
    "___s": true
  },
  {
    "__docId__": 1715,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1637",
    "testId": 1637,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1637",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5832,
    "___id": "T000002R001715",
    "___s": true
  },
  {
    "__docId__": 1716,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1638",
    "testId": 1638,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1638",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5837,
    "___id": "T000002R001716",
    "___s": true
  },
  {
    "__docId__": 1717,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1639",
    "testId": 1639,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1639",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5842,
    "___id": "T000002R001717",
    "___s": true
  },
  {
    "__docId__": 1718,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1640",
    "testId": 1640,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1640",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5847,
    "___id": "T000002R001718",
    "___s": true
  },
  {
    "__docId__": 1719,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1641",
    "testId": 1641,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1641",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5852,
    "___id": "T000002R001719",
    "___s": true
  },
  {
    "__docId__": 1720,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1642",
    "testId": 1642,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1642",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5857,
    "___id": "T000002R001720",
    "___s": true
  },
  {
    "__docId__": 1721,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1643",
    "testId": 1643,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1643",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5862,
    "___id": "T000002R001721",
    "___s": true
  },
  {
    "__docId__": 1722,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1644",
    "testId": 1644,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1644",
    "access": null,
    "description": "method has correct Halstead length",
    "lineNumber": 5867,
    "___id": "T000002R001722",
    "___s": true
  },
  {
    "__docId__": 1723,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1645",
    "testId": 1645,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1645",
    "access": null,
    "description": "method has correct Halstead vocabulary",
    "lineNumber": 5872,
    "___id": "T000002R001723",
    "___s": true
  },
  {
    "__docId__": 1724,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1646",
    "testId": 1646,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1646",
    "access": null,
    "description": "method has correct Halstead difficulty",
    "lineNumber": 5877,
    "___id": "T000002R001724",
    "___s": true
  },
  {
    "__docId__": 1725,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1647",
    "testId": 1647,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1647",
    "access": null,
    "description": "method has correct Halstead volume",
    "lineNumber": 5882,
    "___id": "T000002R001725",
    "___s": true
  },
  {
    "__docId__": 1726,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1648",
    "testId": 1648,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1648",
    "access": null,
    "description": "method has correct Halstead effort",
    "lineNumber": 5887,
    "___id": "T000002R001726",
    "___s": true
  },
  {
    "__docId__": 1727,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1649",
    "testId": 1649,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1649",
    "access": null,
    "description": "method has correct Halstead bugs",
    "lineNumber": 5892,
    "___id": "T000002R001727",
    "___s": true
  },
  {
    "__docId__": 1728,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1650",
    "testId": 1650,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1650",
    "access": null,
    "description": "method has correct Halstead time",
    "lineNumber": 5897,
    "___id": "T000002R001728",
    "___s": true
  },
  {
    "__docId__": 1729,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1651",
    "testId": 1651,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1651",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5902,
    "___id": "T000002R001729",
    "___s": true
  },
  {
    "__docId__": 1730,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1652",
    "testId": 1652,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1628",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1628.test1652",
    "access": null,
    "description": "methodAggregate has correct parameter count",
    "lineNumber": 5907,
    "___id": "T000002R001730",
    "___s": true
  },
  {
    "__docId__": 1731,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1653",
    "testId": 1653,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653",
    "access": null,
    "description": "import default (1):",
    "lineNumber": 5913,
    "___id": "T000002R001731",
    "___s": true
  },
  {
    "__docId__": 1732,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1654",
    "testId": 1654,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1654",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 5927,
    "___id": "T000002R001732",
    "___s": true
  },
  {
    "__docId__": 1733,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1655",
    "testId": 1655,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1655",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 5932,
    "___id": "T000002R001733",
    "___s": true
  },
  {
    "__docId__": 1734,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1656",
    "testId": 1656,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1656",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 5937,
    "___id": "T000002R001734",
    "___s": true
  },
  {
    "__docId__": 1735,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1657",
    "testId": 1657,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1657",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 5942,
    "___id": "T000002R001735",
    "___s": true
  },
  {
    "__docId__": 1736,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1658",
    "testId": 1658,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1658",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 5947,
    "___id": "T000002R001736",
    "___s": true
  },
  {
    "__docId__": 1737,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1659",
    "testId": 1659,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1659",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 5952,
    "___id": "T000002R001737",
    "___s": true
  },
  {
    "__docId__": 1738,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1660",
    "testId": 1660,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1660",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 5957,
    "___id": "T000002R001738",
    "___s": true
  },
  {
    "__docId__": 1739,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1661",
    "testId": 1661,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1661",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 5962,
    "___id": "T000002R001739",
    "___s": true
  },
  {
    "__docId__": 1740,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1662",
    "testId": 1662,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1662",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 5967,
    "___id": "T000002R001740",
    "___s": true
  },
  {
    "__docId__": 1741,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1663",
    "testId": 1663,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1663",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 5972,
    "___id": "T000002R001741",
    "___s": true
  },
  {
    "__docId__": 1742,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1664",
    "testId": 1664,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1664",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 5977,
    "___id": "T000002R001742",
    "___s": true
  },
  {
    "__docId__": 1743,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1665",
    "testId": 1665,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1665",
    "access": null,
    "description": "methodAggregate has correct dependency length",
    "lineNumber": 5982,
    "___id": "T000002R001743",
    "___s": true
  },
  {
    "__docId__": 1744,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1666",
    "testId": 1666,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1666",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] line",
    "lineNumber": 5987,
    "___id": "T000002R001744",
    "___s": true
  },
  {
    "__docId__": 1745,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1667",
    "testId": 1667,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1667",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] path",
    "lineNumber": 5992,
    "___id": "T000002R001745",
    "___s": true
  },
  {
    "__docId__": 1746,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1668",
    "testId": 1668,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1653",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1653.test1668",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] type",
    "lineNumber": 5997,
    "___id": "T000002R001746",
    "___s": true
  },
  {
    "__docId__": 1747,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1669",
    "testId": 1669,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669",
    "access": null,
    "description": "import default (3):",
    "lineNumber": 6003,
    "___id": "T000002R001747",
    "___s": true
  },
  {
    "__docId__": 1748,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1670",
    "testId": 1670,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1670",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 6018,
    "___id": "T000002R001748",
    "___s": true
  },
  {
    "__docId__": 1749,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1671",
    "testId": 1671,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1671",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 6023,
    "___id": "T000002R001749",
    "___s": true
  },
  {
    "__docId__": 1750,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1672",
    "testId": 1672,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1672",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 6028,
    "___id": "T000002R001750",
    "___s": true
  },
  {
    "__docId__": 1751,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1673",
    "testId": 1673,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1673",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 6033,
    "___id": "T000002R001751",
    "___s": true
  },
  {
    "__docId__": 1752,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1674",
    "testId": 1674,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1674",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 6038,
    "___id": "T000002R001752",
    "___s": true
  },
  {
    "__docId__": 1753,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1675",
    "testId": 1675,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1675",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 6043,
    "___id": "T000002R001753",
    "___s": true
  },
  {
    "__docId__": 1754,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1676",
    "testId": 1676,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1676",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 6048,
    "___id": "T000002R001754",
    "___s": true
  },
  {
    "__docId__": 1755,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1677",
    "testId": 1677,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1677",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 6053,
    "___id": "T000002R001755",
    "___s": true
  },
  {
    "__docId__": 1756,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1678",
    "testId": 1678,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1678",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 6058,
    "___id": "T000002R001756",
    "___s": true
  },
  {
    "__docId__": 1757,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1679",
    "testId": 1679,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1679",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 6063,
    "___id": "T000002R001757",
    "___s": true
  },
  {
    "__docId__": 1758,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1680",
    "testId": 1680,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1680",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 6068,
    "___id": "T000002R001758",
    "___s": true
  },
  {
    "__docId__": 1759,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1681",
    "testId": 1681,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1681",
    "access": null,
    "description": "methodAggregate has correct dependency length",
    "lineNumber": 6073,
    "___id": "T000002R001759",
    "___s": true
  },
  {
    "__docId__": 1760,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1682",
    "testId": 1682,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1682",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] line",
    "lineNumber": 6078,
    "___id": "T000002R001760",
    "___s": true
  },
  {
    "__docId__": 1761,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1683",
    "testId": 1683,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1683",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] path",
    "lineNumber": 6083,
    "___id": "T000002R001761",
    "___s": true
  },
  {
    "__docId__": 1762,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1684",
    "testId": 1684,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1684",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] type",
    "lineNumber": 6088,
    "___id": "T000002R001762",
    "___s": true
  },
  {
    "__docId__": 1763,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1685",
    "testId": 1685,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1685",
    "access": null,
    "description": "methodAggregate has correct dependency entry[1] line",
    "lineNumber": 6093,
    "___id": "T000002R001763",
    "___s": true
  },
  {
    "__docId__": 1764,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1686",
    "testId": 1686,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1686",
    "access": null,
    "description": "methodAggregate has correct dependency entry[1] path",
    "lineNumber": 6098,
    "___id": "T000002R001764",
    "___s": true
  },
  {
    "__docId__": 1765,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1687",
    "testId": 1687,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1687",
    "access": null,
    "description": "methodAggregate has correct dependency entry[1] type",
    "lineNumber": 6103,
    "___id": "T000002R001765",
    "___s": true
  },
  {
    "__docId__": 1766,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1688",
    "testId": 1688,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1688",
    "access": null,
    "description": "methodAggregate has correct dependency entry[2] line",
    "lineNumber": 6108,
    "___id": "T000002R001766",
    "___s": true
  },
  {
    "__docId__": 1767,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1689",
    "testId": 1689,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1689",
    "access": null,
    "description": "methodAggregate has correct dependency entry[2] path",
    "lineNumber": 6113,
    "___id": "T000002R001767",
    "___s": true
  },
  {
    "__docId__": 1768,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1690",
    "testId": 1690,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1669",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1669.test1690",
    "access": null,
    "description": "methodAggregate has correct dependency entry[2] type",
    "lineNumber": 6118,
    "___id": "T000002R001768",
    "___s": true
  },
  {
    "__docId__": 1769,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1691",
    "testId": 1691,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691",
    "access": null,
    "description": "import named (1):",
    "lineNumber": 6124,
    "___id": "T000002R001769",
    "___s": true
  },
  {
    "__docId__": 1770,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1692",
    "testId": 1692,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1692",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 6138,
    "___id": "T000002R001770",
    "___s": true
  },
  {
    "__docId__": 1771,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1693",
    "testId": 1693,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1693",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 6143,
    "___id": "T000002R001771",
    "___s": true
  },
  {
    "__docId__": 1772,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1694",
    "testId": 1694,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1694",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 6148,
    "___id": "T000002R001772",
    "___s": true
  },
  {
    "__docId__": 1773,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1695",
    "testId": 1695,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1695",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 6153,
    "___id": "T000002R001773",
    "___s": true
  },
  {
    "__docId__": 1774,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1696",
    "testId": 1696,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1696",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 6158,
    "___id": "T000002R001774",
    "___s": true
  },
  {
    "__docId__": 1775,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1697",
    "testId": 1697,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1697",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 6163,
    "___id": "T000002R001775",
    "___s": true
  },
  {
    "__docId__": 1776,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1698",
    "testId": 1698,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1698",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 6168,
    "___id": "T000002R001776",
    "___s": true
  },
  {
    "__docId__": 1777,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1699",
    "testId": 1699,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1699",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 6173,
    "___id": "T000002R001777",
    "___s": true
  },
  {
    "__docId__": 1778,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1700",
    "testId": 1700,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1700",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 6178,
    "___id": "T000002R001778",
    "___s": true
  },
  {
    "__docId__": 1779,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1701",
    "testId": 1701,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1701",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 6183,
    "___id": "T000002R001779",
    "___s": true
  },
  {
    "__docId__": 1780,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1702",
    "testId": 1702,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1702",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 6188,
    "___id": "T000002R001780",
    "___s": true
  },
  {
    "__docId__": 1781,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1703",
    "testId": 1703,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1703",
    "access": null,
    "description": "methodAggregate has correct dependency length",
    "lineNumber": 6193,
    "___id": "T000002R001781",
    "___s": true
  },
  {
    "__docId__": 1782,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1704",
    "testId": 1704,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1704",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] line",
    "lineNumber": 6198,
    "___id": "T000002R001782",
    "___s": true
  },
  {
    "__docId__": 1783,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1705",
    "testId": 1705,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1705",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] path",
    "lineNumber": 6203,
    "___id": "T000002R001783",
    "___s": true
  },
  {
    "__docId__": 1784,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1706",
    "testId": 1706,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1691",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1691.test1706",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] type",
    "lineNumber": 6208,
    "___id": "T000002R001784",
    "___s": true
  },
  {
    "__docId__": 1785,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1707",
    "testId": 1707,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707",
    "access": null,
    "description": "import named as (1):",
    "lineNumber": 6214,
    "___id": "T000002R001785",
    "___s": true
  },
  {
    "__docId__": 1786,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1708",
    "testId": 1708,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1708",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 6228,
    "___id": "T000002R001786",
    "___s": true
  },
  {
    "__docId__": 1787,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1709",
    "testId": 1709,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1709",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 6233,
    "___id": "T000002R001787",
    "___s": true
  },
  {
    "__docId__": 1788,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1710",
    "testId": 1710,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1710",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 6238,
    "___id": "T000002R001788",
    "___s": true
  },
  {
    "__docId__": 1789,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1711",
    "testId": 1711,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1711",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 6243,
    "___id": "T000002R001789",
    "___s": true
  },
  {
    "__docId__": 1790,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1712",
    "testId": 1712,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1712",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 6248,
    "___id": "T000002R001790",
    "___s": true
  },
  {
    "__docId__": 1791,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1713",
    "testId": 1713,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1713",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 6253,
    "___id": "T000002R001791",
    "___s": true
  },
  {
    "__docId__": 1792,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1714",
    "testId": 1714,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1714",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 6258,
    "___id": "T000002R001792",
    "___s": true
  },
  {
    "__docId__": 1793,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1715",
    "testId": 1715,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1715",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 6263,
    "___id": "T000002R001793",
    "___s": true
  },
  {
    "__docId__": 1794,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1716",
    "testId": 1716,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1716",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 6268,
    "___id": "T000002R001794",
    "___s": true
  },
  {
    "__docId__": 1795,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1717",
    "testId": 1717,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1717",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 6273,
    "___id": "T000002R001795",
    "___s": true
  },
  {
    "__docId__": 1796,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1718",
    "testId": 1718,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1718",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 6278,
    "___id": "T000002R001796",
    "___s": true
  },
  {
    "__docId__": 1797,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1719",
    "testId": 1719,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1719",
    "access": null,
    "description": "methodAggregate has correct dependency length",
    "lineNumber": 6283,
    "___id": "T000002R001797",
    "___s": true
  },
  {
    "__docId__": 1798,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1720",
    "testId": 1720,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1720",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] line",
    "lineNumber": 6288,
    "___id": "T000002R001798",
    "___s": true
  },
  {
    "__docId__": 1799,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1721",
    "testId": 1721,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1721",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] path",
    "lineNumber": 6293,
    "___id": "T000002R001799",
    "___s": true
  },
  {
    "__docId__": 1800,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1722",
    "testId": 1722,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1707",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1707.test1722",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] type",
    "lineNumber": 6298,
    "___id": "T000002R001800",
    "___s": true
  },
  {
    "__docId__": 1801,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1723",
    "testId": 1723,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723",
    "access": null,
    "description": "import namespace (1):",
    "lineNumber": 6304,
    "___id": "T000002R001801",
    "___s": true
  },
  {
    "__docId__": 1802,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1724",
    "testId": 1724,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1724",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 6318,
    "___id": "T000002R001802",
    "___s": true
  },
  {
    "__docId__": 1803,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1725",
    "testId": 1725,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1725",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 6323,
    "___id": "T000002R001803",
    "___s": true
  },
  {
    "__docId__": 1804,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1726",
    "testId": 1726,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1726",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 6328,
    "___id": "T000002R001804",
    "___s": true
  },
  {
    "__docId__": 1805,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1727",
    "testId": 1727,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1727",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 6333,
    "___id": "T000002R001805",
    "___s": true
  },
  {
    "__docId__": 1806,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1728",
    "testId": 1728,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1728",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 6338,
    "___id": "T000002R001806",
    "___s": true
  },
  {
    "__docId__": 1807,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1729",
    "testId": 1729,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1729",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 6343,
    "___id": "T000002R001807",
    "___s": true
  },
  {
    "__docId__": 1808,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1730",
    "testId": 1730,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1730",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 6348,
    "___id": "T000002R001808",
    "___s": true
  },
  {
    "__docId__": 1809,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1731",
    "testId": 1731,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1731",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 6353,
    "___id": "T000002R001809",
    "___s": true
  },
  {
    "__docId__": 1810,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1732",
    "testId": 1732,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1732",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 6358,
    "___id": "T000002R001810",
    "___s": true
  },
  {
    "__docId__": 1811,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1733",
    "testId": 1733,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1733",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 6363,
    "___id": "T000002R001811",
    "___s": true
  },
  {
    "__docId__": 1812,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1734",
    "testId": 1734,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1734",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 6368,
    "___id": "T000002R001812",
    "___s": true
  },
  {
    "__docId__": 1813,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1735",
    "testId": 1735,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1735",
    "access": null,
    "description": "methodAggregate has correct dependency length",
    "lineNumber": 6373,
    "___id": "T000002R001813",
    "___s": true
  },
  {
    "__docId__": 1814,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1736",
    "testId": 1736,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1736",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] line",
    "lineNumber": 6378,
    "___id": "T000002R001814",
    "___s": true
  },
  {
    "__docId__": 1815,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1737",
    "testId": 1737,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1737",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] path",
    "lineNumber": 6383,
    "___id": "T000002R001815",
    "___s": true
  },
  {
    "__docId__": 1816,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1738",
    "testId": 1738,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1723",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1723.test1738",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] type",
    "lineNumber": 6388,
    "___id": "T000002R001816",
    "___s": true
  },
  {
    "__docId__": 1817,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1739",
    "testId": 1739,
    "memberof": "src/moduleES6.js~suite569.suite1488",
    "testDepth": 2,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739",
    "access": null,
    "description": "import mixed (4):",
    "lineNumber": 6394,
    "___id": "T000002R001817",
    "___s": true
  },
  {
    "__docId__": 1818,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1740",
    "testId": 1740,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1740",
    "access": null,
    "description": "methodAggregate has correct logical lines of code",
    "lineNumber": 6410,
    "___id": "T000002R001818",
    "___s": true
  },
  {
    "__docId__": 1819,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1741",
    "testId": 1741,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1741",
    "access": null,
    "description": "methodAggregate has correct cyclomatic complexity",
    "lineNumber": 6415,
    "___id": "T000002R001819",
    "___s": true
  },
  {
    "__docId__": 1820,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1742",
    "testId": 1742,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1742",
    "access": null,
    "description": "functions has correct length",
    "lineNumber": 6420,
    "___id": "T000002R001820",
    "___s": true
  },
  {
    "__docId__": 1821,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1743",
    "testId": 1743,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1743",
    "access": null,
    "description": "methodAggregate has correct Halstead total operators",
    "lineNumber": 6425,
    "___id": "T000002R001821",
    "___s": true
  },
  {
    "__docId__": 1822,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1744",
    "testId": 1744,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1744",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operators",
    "lineNumber": 6430,
    "___id": "T000002R001822",
    "___s": true
  },
  {
    "__docId__": 1823,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1745",
    "testId": 1745,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1745",
    "access": null,
    "description": "methodAggregate has correct Halstead total operands",
    "lineNumber": 6435,
    "___id": "T000002R001823",
    "___s": true
  },
  {
    "__docId__": 1824,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1746",
    "testId": 1746,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1746",
    "access": null,
    "description": "methodAggregate has correct Halstead distinct operands",
    "lineNumber": 6440,
    "___id": "T000002R001824",
    "___s": true
  },
  {
    "__docId__": 1825,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1747",
    "testId": 1747,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1747",
    "access": null,
    "description": "methodAggregate has correct Halstead length",
    "lineNumber": 6445,
    "___id": "T000002R001825",
    "___s": true
  },
  {
    "__docId__": 1826,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1748",
    "testId": 1748,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1748",
    "access": null,
    "description": "methodAggregate has correct Halstead vocabulary",
    "lineNumber": 6450,
    "___id": "T000002R001826",
    "___s": true
  },
  {
    "__docId__": 1827,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1749",
    "testId": 1749,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1749",
    "access": null,
    "description": "methodAggregate has correct Halstead difficulty",
    "lineNumber": 6455,
    "___id": "T000002R001827",
    "___s": true
  },
  {
    "__docId__": 1828,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1750",
    "testId": 1750,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1750",
    "access": null,
    "description": "maintainability index is correct",
    "lineNumber": 6460,
    "___id": "T000002R001828",
    "___s": true
  },
  {
    "__docId__": 1829,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1751",
    "testId": 1751,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1751",
    "access": null,
    "description": "methodAggregate has correct dependency length",
    "lineNumber": 6465,
    "___id": "T000002R001829",
    "___s": true
  },
  {
    "__docId__": 1830,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1752",
    "testId": 1752,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1752",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] line",
    "lineNumber": 6470,
    "___id": "T000002R001830",
    "___s": true
  },
  {
    "__docId__": 1831,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1753",
    "testId": 1753,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1753",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] path",
    "lineNumber": 6475,
    "___id": "T000002R001831",
    "___s": true
  },
  {
    "__docId__": 1832,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1754",
    "testId": 1754,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1754",
    "access": null,
    "description": "methodAggregate has correct dependency entry[0] type",
    "lineNumber": 6480,
    "___id": "T000002R001832",
    "___s": true
  },
  {
    "__docId__": 1833,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1755",
    "testId": 1755,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1755",
    "access": null,
    "description": "methodAggregate has correct dependency entry[1] line",
    "lineNumber": 6485,
    "___id": "T000002R001833",
    "___s": true
  },
  {
    "__docId__": 1834,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1756",
    "testId": 1756,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1756",
    "access": null,
    "description": "methodAggregate has correct dependency entry[1] path",
    "lineNumber": 6490,
    "___id": "T000002R001834",
    "___s": true
  },
  {
    "__docId__": 1835,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1757",
    "testId": 1757,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1757",
    "access": null,
    "description": "methodAggregate has correct dependency entry[1] type",
    "lineNumber": 6495,
    "___id": "T000002R001835",
    "___s": true
  },
  {
    "__docId__": 1836,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1758",
    "testId": 1758,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1758",
    "access": null,
    "description": "methodAggregate has correct dependency entry[2] line",
    "lineNumber": 6500,
    "___id": "T000002R001836",
    "___s": true
  },
  {
    "__docId__": 1837,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1759",
    "testId": 1759,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1759",
    "access": null,
    "description": "methodAggregate has correct dependency entry[2] path",
    "lineNumber": 6505,
    "___id": "T000002R001837",
    "___s": true
  },
  {
    "__docId__": 1838,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1760",
    "testId": 1760,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1760",
    "access": null,
    "description": "methodAggregate has correct dependency entry[2] type",
    "lineNumber": 6510,
    "___id": "T000002R001838",
    "___s": true
  },
  {
    "__docId__": 1839,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1761",
    "testId": 1761,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1761",
    "access": null,
    "description": "methodAggregate has correct dependency entry[3] line",
    "lineNumber": 6515,
    "___id": "T000002R001839",
    "___s": true
  },
  {
    "__docId__": 1840,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1762",
    "testId": 1762,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1762",
    "access": null,
    "description": "methodAggregate has correct dependency entry[3] path",
    "lineNumber": 6520,
    "___id": "T000002R001840",
    "___s": true
  },
  {
    "__docId__": 1841,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test1763",
    "testId": 1763,
    "memberof": "src/moduleES6.js~suite569.suite1488.suite1739",
    "testDepth": 3,
    "longname": "src/moduleES6.js~suite569.suite1488.suite1739.test1763",
    "access": null,
    "description": "methodAggregate has correct dependency entry[3] type",
    "lineNumber": 6525,
    "___id": "T000002R001841",
    "___s": true
  },
  {
    "__docId__": 1842,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/parsers.js",
    "memberof": null,
    "longname": "src/parsers.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport * as acorn       from 'acorn';\nimport * as babylon     from 'babylon';\nimport * as espree      from 'espree';\nimport * as esprima     from 'esprima';\n\nimport * as testconfig  from './testconfig';\n\nimport escomplex        from '../../src';\n\nconst esmRegex = /(^\\s*|[}\\);\\n]\\s*)(import\\s*(['\"]|(\\*\\s+as\\s+)?[^\"'\\(\\)\\n;]+\\s*from\\s*['\"]|\\{)|export\\s+\\*\\s+from\\s+[\"']|export\\s* (\\{|default|function|class|var|const|let|async\\s+function))/;\n\nconst acornOptions = { locations: true };\n\nconst babylonOptions =\n{\n   plugins: ['asyncFunctions', 'asyncGenerators', 'classConstructorCall', 'classProperties', 'decorators',\n    'doExpressions', 'exportExtensions', 'exponentiationOperator', 'flow', 'functionBind', 'functionSent',\n     'jsx', 'objectRestSpread', 'trailingFunctionCommas']\n};\n\nconst esprimaOptions = { loc: true };\n\nconst espreeOptions = { loc: true, ecmaVersion: 6, ecmaFeatures: { jsx: true } };\n\n/**\n * Provides a debug logger.\n * @param {string}   message - log message\n */\nfunction log(message)\n{\n   if (testconfig.parserDebug) { console.log(message); }\n}\n\nconst parsers = [];\n\nif (testconfig.parsers.acorn)\n{\n   parsers.push(\n   {\n      analyze: function(code, options, parserOptions)\n      {\n         const report = escomplex.analyze(this.parse(code, parserOptions), options);\n         log(`!! (acorn): analyze - report: ${JSON.stringify(report)}`);\n         return report;\n      },\n      name: 'acorn',\n      parse: function(code, options)\n      {\n         options = typeof options === 'object' ? options : acornOptions;\n         options.sourceType = esmRegex.test(code) ? 'module' : 'script';\n         const ast = acorn.parse(code, options);\n         log(`!! (acorn): parse - ast: ${JSON.stringify(ast)}`);\n         return ast;\n      }\n   });\n}\n\nif (testconfig.parsers.babylon)\n{\n   parsers.push(\n   {\n      analyze: function(code, options, parserOptions)\n      {\n         const report = escomplex.analyze(this.parse(code, parserOptions), options);\n         log(`!! (babylon): analyze - report: ${JSON.stringify(report)}`);\n         return report;\n      },\n      name: 'babylon',\n      parse: function(code, options)\n      {\n         options = typeof options === 'object' ? options : babylonOptions;\n         options.sourceType = esmRegex.test(code) ? 'module' : 'script';\n         const ast = babylon.parse(code, options);\n         log(`!! (babylon): parse - ast: ${JSON.stringify(ast)}`);\n         return ast;\n      }\n   });\n}\n\nif (testconfig.parsers.espree)\n{\n   parsers.push(\n   {\n      analyze: function(code, options, parserOptions)\n      {\n         const report = escomplex.analyze(this.parse(code, parserOptions), options);\n         log(`!! (espree): analyze - report: ${JSON.stringify(report)}`);\n         return report;\n      },\n      name: 'espree',\n      parse: function(code, options)\n      {\n         options = typeof options === 'object' ? options : espreeOptions;\n         options.sourceType = esmRegex.test(code) ? 'module' : 'script';\n         const ast = espree.parse(code, options);\n         log(`!! (espree): parse - ast: ${JSON.stringify(ast)}`);\n         return ast;\n      }\n   });\n}\n\nif (testconfig.parsers.esprima)\n{\n   parsers.push(\n   {\n      analyze: function(code, options, parserOptions)\n      {\n         const report = escomplex.analyze(this.parse(code, parserOptions), options);\n         log(`!! (esprima): analyze - report: ${JSON.stringify(report)}`);\n         return report;\n      },\n      name: 'esprima',\n      parse: function(code, options)\n      {\n         options = typeof options === 'object' ? options : esprimaOptions;\n         options.sourceType = esmRegex.test(code) ? 'module' : 'script';\n         const ast = esprima.parse(code, esprimaOptions);\n         log(`!! (esprima): parse - ast: ${JSON.stringify(ast)}`);\n         return ast;\n      }\n   });\n}\n\n\nexport default parsers;\n",
    "___id": "T000002R001842",
    "___s": true
  },
  {
    "__docId__": 1843,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/testconfig.js",
    "memberof": null,
    "longname": "src/testconfig.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Defines which modules to run tests.\n *\n * @type {{}}\n */\nexport const modules =\n{\n   moduleAPI: true,\n   moduleBabylon: true,\n   moduleCore: true,\n   moduleES6: true\n};\n\n/**\n * Defines which parsers to use in testing.\n *\n * @type {{}}\n */\nexport const parsers =\n{\n   acorn: true,\n   babylon: true,\n   espree: true,\n   esprima: true\n};\n\n/**\n * Potentially enables extra debug statements to output AST and report JSON in `./parsers.js`\n *\n * @type {boolean}\n */\nexport const parserDebug = false;\n",
    "___id": "T000002R001843",
    "___s": true
  }
]