[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/plugin/syntax/AbstractSyntaxLoader.js",
    "memberof": null,
    "longname": "src/module/plugin/syntax/AbstractSyntaxLoader.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides the base implementation for all syntax loader plugins which automatically associates member methods\n * to syntax definitions invoking the method with escomplex settings and assigning the result to the same name as\n * the method.\n */\nexport default class AbstractSyntaxLoader\n{\n   /**\n    * Loads all member methods including from child classes that are not `constructor` or `onConfigure`.\n    *\n    * @param {object}   ev - escomplex plugin event data.\n    */\n   onLoadSyntax(ev)\n   {\n      for (const name of s_GET_ALL_PROPERTY_NAMES(Object.getPrototypeOf(this)))\n      {\n         // Skip constructor and onConfigure method.\n         if (!(this[name] instanceof Function) || name === 'constructor' || name === 'onConfigure') { continue; }\n\n         ev.data.syntaxes[name] = this[name](ev.data.settings);\n      }\n   }\n}\n\n/**\n * Walks an objects inheritance tree collecting property names stopping before `AbstractSyntaxLoader` is reached.\n *\n * @param {object}   obj - object to walks.\n *\n * @returns {Array}\n * @ignore\n */\nconst s_GET_ALL_PROPERTY_NAMES = (obj) =>\n{\n   const props = [];\n\n   do\n   {\n      Object.getOwnPropertyNames(obj).forEach((prop) => { if (props.indexOf(prop) === -1) { props.push(prop); } });\n      obj = Object.getPrototypeOf(obj);\n   } while (typeof obj !== 'undefined' && obj !== null && !(obj === AbstractSyntaxLoader.prototype));\n\n   return props;\n};\n",
    "___id": "T000002R000002",
    "___s": true
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AbstractSyntaxLoader",
    "memberof": "src/module/plugin/syntax/AbstractSyntaxLoader.js",
    "longname": "src/module/plugin/syntax/AbstractSyntaxLoader.js~AbstractSyntaxLoader",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/plugin/syntax/AbstractSyntaxLoader.js",
    "importStyle": "AbstractSyntaxLoader",
    "description": "Provides the base implementation for all syntax loader plugins which automatically associates member methods\nto syntax definitions invoking the method with escomplex settings and assigning the result to the same name as\nthe method.",
    "lineNumber": 6,
    "interface": false,
    "___id": "T000002R000003",
    "___s": true
  },
  {
    "__docId__": 2,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onLoadSyntax",
    "memberof": "src/module/plugin/syntax/AbstractSyntaxLoader.js~AbstractSyntaxLoader",
    "longname": "src/module/plugin/syntax/AbstractSyntaxLoader.js~AbstractSyntaxLoader#onLoadSyntax",
    "access": null,
    "description": "Loads all member methods including from child classes that are not `constructor` or `onConfigure`.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "<p>escomplex plugin event data.</p>\n",
        "descriptionRaw": "escomplex plugin event data."
      }
    ],
    "generator": false,
    "___id": "T000002R000004",
    "___s": true
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_GET_ALL_PROPERTY_NAMES",
    "memberof": "src/module/plugin/syntax/AbstractSyntaxLoader.js",
    "longname": "src/module/plugin/syntax/AbstractSyntaxLoader.js~s_GET_ALL_PROPERTY_NAMES",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/module/plugin/syntax/AbstractSyntaxLoader.js",
    "importStyle": null,
    "description": "Walks an objects inheritance tree collecting property names stopping before `AbstractSyntaxLoader` is reached.",
    "lineNumber": 33,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "object to walks."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000005",
    "___s": true
  },
  {
    "__docId__": 4,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/AbstractReport.js",
    "memberof": null,
    "longname": "src/module/report/AbstractReport.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides several helper methods to work with method oriented data stored as `this.aggregate` in `ClassReport` /\n * `ModuleReport` and directly in `MethodReport`.\n */\nexport default class AbstractReport\n{\n   /**\n    * If given assigns the method report to an internal variable. This is used by `ClassReport` and `ModuleReport`\n    * which stores a `MethodReport` respectively in `this.aggregate`.\n    *\n    * @param {MethodReport}   methodReport - A MethodReport to associate with this report.\n    */\n   constructor(methodReport)\n   {\n      /**\n       * Stores any associated `MethodReport`.\n       * @type {MethodReport}\n       * @private\n       */\n      this._methodReport = methodReport;\n   }\n\n   /**\n    * Cleans up any house keeping member variables.\n    *\n    * @returns {AbstractReport}\n    */\n   finalize()\n   {\n      delete this._methodReport;\n\n      return this;\n   }\n\n   /**\n    * Returns the associated `MethodReport` or `this`. Both ClassReport and ModuleReport have an `aggregate`\n    * MethodReport.\n    *\n    * @returns {MethodReport}\n    */\n   get methodReport() { return typeof this._methodReport !== 'undefined' ? this._methodReport : this; }\n\n   /**\n    * Increments the associated MethodReport HalsteadData for distinct identifiers.\n    *\n    * @param {string}   metric - A Halstead metric name.\n    * @param {string}   identifier - A Halstead identifier name.\n    */\n   incrementDistinctHalsteadItems(metric, identifier)\n   {\n      if (this.isHalsteadMetricDistinct(metric, identifier))\n      {\n         this.methodReport.halstead[metric].identifiers.push(identifier);\n\n         this.incrementHalsteadMetric(metric, 'distinct');\n      }\n   }\n\n   /**\n    * Increments the associated MethodReport Halstead items including distinct and total counts.\n    *\n    * @param {string}   metric - A Halstead metric name.\n    * @param {string}   identifier - A Halstead identifier name.\n    */\n   incrementHalsteadItems(metric, identifier)\n   {\n      this.incrementDistinctHalsteadItems(metric, identifier);\n\n      // Increment total halstead items\n      this.incrementHalsteadMetric(metric, 'total');\n   }\n\n   /**\n    * Increments the associated MethodReport Halstead metric type.\n    *\n    * @param {string}   metric - A Halstead metric name.\n    * @param {string}   type - A Halstead metric type.\n    */\n   incrementHalsteadMetric(metric, type)\n   {\n      this.methodReport.halstead[metric][type] += 1;\n   }\n\n   /**\n    * Increments the associated MethodReport parameter count.\n    *\n    * @param {number}   count - Value to increase params by.\n    */\n   incrementParams(count)\n   {\n      this.methodReport.params += count;\n   }\n\n   /**\n    * Returns true if a given HalsteadData metric / identifier is not found in the associated MethodReport.\n    *\n    * @param {string}   metric - A Halstead metric name.\n    * @param {string}   identifier - A Halstead identifier name.\n    *\n    * @returns {boolean}\n    */\n   isHalsteadMetricDistinct(metric, identifier)\n   {\n      return this.methodReport.halstead[metric].identifiers.indexOf(identifier) === -1;\n   }\n}\n",
    "___id": "T000002R000006",
    "___s": true
  },
  {
    "__docId__": 5,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AbstractReport",
    "memberof": "src/module/report/AbstractReport.js",
    "longname": "src/module/report/AbstractReport.js~AbstractReport",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/AbstractReport.js",
    "importStyle": "AbstractReport",
    "description": "Provides several helper methods to work with method oriented data stored as `this.aggregate` in `ClassReport` /\n`ModuleReport` and directly in `MethodReport`.",
    "lineNumber": 5,
    "interface": false,
    "___id": "T000002R000007",
    "___s": true,
    "_custom_direct_subclasses": [
      "src/module/report/ClassReport.js~ClassReport",
      "src/module/report/MethodReport.js~MethodReport",
      "src/module/report/ModuleReport.js~ModuleReport"
    ]
  },
  {
    "__docId__": 6,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#constructor",
    "access": null,
    "description": "If given assigns the method report to an internal variable. This is used by `ClassReport` and `ModuleReport`\nwhich stores a `MethodReport` respectively in `this.aggregate`.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "MethodReport"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>A MethodReport to associate with this report.</p>\n",
        "descriptionRaw": "A MethodReport to associate with this report."
      }
    ],
    "generator": false,
    "___id": "T000002R000008",
    "___s": true
  },
  {
    "__docId__": 7,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_methodReport",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#_methodReport",
    "access": "private",
    "description": "<p>Stores any associated <code>MethodReport</code>.</p>\n",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "MethodReport"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000009",
    "___s": true,
    "descriptionRaw": "Stores any associated `MethodReport`."
  },
  {
    "__docId__": 8,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "finalize",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#finalize",
    "access": null,
    "description": "Cleans up any house keeping member variables.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AbstractReport}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "AbstractReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000010",
    "___s": true
  },
  {
    "__docId__": 9,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "methodReport",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#methodReport",
    "access": null,
    "description": "Returns the associated `MethodReport` or `this`. Both ClassReport and ModuleReport have an `aggregate`\nMethodReport.",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MethodReport}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MethodReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000011",
    "___s": true
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "incrementDistinctHalsteadItems",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#incrementDistinctHalsteadItems",
    "access": null,
    "description": "Increments the associated MethodReport HalsteadData for distinct identifiers.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>A Halstead metric name.</p>\n",
        "descriptionRaw": "A Halstead metric name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": "<p>A Halstead identifier name.</p>\n",
        "descriptionRaw": "A Halstead identifier name."
      }
    ],
    "generator": false,
    "___id": "T000002R000012",
    "___s": true
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "incrementHalsteadItems",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#incrementHalsteadItems",
    "access": null,
    "description": "Increments the associated MethodReport Halstead items including distinct and total counts.",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>A Halstead metric name.</p>\n",
        "descriptionRaw": "A Halstead metric name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": "<p>A Halstead identifier name.</p>\n",
        "descriptionRaw": "A Halstead identifier name."
      }
    ],
    "generator": false,
    "___id": "T000002R000013",
    "___s": true
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "incrementHalsteadMetric",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#incrementHalsteadMetric",
    "access": null,
    "description": "Increments the associated MethodReport Halstead metric type.",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>A Halstead metric name.</p>\n",
        "descriptionRaw": "A Halstead metric name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "<p>A Halstead metric type.</p>\n",
        "descriptionRaw": "A Halstead metric type."
      }
    ],
    "generator": false,
    "___id": "T000002R000014",
    "___s": true
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "incrementParams",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#incrementParams",
    "access": null,
    "description": "Increments the associated MethodReport parameter count.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "count",
        "description": "<p>Value to increase params by.</p>\n",
        "descriptionRaw": "Value to increase params by."
      }
    ],
    "generator": false,
    "___id": "T000002R000015",
    "___s": true
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isHalsteadMetricDistinct",
    "memberof": "src/module/report/AbstractReport.js~AbstractReport",
    "longname": "src/module/report/AbstractReport.js~AbstractReport#isHalsteadMetricDistinct",
    "access": null,
    "description": "Returns true if a given HalsteadData metric / identifier is not found in the associated MethodReport.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>A Halstead metric name.</p>\n",
        "descriptionRaw": "A Halstead metric name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": "<p>A Halstead identifier name.</p>\n",
        "descriptionRaw": "A Halstead identifier name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000016",
    "___s": true
  },
  {
    "__docId__": 15,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/ClassReport.js",
    "memberof": null,
    "longname": "src/module/report/ClassReport.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractReport   from './AbstractReport';\nimport MethodAverage    from './averages/MethodAverage';\nimport MethodReport     from './MethodReport';\n\n/**\n * Provides the class report object which stores data pertaining to a single ES6 class.\n *\n * Methods that are stored as MethodReports in the `methods` member variable.\n */\nexport default class ClassReport extends AbstractReport\n{\n   /**\n    * Initializes class report.\n    *\n    * @param {string}   name - Name of the class.\n    * @param {number}   lineStart - Start line of class.\n    * @param {number}   lineEnd - End line of class.\n    */\n   constructor(name = '', lineStart = 0, lineEnd = 0)\n   {\n      super(new MethodReport('', lineStart, lineEnd, 0));\n\n      /**\n       * Stores the aggregate method data.\n       * @type {MethodReport}\n       */\n      this.aggregate = this._methodReport;\n\n      /**\n       * Stores the end line for the class.\n       * @type {number}\n       */\n      this.lineEnd = lineEnd;\n\n      /**\n       * Stores the start line for the class.\n       * @type {number}\n       */\n      this.lineStart = lineStart;\n\n      /**\n       * Stores all method data.\n       * @type {Array<MethodReport>}\n       */\n      this.methods = [];\n\n      /**\n       * Stores the average method metric data.\n       * @type {HalsteadAverage}\n       */\n      this.methodAverage = new MethodAverage();\n\n      /**\n       * The name of the class.\n       * @type {string}\n       */\n      this.name = name;\n   }\n\n   /**\n    * Cleans up any house keeping member variables.\n    *\n    * @returns {ClassReport}\n    */\n   finalize()\n   {\n      super.finalize();\n\n      this.methods.forEach((methodReport) => { methodReport.finalize(); });\n\n      return this;\n   }\n\n   /**\n    * Deserializes a JSON object representing a ClassReport.\n    *\n    * @param {object}   object - A JSON object of a ClassReport that was previously serialized.\n    *\n    * @returns {ClassReport}\n    */\n   static parse(object)\n   {\n      /* istanbul ignore if */\n      if (typeof object !== 'object') { throw new TypeError(`parse error: 'object' is not an 'object'.`); }\n\n      const classReport = Object.assign(new ClassReport(), object);\n\n      // Must explicitly assign `aggregate` to `classReport._methodReport` and re-assign data.\n      classReport.aggregate = Object.assign(classReport._methodReport, object.aggregate);\n\n      if (classReport.methods.length > 0)\n      {\n         classReport.methods = classReport.methods.map((methodReport) => { return MethodReport.parse(methodReport); });\n      }\n\n      return classReport;\n   }\n}\n",
    "___id": "T000002R000017",
    "___s": true
  },
  {
    "__docId__": 16,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ClassReport",
    "memberof": "src/module/report/ClassReport.js",
    "longname": "src/module/report/ClassReport.js~ClassReport",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/ClassReport.js",
    "importStyle": "ClassReport",
    "description": "Provides the class report object which stores data pertaining to a single ES6 class.\n\nMethods that are stored as MethodReports in the `methods` member variable.",
    "lineNumber": 10,
    "interface": false,
    "extends": [
      "src/module/report/AbstractReport.js~AbstractReport"
    ],
    "___id": "T000002R000018",
    "___s": true,
    "_custom_extends_chains": [
      "src/module/report/AbstractReport.js~AbstractReport"
    ]
  },
  {
    "__docId__": 17,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#constructor",
    "access": null,
    "description": "Initializes class report.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>Name of the class.</p>\n",
        "descriptionRaw": "Name of the class."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineStart",
        "description": "<p>Start line of class.</p>\n",
        "descriptionRaw": "Start line of class."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineEnd",
        "description": "<p>End line of class.</p>\n",
        "descriptionRaw": "End line of class."
      }
    ],
    "generator": false,
    "___id": "T000002R000019",
    "___s": true
  },
  {
    "__docId__": 18,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "aggregate",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#aggregate",
    "access": null,
    "description": "Stores the aggregate method data.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "MethodReport"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000020",
    "___s": true
  },
  {
    "__docId__": 19,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lineEnd",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#lineEnd",
    "access": null,
    "description": "Stores the end line for the class.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000021",
    "___s": true
  },
  {
    "__docId__": 20,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lineStart",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#lineStart",
    "access": null,
    "description": "Stores the start line for the class.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000022",
    "___s": true
  },
  {
    "__docId__": 21,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "methods",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#methods",
    "access": null,
    "description": "Stores all method data.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Array<MethodReport>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000023",
    "___s": true
  },
  {
    "__docId__": 22,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "methodAverage",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#methodAverage",
    "access": null,
    "description": "Stores the average method metric data.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "HalsteadAverage"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000024",
    "___s": true
  },
  {
    "__docId__": 23,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#name",
    "access": null,
    "description": "The name of the class.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000025",
    "___s": true
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "finalize",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport#finalize",
    "access": null,
    "description": "Cleans up any house keeping member variables.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ClassReport}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ClassReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000026",
    "___s": true
  },
  {
    "__docId__": 25,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/module/report/ClassReport.js~ClassReport",
    "longname": "src/module/report/ClassReport.js~ClassReport.parse",
    "access": null,
    "description": "Deserializes a JSON object representing a ClassReport.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ClassReport}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>A JSON object of a ClassReport that was previously serialized.</p>\n",
        "descriptionRaw": "A JSON object of a ClassReport that was previously serialized."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ClassReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000027",
    "___s": true
  },
  {
    "__docId__": 26,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/HalsteadData.js",
    "memberof": null,
    "longname": "src/module/report/HalsteadData.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides all Halstead metric data / parameters.\n * @see https://en.wikipedia.org/wiki/Halstead_complexity_measures\n */\nexport default class HalsteadData\n{\n   /**\n    * Initializes the default Halstead data.\n    */\n   constructor()\n   {\n      /**\n       * Measures an estimate for the number of potential errors.\n       * @type {number}\n       */\n      this.bugs = 0;\n\n      /**\n       * Measures the difficulty of the program to write or understand.\n       * @type {number}\n       */\n      this.difficulty = 0;\n\n      /**\n       * Measures the maintenance effort of the program.\n       * @type {number}\n       */\n      this.effort = 0;\n\n      /**\n       * Defines the number of operands and operators.\n       * @type {number}\n       */\n      this.length = 0;\n\n      /**\n       * Measures potential coding time.\n       * @type {number}\n       */\n      this.time = 0;\n\n      /**\n       * Defines the unique number of operands and operators.\n       * @type {number}\n       */\n      this.vocabulary = 0;\n\n      /**\n       * Measures how much information a reader of the code potential has to absorb to understand its meaning.\n       * @type {number}\n       */\n      this.volume = 0;\n\n      /**\n       * In general an operand participates in actions associated with operators. A distinct and total count is provided\n       * with all identifiers.\n       * @type {{distinct: number, total: number, identifiers: Array<string>}}\n       */\n      this.operands = { distinct: 0, total: 0, identifiers: [] };\n\n      /**\n       * In general an operator carries out an action. A distinct and total count is provided with all identifiers.\n       * @type {{distinct: number, total: number, identifiers: Array<string>}}\n       */\n      this.operators = { distinct: 0, total: 0, identifiers: [] };\n   }\n\n   /**\n    * Resets the state of all Halstead data metrics without removing any operand or operator data.\n    *\n    * @param {boolean}  clearIdentifiers - Clears operands / operators; default: false.\n    *\n    * @returns {HalsteadData}\n    */\n   reset(clearIdentifiers = false)\n   {\n      Object.keys(this).forEach((key) => { if (typeof this[key] === 'number') { this[key] = 0; } });\n\n      if (clearIdentifiers)\n      {\n         this.operands = { distinct: 0, total: 0, identifiers: [] };\n         this.operators = { distinct: 0, total: 0, identifiers: [] };\n      }\n\n      return this;\n   }\n}\n",
    "___id": "T000002R000028",
    "___s": true
  },
  {
    "__docId__": 27,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HalsteadData",
    "memberof": "src/module/report/HalsteadData.js",
    "longname": "src/module/report/HalsteadData.js~HalsteadData",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/HalsteadData.js",
    "importStyle": "HalsteadData",
    "description": "Provides all Halstead metric data / parameters.",
    "see": [
      "<a href=\"https://en.wikipedia.org/wiki/Halstead_complexity_measures\">https://en.wikipedia.org/wiki/Halstead_complexity_measures</a>"
    ],
    "lineNumber": 5,
    "interface": false,
    "___id": "T000002R000029",
    "___s": true
  },
  {
    "__docId__": 28,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#constructor",
    "access": null,
    "description": "Initializes the default Halstead data.",
    "lineNumber": 10,
    "params": [],
    "generator": false,
    "___id": "T000002R000030",
    "___s": true
  },
  {
    "__docId__": 29,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bugs",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#bugs",
    "access": null,
    "description": "Measures an estimate for the number of potential errors.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000031",
    "___s": true
  },
  {
    "__docId__": 30,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "difficulty",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#difficulty",
    "access": null,
    "description": "Measures the difficulty of the program to write or understand.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000032",
    "___s": true
  },
  {
    "__docId__": 31,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "effort",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#effort",
    "access": null,
    "description": "Measures the maintenance effort of the program.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000033",
    "___s": true
  },
  {
    "__docId__": 32,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#length",
    "access": null,
    "description": "Defines the number of operands and operators.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000034",
    "___s": true
  },
  {
    "__docId__": 33,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "time",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#time",
    "access": null,
    "description": "Measures potential coding time.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000035",
    "___s": true
  },
  {
    "__docId__": 34,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "vocabulary",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#vocabulary",
    "access": null,
    "description": "Defines the unique number of operands and operators.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000036",
    "___s": true
  },
  {
    "__docId__": 35,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "volume",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#volume",
    "access": null,
    "description": "Measures how much information a reader of the code potential has to absorb to understand its meaning.",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000037",
    "___s": true
  },
  {
    "__docId__": 36,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "operands",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#operands",
    "access": null,
    "description": "In general an operand participates in actions associated with operators. A distinct and total count is provided\nwith all identifiers.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "{distinct: number, total: number, identifiers: Array<string>}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000038",
    "___s": true
  },
  {
    "__docId__": 37,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "operators",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#operators",
    "access": null,
    "description": "In general an operator carries out an action. A distinct and total count is provided with all identifiers.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "{distinct: number, total: number, identifiers: Array<string>}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000039",
    "___s": true
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#reset",
    "access": null,
    "description": "Resets the state of all Halstead data metrics without removing any operand or operator data.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HalsteadData}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "clearIdentifiers",
        "description": "<p>Clears operands / operators; default: false.</p>\n",
        "descriptionRaw": "Clears operands / operators; default: false."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HalsteadData"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000040",
    "___s": true
  },
  {
    "__docId__": 39,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "operands",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#operands",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000041",
    "___s": true
  },
  {
    "__docId__": 40,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "operators",
    "memberof": "src/module/report/HalsteadData.js~HalsteadData",
    "longname": "src/module/report/HalsteadData.js~HalsteadData#operators",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000042",
    "___s": true
  },
  {
    "__docId__": 41,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/MethodReport.js",
    "memberof": null,
    "longname": "src/module/report/MethodReport.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractReport   from './AbstractReport';\nimport HalsteadData     from './HalsteadData';\n\n/**\n * Provides the method report object which stores data pertaining to a single method / function.\n *\n *\n */\nexport default class MethodReport extends AbstractReport\n{\n   /**\n    * Initializes method report.\n    *\n    * @param {string}   name - Name of the method.\n    * @param {number}   lineStart - Start line of method.\n    * @param {number}   lineEnd - End line of method.\n    * @param {number}   params - Number of parameters for method.\n    */\n   constructor(name = '', lineStart = 0, lineEnd = 0, params = 0)\n   {\n      super();\n\n      /**\n       * The cyclomatic complexity of the method.\n       * @type {number}\n       */\n      this.cyclomatic = 1;\n\n      /**\n       * The cyclomatic density of the method.\n       * @type {number}\n       */\n      this.cyclomaticDensity = 0;\n\n      /**\n       * Stores the Halstead data instance.\n       * @type {HalsteadData}\n       */\n      this.halstead = new HalsteadData();\n\n      /**\n       * Stores the end line for the method.\n       * @type {number}\n       */\n      this.lineEnd = lineEnd;\n\n      /**\n       * Stores the start line for the method.\n       * @type {number}\n       */\n      this.lineStart = lineStart;\n\n      /**\n       * The name of the method.\n       * @type {string}\n       */\n      this.name = name;\n\n      /**\n       * The number of parameters for the method.\n       * @type {number}\n       */\n      this.params = params;\n\n      /**\n       * The source lines of code for the method.\n       * @type {{logical: number, physical: number}}\n       */\n      this.sloc = { logical: 0, physical: lineEnd - lineStart + 1 };\n   }\n\n   /**\n    * Cleans up any house keeping member variables.\n    *\n    * @returns {MethodReport}\n    */\n   finalize()\n   {\n      super.finalize();\n\n      return this;\n   }\n\n   /**\n    * Deserializes a JSON object representing a MethodReport.\n    *\n    * @param {object}   object - A JSON object of a MethodReport that was previously serialized.\n    *\n    * @returns {MethodReport}\n    */\n   static parse(object)\n   {\n      /* istanbul ignore if */\n      if (typeof object !== 'object') { throw new TypeError(`parse error: 'object' is not an 'object'.`); }\n\n      return Object.assign(new MethodReport(), object);\n   }\n}\n",
    "___id": "T000002R000043",
    "___s": true
  },
  {
    "__docId__": 42,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MethodReport",
    "memberof": "src/module/report/MethodReport.js",
    "longname": "src/module/report/MethodReport.js~MethodReport",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/MethodReport.js",
    "importStyle": "MethodReport",
    "description": "Provides the method report object which stores data pertaining to a single method / function.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/module/report/AbstractReport.js~AbstractReport"
    ],
    "___id": "T000002R000044",
    "___s": true,
    "_custom_extends_chains": [
      "src/module/report/AbstractReport.js~AbstractReport"
    ]
  },
  {
    "__docId__": 43,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#constructor",
    "access": null,
    "description": "Initializes method report.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>Name of the method.</p>\n",
        "descriptionRaw": "Name of the method."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineStart",
        "description": "<p>Start line of method.</p>\n",
        "descriptionRaw": "Start line of method."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineEnd",
        "description": "<p>End line of method.</p>\n",
        "descriptionRaw": "End line of method."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "<p>Number of parameters for method.</p>\n",
        "descriptionRaw": "Number of parameters for method."
      }
    ],
    "generator": false,
    "___id": "T000002R000045",
    "___s": true
  },
  {
    "__docId__": 44,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cyclomatic",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#cyclomatic",
    "access": null,
    "description": "The cyclomatic complexity of the method.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000046",
    "___s": true
  },
  {
    "__docId__": 45,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cyclomaticDensity",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#cyclomaticDensity",
    "access": null,
    "description": "The cyclomatic density of the method.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000047",
    "___s": true
  },
  {
    "__docId__": 46,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "halstead",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#halstead",
    "access": null,
    "description": "Stores the Halstead data instance.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "HalsteadData"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000048",
    "___s": true
  },
  {
    "__docId__": 47,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lineEnd",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#lineEnd",
    "access": null,
    "description": "Stores the end line for the method.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000049",
    "___s": true
  },
  {
    "__docId__": 48,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lineStart",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#lineStart",
    "access": null,
    "description": "Stores the start line for the method.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000050",
    "___s": true
  },
  {
    "__docId__": 49,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#name",
    "access": null,
    "description": "The name of the method.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000051",
    "___s": true
  },
  {
    "__docId__": 50,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "params",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#params",
    "access": null,
    "description": "The number of parameters for the method.",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000052",
    "___s": true
  },
  {
    "__docId__": 51,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sloc",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#sloc",
    "access": null,
    "description": "The source lines of code for the method.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "{logical: number, physical: number}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000053",
    "___s": true
  },
  {
    "__docId__": 52,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "finalize",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport#finalize",
    "access": null,
    "description": "Cleans up any house keeping member variables.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MethodReport}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "MethodReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000054",
    "___s": true
  },
  {
    "__docId__": 53,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/module/report/MethodReport.js~MethodReport",
    "longname": "src/module/report/MethodReport.js~MethodReport.parse",
    "access": null,
    "description": "Deserializes a JSON object representing a MethodReport.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MethodReport}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>A JSON object of a MethodReport that was previously serialized.</p>\n",
        "descriptionRaw": "A JSON object of a MethodReport that was previously serialized."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MethodReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000055",
    "___s": true
  },
  {
    "__docId__": 54,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/ModuleReport.js",
    "memberof": null,
    "longname": "src/module/report/ModuleReport.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractReport   from './AbstractReport';\nimport ClassReport      from './ClassReport';\nimport MethodAverage    from './averages/MethodAverage';\nimport MethodReport     from './MethodReport';\n\nimport MathUtil         from  '../../utils/MathUtil';\nimport TransformFormat  from  '../../transform/TransformFormat';\n\n/**\n * Provides the module report object which stores data pertaining to a single file / module being processed.\n *\n * All ES Module classes are stored in the `classes` member variable as ClassReports. Methods that are not part of a\n * class are stored as MethodReports in the `methods` member variable.\n *\n * Various helper methods found in ModuleReport and AbstractReport help increment associated data during collection.\n */\nexport default class ModuleReport extends AbstractReport\n{\n   /**\n    * Initializes the report.\n    *\n    * @param {number}   lineStart - Start line of file / module.\n    *\n    * @param {number}   lineEnd - End line of file / module.\n    *\n    * @param {object}   settings - An object hash of the settings used in generating this report via ESComplexModule.\n    */\n   constructor(lineStart = 0, lineEnd = 0, settings = {})\n   {\n      super(new MethodReport('', lineStart, lineEnd, 0));\n\n      /**\n       * Stores the settings used to generate the module report.\n       * @type {object}\n       */\n      this.settings = typeof settings === 'object' ? settings : {};\n\n      /**\n       * Stores the aggregate MethodReport for the module.\n       * @type {MethodReport}\n       */\n      this.aggregate = this._methodReport;\n\n      /**\n       * Stores all ClassReport data for the module.\n       * @type {Array<ClassReport>}\n       */\n      this.classes = [];\n\n      /**\n       * Stores all parsed dependencies.\n       * @type {Array}\n       */\n      this.dependencies = [];\n\n      /**\n       * Stores the file path of the module / file. The file path is only defined as supplied when processing projects.\n       * @type {string}\n       */\n      this.filePath = undefined;\n\n      /**\n       * Stores the end line for the module / file.\n       * @type {number}\n       */\n      this.lineEnd = lineEnd;\n\n      /**\n       * Stores the start line for the module / file.\n       * @type {number}\n       */\n      this.lineStart = lineStart;\n\n      /**\n       * Measures the average method maintainability index for the module / file.\n       * @type {number}\n       */\n      this.maintainability = 0;\n\n      /**\n       * Stores all module MethodReport data found outside of any ES6 classes.\n       * @type {Array<MethodReport>}\n       */\n      this.methods = [];\n\n      /**\n       * Stores the average method metric data.\n       * @type {MethodAverage}\n       */\n      this.methodAverage = new MethodAverage();\n\n      /**\n       * Stores the current class report scope stack.\n       * @type {Array<ClassReport>}\n       */\n      this._scopeStackClass = [];\n\n      /**\n       * Stores the current method report scope stack.\n       * @type {Array<MethodReport>}\n       */\n      this._scopeStackMethod = [];\n\n      /**\n       * Stores the active source path of the module / file. This path is respective of how the file is referenced in\n       * the source code itself. `srcPath` is only defined as supplied when processing projects.\n       * @type {string}\n       */\n      this.srcPath = undefined;\n\n      /**\n       * Stores the active source path alias of the module / file. This path is respective of how the file is\n       * referenced in the source code itself when aliased including NPM and JSPM modules which provide a `main` entry.\n       * `srcPathAlias` is only defined as supplied when processing projects.\n       * @type {string}\n       */\n      this.srcPathAlias = undefined;\n   }\n\n   /**\n    * Potentially adds given dependencies for tracking.\n    *\n    * @param {object|Array}   dependencies - Dependencies to add.\n    */\n   addDependencies(dependencies)\n   {\n      if (typeof dependencies === 'object' || Array.isArray(dependencies))\n      {\n         this.dependencies = this.dependencies.concat(dependencies);\n      }\n   }\n\n   /**\n    * Creates a report scope when a class or method is entered.\n    *\n    * @param {string}   type - Type of report to create.\n    * @param {string}   name - Name of the class or method.\n    * @param {number}   lineStart - Start line of method.\n    * @param {number}   lineEnd - End line of method.\n    * @param {number}   params - Number of parameters for method.\n    *\n    * @return {object}\n    */\n   createScope(type, name = '', lineStart = 0, lineEnd = 0, params = 0)\n   {\n      let report;\n\n      switch (type)\n      {\n         case 'class':\n            report = new ClassReport(name, lineStart, lineEnd);\n            this.classes.push(report);\n            this._scopeStackClass.push(report);\n            break;\n\n         case 'method':\n         {\n            report = new MethodReport(name, lineStart, lineEnd, params);\n\n            // Increment aggregate method report params.\n            this.incrementParams(params);\n\n            // If an existing class report / scope exists also push the method to the class report.\n            const classReport = this.getCurrentClassReport();\n\n            if (classReport)\n            {\n               classReport.incrementParams(params);\n               classReport.methods.push(report);\n            }\n            else\n            {\n               // Add this report to the module methods as there is no current class report.\n               this.methods.push(report);\n            }\n\n            this._scopeStackMethod.push(report);\n\n            break;\n         }\n\n         default:\n            throw new Error(`createScope error: Unknown scope type (${type}).`);\n      }\n\n      return report;\n   }\n\n   /**\n    * Cleans up any house keeping member variables.\n    *\n    * @returns {ModuleReport}\n    */\n   finalize()\n   {\n      super.finalize();\n\n      this.classes.forEach((report) => { report.finalize(); });\n      this.methods.forEach((report) => { report.finalize(); });\n\n      delete this._scopeStackClass;\n      delete this._scopeStackMethod;\n\n      return MathUtil.toFixedTraverse(this);\n   }\n\n   /**\n    * Returns the current class report.\n    *\n    * @returns {ClassReport}\n    */\n   getCurrentClassReport()\n   {\n      return this._scopeStackClass.length > 0 ? this._scopeStackClass[this._scopeStackClass.length - 1] : void 0;\n   }\n\n   /**\n    * Returns the current method report.\n    *\n    * @returns {MethodReport}\n    */\n   getCurrentMethodReport()\n   {\n      return this._scopeStackMethod.length > 0 ? this._scopeStackMethod[this._scopeStackMethod.length - 1] : void 0;\n   }\n\n   /**\n    * Returns the supported format file extension types.\n    *\n    * @returns {string[]}\n    */\n   static getFormatFileExtensions()\n   {\n      return TransformFormat.getFileExtensions();\n   }\n\n   /**\n    * Returns the supported format names.\n    *\n    * @returns {string[]}\n    */\n   static getFormatNames()\n   {\n      return TransformFormat.getNames();\n   }\n\n   /**\n    * Returns the supported format types.\n    *\n    * @returns {string[]}\n    */\n   static getFormatTypes()\n   {\n      return TransformFormat.getTypes();\n   }\n\n   /**\n    * Returns the setting indexed by the given key.\n    *\n    * @param {string}   key - A key used to store the setting parameter.\n    * @param {*}        defaultValue - A default value to return if no setting for the given key is currently stored.\n    *\n    * @returns {*}\n    */\n   getSetting(key, defaultValue = undefined)\n   {\n      /* istanbul ignore if */\n      if (typeof key !== 'string' || key === '')\n      {\n         throw new TypeError(`getSetting error: 'key' is not a 'string' or is empty.`);\n      }\n\n      return typeof this.settings === 'object' && typeof this.settings[key] !== 'undefined' ? this.settings[key] :\n       defaultValue;\n   }\n\n   /**\n    * Increments the Halstead `metric` for the given `identifier` for the ModuleReport and any current class or method\n    * report being tracked.\n    *\n    * @param {string}   metric - A Halstead metric name.\n    * @param {string}   identifier - A Halstead identifier name.\n    */\n   halsteadItemEncountered(metric, identifier)\n   {\n      const currentClassReport = this.getCurrentClassReport();\n      const currentMethodReport = this.getCurrentMethodReport();\n\n      this.incrementHalsteadItems(metric, identifier);\n\n      if (currentClassReport) { currentClassReport.incrementHalsteadItems(metric, identifier); }\n\n      if (currentMethodReport) { currentMethodReport.incrementHalsteadItems(metric, identifier); }\n   }\n\n   /**\n    * Increments the cyclomatic metric for the ModuleReport and any current class or method report being tracked.\n    *\n    * @param {number}   amount - Amount to increment.\n    */\n   incrementCyclomatic(amount)\n   {\n      const currentClassReport = this.getCurrentClassReport();\n      const currentMethodReport = this.getCurrentMethodReport();\n\n      this.aggregate.cyclomatic += amount;\n\n      if (currentClassReport) { currentClassReport.aggregate.cyclomatic += amount; }\n      if (currentMethodReport) { currentMethodReport.cyclomatic += amount; }\n   }\n\n   /**\n    * Increments the logical SLOC (source lines of code) metric for the ModuleReport and any current class or method\n    * report being tracked.\n    *\n    * @param {number}   amount - Amount to increment.\n    */\n   incrementLogicalSloc(amount)\n   {\n      const currentClassReport = this.getCurrentClassReport();\n      const currentMethodReport = this.getCurrentMethodReport();\n\n      this.aggregate.sloc.logical += amount;\n\n      if (currentClassReport) { currentClassReport.aggregate.sloc.logical += amount; }\n      if (currentMethodReport) { currentMethodReport.sloc.logical += amount; }\n   }\n\n   /**\n    * Deserializes a JSON object representing a ModuleReport.\n    *\n    * @param {object}   object - A JSON object of a ModuleReport that was previously serialized.\n    *\n    * @returns {ModuleReport}\n    */\n   static parse(object)\n   {\n      /* istanbul ignore if */\n      if (typeof object !== 'object') { throw new TypeError(`parse error: 'object' is not an 'object'.`); }\n\n      const report = Object.assign(new ModuleReport(), object);\n\n      // Must explicitly assign `aggregate` to `report._methodReport` and re-assign data.\n      report.aggregate = Object.assign(report._methodReport, object.aggregate);\n\n      if (report.classes.length > 0)\n      {\n         report.classes = report.classes.map((classReport) => { return ClassReport.parse(classReport); });\n      }\n\n      if (report.methods.length > 0)\n      {\n         report.methods = report.methods.map((methodReport) => { return MethodReport.parse(methodReport); });\n      }\n\n      return report;\n   }\n\n   /**\n    * Pops a report scope.\n    *\n    * @param {string} type - The report scope `class` or `method` to pop off the given stack.\n    * @returns {*}\n    */\n   popScope(type)\n   {\n      switch (type)\n      {\n         case 'class':\n            this._scopeStackClass.pop();\n            return this.getCurrentClassReport();\n\n         case 'method':\n            this._scopeStackMethod.pop();\n            return this.getCurrentMethodReport();\n\n         default:\n            throw new Error(`popScope error: Unknown scope type (${type}).`);\n      }\n   }\n\n   /**\n    * Processes all TraitHalstead identifier data.\n    *\n    * @param {string}         metric - The Halstead metric being processed.\n    * @param {Array<string>}  identifiers - An array of Halstead identifiers.\n    */\n   processHalsteadItems(metric, identifiers)\n   {\n      identifiers.forEach((identifier) =>\n      {\n         this.halsteadItemEncountered(metric, identifier);\n      });\n   }\n\n   /**\n    * Sets the setting indexed by the given key and returns true if successful.\n    *\n    * @param {string}   key - A key used to store the setting parameter.\n    * @param {*}        value - A value to set to `this.settings[key]`.\n    *\n    * @returns {boolean}\n    */\n   setSetting(key, value)\n   {\n      /* istanbul ignore if */\n      if (typeof key !== 'string' || key === '')\n      {\n         throw new TypeError(`setSetting error: 'key' is not a 'string' or is empty.`);\n      }\n\n      if (this.settings === 'object')\n      {\n         this.settings[key] = value;\n         return true;\n      }\n\n      return false;\n   }\n\n   /**\n    * Formats this ModuleReport given the type.\n    *\n    * @param {string}   name - The name of formatter to use.\n    *\n    * @param {object}   options - (Optional) One or more optional parameters to pass to the formatter.\n    *\n    * @returns {string}\n    */\n   toFormat(name, options = undefined)\n   {\n      return TransformFormat.format(this, name, options);\n   }\n}\n",
    "___id": "T000002R000056",
    "___s": true
  },
  {
    "__docId__": 55,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ModuleReport",
    "memberof": "src/module/report/ModuleReport.js",
    "longname": "src/module/report/ModuleReport.js~ModuleReport",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/ModuleReport.js",
    "importStyle": "ModuleReport",
    "description": "Provides the module report object which stores data pertaining to a single file / module being processed.\n\nAll ES Module classes are stored in the `classes` member variable as ClassReports. Methods that are not part of a\nclass are stored as MethodReports in the `methods` member variable.\n\nVarious helper methods found in ModuleReport and AbstractReport help increment associated data during collection.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/module/report/AbstractReport.js~AbstractReport"
    ],
    "___id": "T000002R000057",
    "___s": true,
    "_custom_extends_chains": [
      "src/module/report/AbstractReport.js~AbstractReport"
    ]
  },
  {
    "__docId__": 56,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#constructor",
    "access": null,
    "description": "Initializes the report.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineStart",
        "description": "<p>Start line of file / module.</p>\n",
        "descriptionRaw": "Start line of file / module."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineEnd",
        "description": "<p>End line of file / module.</p>\n",
        "descriptionRaw": "End line of file / module."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "<p>An object hash of the settings used in generating this report via ESComplexModule.</p>\n",
        "descriptionRaw": "An object hash of the settings used in generating this report via ESComplexModule."
      }
    ],
    "generator": false,
    "___id": "T000002R000058",
    "___s": true
  },
  {
    "__docId__": 57,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "settings",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#settings",
    "access": null,
    "description": "Stores the settings used to generate the module report.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000059",
    "___s": true
  },
  {
    "__docId__": 58,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "aggregate",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#aggregate",
    "access": null,
    "description": "Stores the aggregate MethodReport for the module.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "MethodReport"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000060",
    "___s": true
  },
  {
    "__docId__": 59,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "classes",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#classes",
    "access": null,
    "description": "Stores all ClassReport data for the module.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Array<ClassReport>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000061",
    "___s": true
  },
  {
    "__docId__": 60,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dependencies",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#dependencies",
    "access": null,
    "description": "Stores all parsed dependencies.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000062",
    "___s": true
  },
  {
    "__docId__": 61,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filePath",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#filePath",
    "access": null,
    "description": "Stores the file path of the module / file. The file path is only defined as supplied when processing projects.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000063",
    "___s": true
  },
  {
    "__docId__": 62,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lineEnd",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#lineEnd",
    "access": null,
    "description": "Stores the end line for the module / file.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000064",
    "___s": true
  },
  {
    "__docId__": 63,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lineStart",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#lineStart",
    "access": null,
    "description": "Stores the start line for the module / file.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000065",
    "___s": true
  },
  {
    "__docId__": 64,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "maintainability",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#maintainability",
    "access": null,
    "description": "Measures the average method maintainability index for the module / file.",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000066",
    "___s": true
  },
  {
    "__docId__": 65,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "methods",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#methods",
    "access": null,
    "description": "Stores all module MethodReport data found outside of any ES6 classes.",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "Array<MethodReport>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000067",
    "___s": true
  },
  {
    "__docId__": 66,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "methodAverage",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#methodAverage",
    "access": null,
    "description": "Stores the average method metric data.",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "MethodAverage"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000068",
    "___s": true
  },
  {
    "__docId__": 67,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_scopeStackClass",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#_scopeStackClass",
    "access": null,
    "description": "Stores the current class report scope stack.",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "Array<ClassReport>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000069",
    "___s": true
  },
  {
    "__docId__": 68,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_scopeStackMethod",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#_scopeStackMethod",
    "access": null,
    "description": "Stores the current method report scope stack.",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "Array<MethodReport>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000070",
    "___s": true
  },
  {
    "__docId__": 69,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "srcPath",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#srcPath",
    "access": null,
    "description": "Stores the active source path of the module / file. This path is respective of how the file is referenced in\nthe source code itself. `srcPath` is only defined as supplied when processing projects.",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000071",
    "___s": true
  },
  {
    "__docId__": 70,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "srcPathAlias",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#srcPathAlias",
    "access": null,
    "description": "Stores the active source path alias of the module / file. This path is respective of how the file is\nreferenced in the source code itself when aliased including NPM and JSPM modules which provide a `main` entry.\n`srcPathAlias` is only defined as supplied when processing projects.",
    "lineNumber": 117,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000072",
    "___s": true
  },
  {
    "__docId__": 71,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addDependencies",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#addDependencies",
    "access": null,
    "description": "Potentially adds given dependencies for tracking.",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "dependencies",
        "description": "<p>Dependencies to add.</p>\n",
        "descriptionRaw": "Dependencies to add."
      }
    ],
    "generator": false,
    "___id": "T000002R000073",
    "___s": true
  },
  {
    "__docId__": 72,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dependencies",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#dependencies",
    "access": null,
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000074",
    "___s": true
  },
  {
    "__docId__": 73,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createScope",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#createScope",
    "access": null,
    "description": "Creates a report scope when a class or method is entered.",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "<p>Type of report to create.</p>\n",
        "descriptionRaw": "Type of report to create."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>Name of the class or method.</p>\n",
        "descriptionRaw": "Name of the class or method."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineStart",
        "description": "<p>Start line of method.</p>\n",
        "descriptionRaw": "Start line of method."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineEnd",
        "description": "<p>End line of method.</p>\n",
        "descriptionRaw": "End line of method."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "<p>Number of parameters for method.</p>\n",
        "descriptionRaw": "Number of parameters for method."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000075",
    "___s": true
  },
  {
    "__docId__": 74,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "finalize",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#finalize",
    "access": null,
    "description": "Cleans up any house keeping member variables.",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ModuleReport}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ModuleReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000076",
    "___s": true
  },
  {
    "__docId__": 75,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentClassReport",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#getCurrentClassReport",
    "access": null,
    "description": "Returns the current class report.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ClassReport}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ClassReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000077",
    "___s": true
  },
  {
    "__docId__": 76,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentMethodReport",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#getCurrentMethodReport",
    "access": null,
    "description": "Returns the current method report.",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{MethodReport}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "MethodReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000078",
    "___s": true
  },
  {
    "__docId__": 77,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getFormatFileExtensions",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport.getFormatFileExtensions",
    "access": null,
    "description": "Returns the supported format file extension types.",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000079",
    "___s": true
  },
  {
    "__docId__": 78,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getFormatNames",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport.getFormatNames",
    "access": null,
    "description": "Returns the supported format names.",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000080",
    "___s": true
  },
  {
    "__docId__": 79,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getFormatTypes",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport.getFormatTypes",
    "access": null,
    "description": "Returns the supported format types.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000081",
    "___s": true
  },
  {
    "__docId__": 80,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSetting",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#getSetting",
    "access": null,
    "description": "Returns the setting indexed by the given key.",
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "<p>A key used to store the setting parameter.</p>\n",
        "descriptionRaw": "A key used to store the setting parameter."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "<p>A default value to return if no setting for the given key is currently stored.</p>\n",
        "descriptionRaw": "A default value to return if no setting for the given key is currently stored."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000082",
    "___s": true
  },
  {
    "__docId__": 81,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "halsteadItemEncountered",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#halsteadItemEncountered",
    "access": null,
    "description": "Increments the Halstead `metric` for the given `identifier` for the ModuleReport and any current class or method\nreport being tracked.",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>A Halstead metric name.</p>\n",
        "descriptionRaw": "A Halstead metric name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "identifier",
        "description": "<p>A Halstead identifier name.</p>\n",
        "descriptionRaw": "A Halstead identifier name."
      }
    ],
    "generator": false,
    "___id": "T000002R000083",
    "___s": true
  },
  {
    "__docId__": 82,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "incrementCyclomatic",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#incrementCyclomatic",
    "access": null,
    "description": "Increments the cyclomatic metric for the ModuleReport and any current class or method report being tracked.",
    "lineNumber": 301,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "<p>Amount to increment.</p>\n",
        "descriptionRaw": "Amount to increment."
      }
    ],
    "generator": false,
    "___id": "T000002R000084",
    "___s": true
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "incrementLogicalSloc",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#incrementLogicalSloc",
    "access": null,
    "description": "Increments the logical SLOC (source lines of code) metric for the ModuleReport and any current class or method\nreport being tracked.",
    "lineNumber": 318,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "<p>Amount to increment.</p>\n",
        "descriptionRaw": "Amount to increment."
      }
    ],
    "generator": false,
    "___id": "T000002R000085",
    "___s": true
  },
  {
    "__docId__": 84,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport.parse",
    "access": null,
    "description": "Deserializes a JSON object representing a ModuleReport.",
    "lineNumber": 336,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ModuleReport}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>A JSON object of a ModuleReport that was previously serialized.</p>\n",
        "descriptionRaw": "A JSON object of a ModuleReport that was previously serialized."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ModuleReport"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000086",
    "___s": true
  },
  {
    "__docId__": 85,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "popScope",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#popScope",
    "access": null,
    "description": "Pops a report scope.",
    "lineNumber": 365,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "<p>The report scope <code>class</code> or <code>method</code> to pop off the given stack.</p>\n",
        "descriptionRaw": "The report scope `class` or `method` to pop off the given stack."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000087",
    "___s": true
  },
  {
    "__docId__": 86,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "processHalsteadItems",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#processHalsteadItems",
    "access": null,
    "description": "Processes all TraitHalstead identifier data.",
    "lineNumber": 388,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>The Halstead metric being processed.</p>\n",
        "descriptionRaw": "The Halstead metric being processed."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "identifiers",
        "description": "<p>An array of Halstead identifiers.</p>\n",
        "descriptionRaw": "An array of Halstead identifiers."
      }
    ],
    "generator": false,
    "___id": "T000002R000088",
    "___s": true
  },
  {
    "__docId__": 87,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setSetting",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#setSetting",
    "access": null,
    "description": "Sets the setting indexed by the given key and returns true if successful.",
    "lineNumber": 404,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "<p>A key used to store the setting parameter.</p>\n",
        "descriptionRaw": "A key used to store the setting parameter."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "<p>A value to set to <code>this.settings[key]</code>.</p>\n",
        "descriptionRaw": "A value to set to `this.settings[key]`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000089",
    "___s": true
  },
  {
    "__docId__": 88,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toFormat",
    "memberof": "src/module/report/ModuleReport.js~ModuleReport",
    "longname": "src/module/report/ModuleReport.js~ModuleReport#toFormat",
    "access": null,
    "description": "Formats this ModuleReport given the type.",
    "lineNumber": 430,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>The name of formatter to use.</p>\n",
        "descriptionRaw": "The name of formatter to use."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters to pass to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters to pass to the formatter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000090",
    "___s": true
  },
  {
    "__docId__": 89,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/averages/HalsteadAverage.js",
    "memberof": null,
    "longname": "src/module/report/averages/HalsteadAverage.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides all the averaged Halstead metric data.\n * @see https://en.wikipedia.org/wiki/Halstead_complexity_measures\n */\nexport default class HalsteadAverage\n{\n   /**\n    * Initializes the default Halstead data.\n    */\n   constructor()\n   {\n      /**\n       * Measures an estimate for the number of potential errors.\n       * @type {number}\n       */\n      this.bugs = 0;\n\n      /**\n       * Measures the difficulty of the program to write or understand.\n       * @type {number}\n       */\n      this.difficulty = 0;\n\n      /**\n       * Measures the maintenance effort of the program.\n       * @type {number}\n       */\n      this.effort = 0;\n\n      /**\n       * Defines the number of operands and operators.\n       * @type {number}\n       */\n      this.length = 0;\n\n      /**\n       * Measures potential coding time.\n       * @type {number}\n       */\n      this.time = 0;\n\n      /**\n       * Defines the unique number of operands and operators.\n       * @type {number}\n       */\n      this.vocabulary = 0;\n\n      /**\n       * Measures how much information a reader of the code potential has to absorb to understand its meaning.\n       * @type {number}\n       */\n      this.volume = 0;\n\n      /**\n       * In general an operand participates in actions associated with operators. A distinct and total count of\n       * identifiers.\n       * @type {{distinct: number, total: number}}\n       */\n      this.operands = { distinct: 0, total: 0 };\n\n      /**\n       * In general an operator carries out an action. A distinct and total count of identifiers.\n       * @type {{distinct: number, total: number}}\n       */\n      this.operators = { distinct: 0, total: 0 };\n   }\n}\n",
    "___id": "T000002R000091",
    "___s": true
  },
  {
    "__docId__": 90,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HalsteadAverage",
    "memberof": "src/module/report/averages/HalsteadAverage.js",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/averages/HalsteadAverage.js",
    "importStyle": "HalsteadAverage",
    "description": "Provides all the averaged Halstead metric data.",
    "see": [
      "<a href=\"https://en.wikipedia.org/wiki/Halstead_complexity_measures\">https://en.wikipedia.org/wiki/Halstead_complexity_measures</a>"
    ],
    "lineNumber": 5,
    "interface": false,
    "___id": "T000002R000092",
    "___s": true
  },
  {
    "__docId__": 91,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#constructor",
    "access": null,
    "description": "Initializes the default Halstead data.",
    "lineNumber": 10,
    "params": [],
    "generator": false,
    "___id": "T000002R000093",
    "___s": true
  },
  {
    "__docId__": 92,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "bugs",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#bugs",
    "access": null,
    "description": "Measures an estimate for the number of potential errors.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000094",
    "___s": true
  },
  {
    "__docId__": 93,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "difficulty",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#difficulty",
    "access": null,
    "description": "Measures the difficulty of the program to write or understand.",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000095",
    "___s": true
  },
  {
    "__docId__": 94,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "effort",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#effort",
    "access": null,
    "description": "Measures the maintenance effort of the program.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000096",
    "___s": true
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#length",
    "access": null,
    "description": "Defines the number of operands and operators.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000097",
    "___s": true
  },
  {
    "__docId__": 96,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "time",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#time",
    "access": null,
    "description": "Measures potential coding time.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000098",
    "___s": true
  },
  {
    "__docId__": 97,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "vocabulary",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#vocabulary",
    "access": null,
    "description": "Defines the unique number of operands and operators.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000099",
    "___s": true
  },
  {
    "__docId__": 98,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "volume",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#volume",
    "access": null,
    "description": "Measures how much information a reader of the code potential has to absorb to understand its meaning.",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000100",
    "___s": true
  },
  {
    "__docId__": 99,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "operands",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#operands",
    "access": null,
    "description": "In general an operand participates in actions associated with operators. A distinct and total count of\nidentifiers.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "{distinct: number, total: number}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000101",
    "___s": true
  },
  {
    "__docId__": 100,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "operators",
    "memberof": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage",
    "longname": "src/module/report/averages/HalsteadAverage.js~HalsteadAverage#operators",
    "access": null,
    "description": "In general an operator carries out an action. A distinct and total count of identifiers.",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "{distinct: number, total: number}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000102",
    "___s": true
  },
  {
    "__docId__": 101,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/averages/MethodAverage.js",
    "memberof": null,
    "longname": "src/module/report/averages/MethodAverage.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import HalsteadAverage  from './HalsteadAverage';\n\n/**\n * Provides all the averaged method metric data.\n */\nexport default class MethodAverage\n{\n   /**\n    * Initializes the default averaged method data.\n    */\n   constructor()\n   {\n      /**\n       * Measures the average method cyclomatic complexity of the module / class.\n       * @type {number}\n       */\n      this.cyclomatic = 0;\n\n      /**\n       * Measures the average method cyclomatic density of the module / class.\n       * @type {number}\n       */\n      this.cyclomaticDensity = 0;\n\n      /**\n       * Stores the averaged Halstead metric data.\n       * @type {HalsteadData}\n       */\n      this.halstead = new HalsteadAverage();\n\n      /**\n       * Measures the average number of method parameters for the module / class.\n       * @type {number}\n       */\n      this.params = 0;\n\n      /**\n       * Measures the average source lines of code for the module / class.\n       * @type {{logical: number, physical: number}}\n       */\n      this.sloc = { logical: 0, physical: 0 };\n   }\n}\n",
    "___id": "T000002R000103",
    "___s": true
  },
  {
    "__docId__": 102,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MethodAverage",
    "memberof": "src/module/report/averages/MethodAverage.js",
    "longname": "src/module/report/averages/MethodAverage.js~MethodAverage",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/averages/MethodAverage.js",
    "importStyle": "MethodAverage",
    "description": "Provides all the averaged method metric data.",
    "lineNumber": 6,
    "interface": false,
    "___id": "T000002R000104",
    "___s": true
  },
  {
    "__docId__": 103,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/averages/MethodAverage.js~MethodAverage",
    "longname": "src/module/report/averages/MethodAverage.js~MethodAverage#constructor",
    "access": null,
    "description": "Initializes the default averaged method data.",
    "lineNumber": 11,
    "params": [],
    "generator": false,
    "___id": "T000002R000105",
    "___s": true
  },
  {
    "__docId__": 104,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cyclomatic",
    "memberof": "src/module/report/averages/MethodAverage.js~MethodAverage",
    "longname": "src/module/report/averages/MethodAverage.js~MethodAverage#cyclomatic",
    "access": null,
    "description": "Measures the average method cyclomatic complexity of the module / class.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000106",
    "___s": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cyclomaticDensity",
    "memberof": "src/module/report/averages/MethodAverage.js~MethodAverage",
    "longname": "src/module/report/averages/MethodAverage.js~MethodAverage#cyclomaticDensity",
    "access": null,
    "description": "Measures the average method cyclomatic density of the module / class.",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000107",
    "___s": true
  },
  {
    "__docId__": 106,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "halstead",
    "memberof": "src/module/report/averages/MethodAverage.js~MethodAverage",
    "longname": "src/module/report/averages/MethodAverage.js~MethodAverage#halstead",
    "access": null,
    "description": "Stores the averaged Halstead metric data.",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "HalsteadData"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000108",
    "___s": true
  },
  {
    "__docId__": 107,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "params",
    "memberof": "src/module/report/averages/MethodAverage.js~MethodAverage",
    "longname": "src/module/report/averages/MethodAverage.js~MethodAverage#params",
    "access": null,
    "description": "Measures the average number of method parameters for the module / class.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000109",
    "___s": true
  },
  {
    "__docId__": 108,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sloc",
    "memberof": "src/module/report/averages/MethodAverage.js~MethodAverage",
    "longname": "src/module/report/averages/MethodAverage.js~MethodAverage#sloc",
    "access": null,
    "description": "Measures the average source lines of code for the module / class.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "{logical: number, physical: number}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000110",
    "___s": true
  },
  {
    "__docId__": 109,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/report/averages/ModuleAverage.js",
    "memberof": null,
    "longname": "src/module/report/averages/ModuleAverage.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MethodAverage from './MethodAverage';\n\n/**\n * Provides all the averaged module metric data.\n */\nexport default class ModuleAverage\n{\n   /**\n    * Initializes the default averaged module data.\n    */\n   constructor()\n   {\n      this.methodAverage = new MethodAverage();\n\n      /**\n       * Measures the average method maintainability index for the module / file.\n       * @type {number}\n       */\n      this.maintainability = 0;\n   }\n}\n",
    "___id": "T000002R000111",
    "___s": true
  },
  {
    "__docId__": 110,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ModuleAverage",
    "memberof": "src/module/report/averages/ModuleAverage.js",
    "longname": "src/module/report/averages/ModuleAverage.js~ModuleAverage",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/report/averages/ModuleAverage.js",
    "importStyle": "ModuleAverage",
    "description": "Provides all the averaged module metric data.",
    "lineNumber": 6,
    "interface": false,
    "___id": "T000002R000112",
    "___s": true
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/report/averages/ModuleAverage.js~ModuleAverage",
    "longname": "src/module/report/averages/ModuleAverage.js~ModuleAverage#constructor",
    "access": null,
    "description": "Initializes the default averaged module data.",
    "lineNumber": 11,
    "params": [],
    "generator": false,
    "___id": "T000002R000113",
    "___s": true
  },
  {
    "__docId__": 112,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "methodAverage",
    "memberof": "src/module/report/averages/ModuleAverage.js~ModuleAverage",
    "longname": "src/module/report/averages/ModuleAverage.js~ModuleAverage#methodAverage",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000114",
    "___s": true
  },
  {
    "__docId__": 113,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "maintainability",
    "memberof": "src/module/report/averages/ModuleAverage.js~ModuleAverage",
    "longname": "src/module/report/averages/ModuleAverage.js~ModuleAverage#maintainability",
    "access": null,
    "description": "Measures the average method maintainability index for the module / file.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000115",
    "___s": true
  },
  {
    "__docId__": 114,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/traits/HalsteadArray.js",
    "memberof": null,
    "longname": "src/module/traits/HalsteadArray.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import TraitHalstead from './TraitHalstead';\n\n/**\n * Provides a wrapper around an array of Halstead property object hashes which should contain an\n * `identifier` field and potentially a `filter` field.\n */\nexport default class HalsteadArray\n{\n   /**\n    * Initializes HalsteadArray by normalizing any Halstead properties converting them into TraitHalstead instances.\n    *\n    * @param {string}               metric - The name of Halstead metric being stored.\n    * @param {Array<object|string>} data - An array of Halstead properties.\n    */\n   constructor(metric, data)\n   {\n      /* istanbul ignore if */\n      if (typeof metric !== 'string') { throw new TypeError('ctor error: metric is not a `string`.'); }\n\n      /* istanbul ignore if */\n      if (!Array.isArray(data)) { throw new TypeError('ctor error: data is not an `Array`.'); }\n\n      /**\n       * Stores an array of normalized Halstead property data to an object hash that has an `identifier` entry.\n       * @type {Array<TraitHalstead>}\n       * @private\n       */\n      this._data = data.map((property) =>\n      {\n         return property && typeof property.identifier !== 'undefined' ? new TraitHalstead(metric, property) :\n          new TraitHalstead(metric, { identifier: property });\n      });\n\n      /**\n       * Stores the Halstead metric type.\n       * @type {string}\n       * @private\n       */\n      this._metric = metric;\n   }\n\n   /**\n    * Allows custom processing of TraitHalstead data.\n    *\n    * @param {function} callback - A custom method to process each TraitHalstead data.\n    * @param {object}   thisArg - The this `this` scope to run callback with.\n    */\n   forEach(callback, thisArg)\n   {\n      this._data.forEach(callback, thisArg);\n   }\n\n   /**\n    * Returns a TraitHalstead entry at the given index.\n    *\n    * @param {number}   index - Index to access.\n    *\n    * @returns {TraitHalstead}\n    */\n   get(index)\n   {\n      return this._data[index];\n   }\n\n   /**\n    * Returns the length of wrapped TraitHalstead data.\n    *\n    * @returns {number}\n    */\n   get length() { return this._data.length; }\n\n   /**\n    * Returns the associated metric type.\n    *\n    * @returns {string}\n    */\n   get metric() { return this._metric; }\n\n   /**\n    * Returns the typeof data being wrapped.\n    *\n    * @returns {string}\n    */\n   get type() { return typeof this._data; }\n\n   /**\n    * Returns an array of evaluated TraitHalstead data as the value of the `identifier` field of the wrapped data.\n    * Additionally the TraitHalstead filter function is invoked with the given parameters removing any values that\n    * fail the filter test.\n    *\n    * @param {*}  params - Provides parameters which are forwarded onto any data stored as a function. Normally\n    *                      `params` should be the `current AST node, parent AST node, ... optional data`.\n    *\n    * @returns {Array<string>}\n    */\n   valueOf(...params)\n   {\n      const filtered = this._data.filter((traitHalstead) =>\n      {\n         return typeof traitHalstead.valueOf(...params) !== 'undefined' && traitHalstead.filter(...params);\n      });\n\n      // Map all TraitHalstead data and flatten any array of identifiers returned from `valueOf` and finally convert\n      // all flattened identifier entries to strings as necessary.\n      return ([].concat(...filtered.map((traitHalstead) => traitHalstead.valueOf(...params)))).map((entry) =>\n      {\n         // Convert any `undefined` entry to a text string. This should only occur when a TraitHalstead defined\n         // as a function returns an array containing `undefined`; in this case there is an issue with a syntax trait\n         // definition not properly verifying data.\n\n         /* istanbul ignore if */\n         if (entry === void 0)\n         {\n            console.warn(`HalsteadArray valueOf warning: undefined TraitHalstead item entry converted to a 'string'.`);\n            entry = 'undefined';\n         }\n\n         // Convert any entries to strings as necessary.\n         return typeof entry !== 'string' ? JSON.stringify(entry) : entry;\n      });\n   }\n}\n",
    "___id": "T000002R000116",
    "___s": true
  },
  {
    "__docId__": 115,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HalsteadArray",
    "memberof": "src/module/traits/HalsteadArray.js",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/traits/HalsteadArray.js",
    "importStyle": "HalsteadArray",
    "description": "Provides a wrapper around an array of Halstead property object hashes which should contain an\n`identifier` field and potentially a `filter` field.",
    "lineNumber": 7,
    "interface": false,
    "___id": "T000002R000117",
    "___s": true
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#constructor",
    "access": null,
    "description": "Initializes HalsteadArray by normalizing any Halstead properties converting them into TraitHalstead instances.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>The name of Halstead metric being stored.</p>\n",
        "descriptionRaw": "The name of Halstead metric being stored."
      },
      {
        "nullable": null,
        "types": [
          "Array<object",
          "string>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>An array of Halstead properties.</p>\n",
        "descriptionRaw": "An array of Halstead properties."
      }
    ],
    "generator": false,
    "___id": "T000002R000118",
    "___s": true
  },
  {
    "__docId__": 117,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#_data",
    "access": "private",
    "description": "<p>Stores an array of normalized Halstead property data to an object hash that has an <code>identifier</code> entry.</p>\n",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Array<TraitHalstead>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000119",
    "___s": true,
    "descriptionRaw": "Stores an array of normalized Halstead property data to an object hash that has an `identifier` entry."
  },
  {
    "__docId__": 118,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_metric",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#_metric",
    "access": "private",
    "description": "<p>Stores the Halstead metric type.</p>\n",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000120",
    "___s": true,
    "descriptionRaw": "Stores the Halstead metric type."
  },
  {
    "__docId__": 119,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forEach",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#forEach",
    "access": null,
    "description": "Allows custom processing of TraitHalstead data.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "<p>A custom method to process each TraitHalstead data.</p>\n",
        "descriptionRaw": "A custom method to process each TraitHalstead data."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "thisArg",
        "description": "<p>The this <code>this</code> scope to run callback with.</p>\n",
        "descriptionRaw": "The this `this` scope to run callback with."
      }
    ],
    "generator": false,
    "___id": "T000002R000121",
    "___s": true
  },
  {
    "__docId__": 120,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#get",
    "access": null,
    "description": "Returns a TraitHalstead entry at the given index.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TraitHalstead}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "<p>Index to access.</p>\n",
        "descriptionRaw": "Index to access."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TraitHalstead"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000122",
    "___s": true
  },
  {
    "__docId__": 121,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#length",
    "access": null,
    "description": "Returns the length of wrapped TraitHalstead data.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000123",
    "___s": true
  },
  {
    "__docId__": 122,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "metric",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#metric",
    "access": null,
    "description": "Returns the associated metric type.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000124",
    "___s": true
  },
  {
    "__docId__": 123,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#type",
    "access": null,
    "description": "Returns the typeof data being wrapped.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000125",
    "___s": true
  },
  {
    "__docId__": 124,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "valueOf",
    "memberof": "src/module/traits/HalsteadArray.js~HalsteadArray",
    "longname": "src/module/traits/HalsteadArray.js~HalsteadArray#valueOf",
    "access": null,
    "description": "Returns an array of evaluated TraitHalstead data as the value of the `identifier` field of the wrapped data.\nAdditionally the TraitHalstead filter function is invoked with the given parameters removing any values that\nfail the filter test.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<string>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "<p>Provides parameters which are forwarded onto any data stored as a function. Normally\n                     <code>params</code> should be the <code>current AST node, parent AST node, ... optional data</code>.</p>\n",
        "descriptionRaw": "Provides parameters which are forwarded onto any data stored as a function. Normally\n                     `params` should be the `current AST node, parent AST node, ... optional data`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000126",
    "___s": true
  },
  {
    "__docId__": 125,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/traits/Trait.js",
    "memberof": null,
    "longname": "src/module/traits/Trait.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides a wrapper around a data field which may be an array, function or other primitive value.\n */\nexport default class Trait\n{\n   /**\n    * Initializes trait data.\n    *\n    * @param {string}   metric - The name of Halstead metric being stored.\n    * @param {*}        data - Data to wrap.\n    */\n   constructor(metric, data)\n   {\n      /* istanbul ignore if */\n      if (typeof metric !== 'string') { throw new TypeError('ctor error: metric is not a `string`.'); }\n\n      /**\n       * Stores the data to wrap.\n       * @type {*}\n       * @private\n       */\n      this._data = data;\n\n      /**\n       * Stores the Trait metric type.\n       * @type {string}\n       * @private\n       */\n      this._metric = metric;\n   }\n\n   /**\n    * Returns the associated metric type.\n    *\n    * @returns {string}\n    */\n   get metric() { return this._metric; }\n\n   /**\n    * Returns the typeof data being wrapped.\n    *\n    * @returns {string}\n    */\n   get type() { return typeof this._data; }\n\n   /**\n    * Returns the value of the given data. If the wrapped data is a function it is invoked with the given `params`\n    * otherwise the data is returned directly. If the wrapped data is an array a mapped version is returned\n    * with each entry that is a function being invoked with the given `params`.\n    *\n    * @param {*}  params - Provides parameters which are forwarded onto any data stored as a function. Normally\n    *                      `params` should be the `current AST node, parent AST node, ... optional data`.\n    *\n    * @returns {*}\n    */\n   valueOf(...params)\n   {\n      if (Array.isArray(this._data))\n      {\n         return this._data.map((entry) => { return typeof entry === 'function' ? entry(...params) : entry; });\n      }\n\n      return typeof this._data === 'function' ? this._data(...params) : this._data;\n   }\n}\n",
    "___id": "T000002R000127",
    "___s": true
  },
  {
    "__docId__": 126,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Trait",
    "memberof": "src/module/traits/Trait.js",
    "longname": "src/module/traits/Trait.js~Trait",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/traits/Trait.js",
    "importStyle": "Trait",
    "description": "Provides a wrapper around a data field which may be an array, function or other primitive value.",
    "lineNumber": 4,
    "interface": false,
    "___id": "T000002R000128",
    "___s": true
  },
  {
    "__docId__": 127,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/traits/Trait.js~Trait",
    "longname": "src/module/traits/Trait.js~Trait#constructor",
    "access": null,
    "description": "Initializes trait data.",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>The name of Halstead metric being stored.</p>\n",
        "descriptionRaw": "The name of Halstead metric being stored."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>Data to wrap.</p>\n",
        "descriptionRaw": "Data to wrap."
      }
    ],
    "generator": false,
    "___id": "T000002R000129",
    "___s": true
  },
  {
    "__docId__": 128,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "src/module/traits/Trait.js~Trait",
    "longname": "src/module/traits/Trait.js~Trait#_data",
    "access": "private",
    "description": "<p>Stores the data to wrap.</p>\n",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000130",
    "___s": true,
    "descriptionRaw": "Stores the data to wrap."
  },
  {
    "__docId__": 129,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_metric",
    "memberof": "src/module/traits/Trait.js~Trait",
    "longname": "src/module/traits/Trait.js~Trait#_metric",
    "access": "private",
    "description": "<p>Stores the Trait metric type.</p>\n",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000131",
    "___s": true,
    "descriptionRaw": "Stores the Trait metric type."
  },
  {
    "__docId__": 130,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "metric",
    "memberof": "src/module/traits/Trait.js~Trait",
    "longname": "src/module/traits/Trait.js~Trait#metric",
    "access": null,
    "description": "Returns the associated metric type.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000132",
    "___s": true
  },
  {
    "__docId__": 131,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/module/traits/Trait.js~Trait",
    "longname": "src/module/traits/Trait.js~Trait#type",
    "access": null,
    "description": "Returns the typeof data being wrapped.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000133",
    "___s": true
  },
  {
    "__docId__": 132,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "valueOf",
    "memberof": "src/module/traits/Trait.js~Trait",
    "longname": "src/module/traits/Trait.js~Trait#valueOf",
    "access": null,
    "description": "Returns the value of the given data. If the wrapped data is a function it is invoked with the given `params`\notherwise the data is returned directly. If the wrapped data is an array a mapped version is returned\nwith each entry that is a function being invoked with the given `params`.",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "<p>Provides parameters which are forwarded onto any data stored as a function. Normally\n                     <code>params</code> should be the <code>current AST node, parent AST node, ... optional data</code>.</p>\n",
        "descriptionRaw": "Provides parameters which are forwarded onto any data stored as a function. Normally\n                     `params` should be the `current AST node, parent AST node, ... optional data`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000134",
    "___s": true
  },
  {
    "__docId__": 133,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/traits/TraitHalstead.js",
    "memberof": null,
    "longname": "src/module/traits/TraitHalstead.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides a wrapper around a data object hash which should contain an `identifier` field and potentially a `filter`\n * field which is a function. The identifier can be a function or string or an array of functions / strings.\n */\nexport default class TraitHalstead\n{\n   /**\n    * Initializes the Halstead trait.\n    *\n    * @param {string}   metric - The name of Halstead metric being stored.\n    * @param {object}   data - The data field to be wrapped.\n    */\n   constructor(metric, data)\n   {\n      /* istanbul ignore if */\n      if (typeof metric !== 'string') { throw new TypeError('ctor error: metric is not a `string`.'); }\n\n      /* istanbul ignore if */\n      if (typeof data !== 'object') { throw new TypeError('ctor error: data is not an `object`.'); }\n\n      /* istanbul ignore if */\n      if (Array.isArray(data.identifier))\n      {\n         data.identifier.forEach((element, index) =>\n         {\n            if (element !== 'function' && typeof element !== 'string')\n            {\n               throw new TypeError(\n                `ctor error: data.identifier array is not a 'function' or 'string' at index: ${index}.`);\n            }\n         });\n      }\n      else\n      {\n         /* istanbul ignore if */\n         if (typeof data.identifier !== 'function' && typeof data.identifier !== 'string')\n         {\n            throw new TypeError('ctor error: data.identifier is not a `function` or `string`.');\n         }\n      }\n\n      /* istanbul ignore if */\n      if (typeof data.filter !== 'undefined' && typeof data.filter !== 'function')\n      {\n         throw new TypeError('ctor error: data.filter is not a `function`.');\n      }\n\n      /**\n       * Stores the data to wrap.\n       * @type {*}\n       * @private\n       */\n      this._data = data;\n\n      /**\n       * Stores the Halstead metric type.\n       * @type {string}\n       * @private\n       */\n      this._metric = metric;\n   }\n\n   /**\n    * Returns the value of the `filter` field of the wrapped data. If the wrapped `filter` field is a function it\n    * is invoked with the given `params` otherwise the data is returned directly. If `filter` is not defined then\n    * `true` is returned.\n    *\n    * @param {*}  params - Provides parameters which are forwarded onto any data stored as a function. Normally\n    *                      `params` should be the `current AST node, parent AST node, ... optional data`.\n    *\n    * @returns {boolean}\n    */\n   filter(...params)\n   {\n      return typeof this._data.filter === 'function' ? this._data.filter(...params) : true;\n   }\n\n   /**\n    * Returns the associated metric type.\n    *\n    * @returns {string}\n    */\n   get metric() { return this._metric; }\n\n   /**\n    * Returns the typeof data being wrapped.\n    *\n    * @returns {string}\n    */\n   get type() { return typeof this._data; }\n\n   /**\n    * Returns the value of the `identifier` field of the wrapped data. If the wrapped `identifier` field is a function\n    * it is invoked with the given `params` otherwise the data is returned directly.\n    *\n    * @param {*}  params - Provides parameters which are forwarded onto any data stored as a function.\n    *\n    * @returns {*|Array<*>}\n    */\n   valueOf(...params)\n   {\n      if (Array.isArray(this._data.identifier))\n      {\n         return this._data.identifier.map((entry) =>\n         {\n            return typeof entry === 'function' ? entry(...params) : entry;\n         });\n      }\n\n      return typeof this._data.identifier === 'function' ? this._data.identifier(...params) : this._data.identifier;\n   }\n}\n",
    "___id": "T000002R000135",
    "___s": true
  },
  {
    "__docId__": 134,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TraitHalstead",
    "memberof": "src/module/traits/TraitHalstead.js",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/traits/TraitHalstead.js",
    "importStyle": "TraitHalstead",
    "description": "Provides a wrapper around a data object hash which should contain an `identifier` field and potentially a `filter`\nfield which is a function. The identifier can be a function or string or an array of functions / strings.",
    "lineNumber": 5,
    "interface": false,
    "___id": "T000002R000136",
    "___s": true
  },
  {
    "__docId__": 135,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead#constructor",
    "access": null,
    "description": "Initializes the Halstead trait.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "<p>The name of Halstead metric being stored.</p>\n",
        "descriptionRaw": "The name of Halstead metric being stored."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>The data field to be wrapped.</p>\n",
        "descriptionRaw": "The data field to be wrapped."
      }
    ],
    "generator": false,
    "___id": "T000002R000137",
    "___s": true
  },
  {
    "__docId__": 136,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead#_data",
    "access": "private",
    "description": "<p>Stores the data to wrap.</p>\n",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000138",
    "___s": true,
    "descriptionRaw": "Stores the data to wrap."
  },
  {
    "__docId__": 137,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_metric",
    "memberof": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead#_metric",
    "access": "private",
    "description": "<p>Stores the Halstead metric type.</p>\n",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000139",
    "___s": true,
    "descriptionRaw": "Stores the Halstead metric type."
  },
  {
    "__docId__": 138,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "filter",
    "memberof": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead#filter",
    "access": null,
    "description": "Returns the value of the `filter` field of the wrapped data. If the wrapped `filter` field is a function it\nis invoked with the given `params` otherwise the data is returned directly. If `filter` is not defined then\n`true` is returned.",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "<p>Provides parameters which are forwarded onto any data stored as a function. Normally\n                     <code>params</code> should be the <code>current AST node, parent AST node, ... optional data</code>.</p>\n",
        "descriptionRaw": "Provides parameters which are forwarded onto any data stored as a function. Normally\n                     `params` should be the `current AST node, parent AST node, ... optional data`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000140",
    "___s": true
  },
  {
    "__docId__": 139,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "metric",
    "memberof": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead#metric",
    "access": null,
    "description": "Returns the associated metric type.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000141",
    "___s": true
  },
  {
    "__docId__": 140,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead#type",
    "access": null,
    "description": "Returns the typeof data being wrapped.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false,
    "___id": "T000002R000142",
    "___s": true
  },
  {
    "__docId__": 141,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "valueOf",
    "memberof": "src/module/traits/TraitHalstead.js~TraitHalstead",
    "longname": "src/module/traits/TraitHalstead.js~TraitHalstead#valueOf",
    "access": null,
    "description": "Returns the value of the `identifier` field of the wrapped data. If the wrapped `identifier` field is a function\nit is invoked with the given `params` otherwise the data is returned directly.",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*|Array<*>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "<p>Provides parameters which are forwarded onto any data stored as a function.</p>\n",
        "descriptionRaw": "Provides parameters which are forwarded onto any data stored as a function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "Array<*>"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000143",
    "___s": true
  },
  {
    "__docId__": 142,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/traits/actualize.js",
    "memberof": null,
    "longname": "src/module/traits/actualize.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import HalsteadArray from './HalsteadArray';\nimport Trait         from './Trait';\n\nimport safeArray     from './safeArray';\n\n/**\n * Provides a helper method to format core traits for escomplex processing.\n *\n * @param {function|number}         lloc - Logical lines of code\n * @param {function|number}         cyclomatic - The number of linearly independent paths through source code.\n * @param {function|string|Array}   operators - An operator carries out an action.\n * @param {function|string|Array}   operands - An operand participates in such an action (operator).\n * @param {function|string|Array}   ignoreKeys - Provides a list of AST node children keys to skip traversal.\n * @param {function|string}         newScope - Creates a new `class` or `method` scope for report generation.\n * @param {function|object|Array}   dependencies - An import / require dependency.\n *\n * @returns {{lloc: Trait, cyclomatic: Trait, operators: HalsteadArray, operands: HalsteadArray, ignoreKeys: Trait, newScope: Trait, dependencies: Trait}}\n */\nexport default function(lloc = 0, cyclomatic = 0, operators = undefined, operands = undefined,\n ignoreKeys = undefined, newScope = undefined, dependencies = undefined)\n{\n   return {\n      lloc: new Trait('lloc', lloc),\n      cyclomatic: new Trait('cyclomatic', cyclomatic),\n      operators: new HalsteadArray('operators', safeArray(operators)),\n      operands: new HalsteadArray('operands', safeArray(operands)),\n      ignoreKeys: new Trait('ignoreKeys', safeArray(ignoreKeys)),\n      newScope: new Trait('newScope', newScope),\n      dependencies: new Trait('dependencies', dependencies)\n   };\n}\n",
    "___id": "T000002R000144",
    "___s": true
  },
  {
    "__docId__": 143,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "actualize",
    "memberof": "src/module/traits/actualize.js",
    "longname": "src/module/traits/actualize.js~actualize",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/traits/actualize.js",
    "importStyle": "actualize",
    "description": "Provides a helper method to format core traits for escomplex processing.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{lloc: Trait, cyclomatic: Trait, operators: HalsteadArray, operands: HalsteadArray, ignoreKeys: Trait, newScope: Trait, dependencies: Trait}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lloc",
        "description": "<p>Logical lines of code</p>\n",
        "descriptionRaw": "Logical lines of code"
      },
      {
        "nullable": null,
        "types": [
          "function",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cyclomatic",
        "description": "<p>The number of linearly independent paths through source code.</p>\n",
        "descriptionRaw": "The number of linearly independent paths through source code."
      },
      {
        "nullable": null,
        "types": [
          "function",
          "string",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "operators",
        "description": "<p>An operator carries out an action.</p>\n",
        "descriptionRaw": "An operator carries out an action."
      },
      {
        "nullable": null,
        "types": [
          "function",
          "string",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "operands",
        "description": "<p>An operand participates in such an action (operator).</p>\n",
        "descriptionRaw": "An operand participates in such an action (operator)."
      },
      {
        "nullable": null,
        "types": [
          "function",
          "string",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "ignoreKeys",
        "description": "<p>Provides a list of AST node children keys to skip traversal.</p>\n",
        "descriptionRaw": "Provides a list of AST node children keys to skip traversal."
      },
      {
        "nullable": null,
        "types": [
          "function",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newScope",
        "description": "<p>Creates a new <code>class</code> or <code>method</code> scope for report generation.</p>\n",
        "descriptionRaw": "Creates a new `class` or `method` scope for report generation."
      },
      {
        "nullable": null,
        "types": [
          "function",
          "object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "dependencies",
        "description": "<p>An import / require dependency.</p>\n",
        "descriptionRaw": "An import / require dependency."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{lloc: Trait, cyclomatic: Trait, operators: HalsteadArray, operands: HalsteadArray, ignoreKeys: Trait, newScope: Trait, dependencies: Trait}"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000145",
    "___s": true
  },
  {
    "__docId__": 144,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/traits/safeArray.js",
    "memberof": null,
    "longname": "src/module/traits/safeArray.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides safe array creation from a given input.\n *\n * @param {*}  value - A value to potentially convert into a safe array.\n *\n * @returns {Array}\n */\nexport default function(value)\n{\n   return typeof value === 'undefined' || value === null ? [] : Array.isArray(value) ? value : [value];\n}\n",
    "___id": "T000002R000146",
    "___s": true
  },
  {
    "__docId__": 145,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "safeArray",
    "memberof": "src/module/traits/safeArray.js",
    "longname": "src/module/traits/safeArray.js~safeArray",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/traits/safeArray.js",
    "importStyle": "safeArray",
    "description": "Provides safe array creation from a given input.",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "<p>A value to potentially convert into a safe array.</p>\n",
        "descriptionRaw": "A value to potentially convert into a safe array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000147",
    "___s": true
  },
  {
    "__docId__": 146,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/module/traits/safeName.js",
    "memberof": null,
    "longname": "src/module/traits/safeName.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides a utility method that defers to `object.name` if it exists or fallback to `defaultName` or `anonymous`.\n *\n * @param {object}   object - The target object to provide safe name coverage.\n * @param {string}   defaultName - A default name to fallback to if `object.name` is missing.\n *\n * @returns {string}\n */\nexport default function(object, defaultName = '')\n{\n   if (object !== null && typeof object === 'object' && typeof object.name === 'string' && object.name !== '')\n   {\n      return object.name;\n   }\n\n   if (typeof defaultName === 'string' && defaultName !== '') { return defaultName; }\n\n   return '<anonymous>';\n}\n",
    "___id": "T000002R000148",
    "___s": true
  },
  {
    "__docId__": 147,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "safeName",
    "memberof": "src/module/traits/safeName.js",
    "longname": "src/module/traits/safeName.js~safeName",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/module/traits/safeName.js",
    "importStyle": "safeName",
    "description": "Provides a utility method that defers to `object.name` if it exists or fallback to `defaultName` or `anonymous`.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>The target object to provide safe name coverage.</p>\n",
        "descriptionRaw": "The target object to provide safe name coverage."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultName",
        "description": "<p>A default name to fallback to if <code>object.name</code> is missing.</p>\n",
        "descriptionRaw": "A default name to fallback to if `object.name` is missing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000149",
    "___s": true
  },
  {
    "__docId__": 148,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/project/result/ProjectResult.js",
    "memberof": null,
    "longname": "src/project/result/ProjectResult.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import TransformFormat  from  '../../transform/TransformFormat';\n\nimport ModuleAverage    from  '../../module/report/averages/ModuleAverage';\nimport ModuleReport     from  '../../module/report/ModuleReport';\nimport MathUtil         from  '../../utils/MathUtil';\nimport StringUtil       from  '../../utils/StringUtil';\n\n/**\n * Provides the default project report object which stores data pertaining to all modules / files contained.\n *\n * All module / file reports are stored in the `reports` member variable as ModuleReports.\n *\n * Various helper methods found in ModuleReport and AbstractReport help increment associated data during collection.\n */\nexport default class ProjectResult\n{\n   /**\n    * Initializes ProjectReport with default values.\n    *\n    * @param {Array<ModuleReport>}  moduleReports - An array of ModuleReports for each module / file processed.\n    *\n    * @param {object}               settings - An object hash of the settings used in generating this report via\n    *                                          ESComplexProject.\n    */\n   constructor(moduleReports = void 0, settings = { serializeReports: true })\n   {\n      /**\n       * Stores the settings used to generate the project report.\n       * @type {object}\n       */\n      this.settings = typeof settings === 'object' ? settings : { serializeReports: true };\n\n      /**\n       * Stores a compacted form of the adjacency matrix. Each row index corresponds to the same report index.\n       * Each row entry corresponds to a report index. These relationships dictate the dependencies between all\n       * report ModuleReports given the source paths.\n       *\n       * @type {Array<Array<number>>}\n       */\n      this.adjacencyList = undefined;\n\n      /**\n       * Measures the average percentage of modules affected when one module / file in the project is changed.\n       * Lower is better.\n       * @type {number}\n       */\n      this.changeCost = 0;\n\n      /**\n       * Measures the percentage of modules that are widely depended on which also depend on other modules.\n       * Lower is better.\n       * @type {number}\n       */\n      this.coreSize = 0;\n\n      /**\n       * Measures the percentage of all possible internal dependencies that are actually realized in the project.\n       * Lower is better.\n       * @type {number}\n       */\n      this.firstOrderDensity = 0;\n\n      /**\n       * Stores the average module metric data.\n       * @type {ModuleAverage}\n       */\n      this.moduleAverage = new ModuleAverage();\n\n      /**\n       * Stores all ModuleReport data for the project sorted by the module / files `srcPath`.\n       * @type {Array<ModuleReport>}\n       */\n      this.reports = Array.isArray(moduleReports) ?\n       moduleReports.sort((lhs, rhs) => { return StringUtil.compare(lhs.srcPath, rhs.srcPath); }) : [];\n\n      /**\n       * Stores a compacted form of the visibility matrix. Each row index corresponds to the same report index.\n       * Each row entry corresponds to a report index. These relationships dictate the reverse visibility between all\n       * report ModuleReports which may indirectly impact the given module / file.\n       *\n       * @type {Array<Array<number>>}\n       */\n      this.visibilityList = undefined;\n   }\n\n   /**\n    * Finalizes the ProjectResult. If `settings.serializeReports` is false output just `filePath`, `srcPath` &\n    * `srcPathAlias` entries of reports.\n    *\n    * @param {object}      options - (Optional) Allows overriding of ModuleReport serialization.\n    * @property {boolean}  serializeAverages - If serializeReports is false and serializeAverages is true then module\n    *                                          averages will also be added to a reduced project result; default: false.\n    * @property {boolean}  serializeReports - Allows overriding of ModuleReport serialization; default: true.\n    *\n    * @returns {ProjectResult}\n    */\n   finalize(options = {})\n   {\n      if (typeof options !== 'object') { throw new TypeError(`finalize error: 'options' is not an 'object'.`); }\n\n      let serializeReports = this.getSetting('serializeReports', true);\n      let serializeAverages = this.getSetting('serializeAverages', false);\n\n      // Allow an override opportunity.\n      if (typeof options.serializeAverages === 'boolean') { serializeAverages = options.serializeAverages; }\n      if (typeof options.serializeReports === 'boolean') { serializeReports = options.serializeReports; }\n\n      if (serializeReports)\n      {\n         this.reports.forEach((report) => { report.finalize(); });\n      }\n      else\n      {\n         this.reports = this.reports.map((report) =>\n         {\n            const modReport = { filePath: report.filePath, srcPath: report.srcPath, srcPathAlias: report.srcPathAlias };\n\n            // Potentially add module averages\n            if (serializeAverages)\n            {\n               modReport.maintainability = report.maintainability;\n               modReport.methodAverage = report.methodAverage;\n            }\n\n            return modReport;\n         });\n      }\n\n      return MathUtil.toFixedTraverse(this);\n   }\n\n   /**\n    * Returns the supported format file extension types.\n    *\n    * @returns {string[]}\n    */\n   static getFormatFileExtensions()\n   {\n      return TransformFormat.getFileExtensions();\n   }\n\n   /**\n    * Returns the supported format names.\n    *\n    * @returns {string[]}\n    */\n   static getFormatNames()\n   {\n      return TransformFormat.getNames();\n   }\n\n   /**\n    * Returns the supported format types.\n    *\n    * @returns {string[]}\n    */\n   static getFormatTypes()\n   {\n      return TransformFormat.getTypes();\n   }\n\n   /**\n    * Returns the setting indexed by the given key.\n    *\n    * @param {string}   key - A key used to store the setting parameter.\n    * @param {*}        defaultValue - A default value to return if no setting for the given key is currently stored.\n    *\n    * @returns {*}\n    */\n   getSetting(key, defaultValue = undefined)\n   {\n      /* istanbul ignore if */\n      if (typeof key !== 'string' || key === '')\n      {\n         throw new TypeError(`getSetting error: 'key' is not a 'string' or is empty.`);\n      }\n\n      return typeof this.settings === 'object' && typeof this.settings[key] !== 'undefined' ? this.settings[key] :\n       defaultValue;\n   }\n\n   /**\n    * Deserializes a JSON object representing a ProjectResult.\n    *\n    * @param {object}   object - A JSON object of a ProjectResult that was previously serialized.\n    *\n    * @returns {ProjectResult}\n    */\n   static parse(object)\n   {\n      /* istanbul ignore if */\n      if (typeof object !== 'object') { throw new TypeError(`parse error: 'object' is not an 'object'.`); }\n\n      const result = Object.assign(new ProjectResult(), object);\n\n      if (result.reports.length > 0)\n      {\n         result.reports = result.reports.map((report) => { return ModuleReport.parse(report); });\n      }\n\n      return result;\n   }\n\n   /**\n    * Sets the setting indexed by the given key and returns true if successful.\n    *\n    * @param {string}   key - A key used to store the setting parameter.\n    * @param {*}        value - A value to set to `this.settings[key]`.\n    *\n    * @returns {boolean}\n    */\n   setSetting(key, value)\n   {\n      /* istanbul ignore if */\n      if (typeof key !== 'string' || key === '')\n      {\n         throw new TypeError(`setSetting error: 'key' is not a 'string' or is empty.`);\n      }\n\n      if (this.settings === 'object')\n      {\n         this.settings[key] = value;\n         return true;\n      }\n\n      return false;\n   }\n\n   /**\n    * Formats this ProjectResult given the type.\n    *\n    * @param {string}   name - The name of formatter to use.\n    *\n    * @param {object}   options - (Optional) One or more optional parameters to pass to the formatter.\n    *\n    * @returns {string}\n    */\n   toFormat(name, options = undefined)\n   {\n      return TransformFormat.format(this, name, options);\n   }\n}\n",
    "___id": "T000002R000150",
    "___s": true
  },
  {
    "__docId__": 149,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ProjectResult",
    "memberof": "src/project/result/ProjectResult.js",
    "longname": "src/project/result/ProjectResult.js~ProjectResult",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/project/result/ProjectResult.js",
    "importStyle": "ProjectResult",
    "description": "Provides the default project report object which stores data pertaining to all modules / files contained.\n\nAll module / file reports are stored in the `reports` member variable as ModuleReports.\n\nVarious helper methods found in ModuleReport and AbstractReport help increment associated data during collection.",
    "lineNumber": 15,
    "interface": false,
    "___id": "T000002R000151",
    "___s": true
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#constructor",
    "access": null,
    "description": "Initializes ProjectReport with default values.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ModuleReport>"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReports",
        "description": "<p>An array of ModuleReports for each module / file processed.</p>\n",
        "descriptionRaw": "An array of ModuleReports for each module / file processed."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "settings",
        "description": "<p>An object hash of the settings used in generating this report via\n                                         ESComplexProject.</p>\n",
        "descriptionRaw": "An object hash of the settings used in generating this report via\n                                         ESComplexProject."
      }
    ],
    "generator": false,
    "___id": "T000002R000152",
    "___s": true
  },
  {
    "__docId__": 151,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "settings",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#settings",
    "access": null,
    "description": "Stores the settings used to generate the project report.",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000153",
    "___s": true
  },
  {
    "__docId__": 152,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "adjacencyList",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#adjacencyList",
    "access": null,
    "description": "Stores a compacted form of the adjacency matrix. Each row index corresponds to the same report index.\nEach row entry corresponds to a report index. These relationships dictate the dependencies between all\nreport ModuleReports given the source paths.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<number>>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000154",
    "___s": true
  },
  {
    "__docId__": 153,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "changeCost",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#changeCost",
    "access": null,
    "description": "Measures the average percentage of modules affected when one module / file in the project is changed.\nLower is better.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000155",
    "___s": true
  },
  {
    "__docId__": 154,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "coreSize",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#coreSize",
    "access": null,
    "description": "Measures the percentage of modules that are widely depended on which also depend on other modules.\nLower is better.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000156",
    "___s": true
  },
  {
    "__docId__": 155,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "firstOrderDensity",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#firstOrderDensity",
    "access": null,
    "description": "Measures the percentage of all possible internal dependencies that are actually realized in the project.\nLower is better.",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000157",
    "___s": true
  },
  {
    "__docId__": 156,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "moduleAverage",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#moduleAverage",
    "access": null,
    "description": "Stores the average module metric data.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "ModuleAverage"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000158",
    "___s": true
  },
  {
    "__docId__": 157,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reports",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#reports",
    "access": null,
    "description": "Stores all ModuleReport data for the project sorted by the module / files `srcPath`.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Array<ModuleReport>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000159",
    "___s": true
  },
  {
    "__docId__": 158,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "visibilityList",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#visibilityList",
    "access": null,
    "description": "Stores a compacted form of the visibility matrix. Each row index corresponds to the same report index.\nEach row entry corresponds to a report index. These relationships dictate the reverse visibility between all\nreport ModuleReports which may indirectly impact the given module / file.",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<number>>"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000160",
    "___s": true
  },
  {
    "__docId__": 159,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "finalize",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#finalize",
    "access": null,
    "description": "Finalizes the ProjectResult. If `settings.serializeReports` is false output just `filePath`, `srcPath` &\n`srcPathAlias` entries of reports.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ProjectResult}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) Allows overriding of ModuleReport serialization.</p>\n",
        "descriptionRaw": "(Optional) Allows overriding of ModuleReport serialization."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "serializeAverages",
        "description": "<p>If serializeReports is false and serializeAverages is true then module\n                                         averages will also be added to a reduced project result; default: false.</p>\n",
        "descriptionRaw": "If serializeReports is false and serializeAverages is true then module\n                                         averages will also be added to a reduced project result; default: false."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "serializeReports",
        "description": "<p>Allows overriding of ModuleReport serialization; default: true.</p>\n",
        "descriptionRaw": "Allows overriding of ModuleReport serialization; default: true."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ProjectResult"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000161",
    "___s": true
  },
  {
    "__docId__": 160,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reports",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#reports",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000162",
    "___s": true
  },
  {
    "__docId__": 161,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getFormatFileExtensions",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult.getFormatFileExtensions",
    "access": null,
    "description": "Returns the supported format file extension types.",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000163",
    "___s": true
  },
  {
    "__docId__": 162,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getFormatNames",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult.getFormatNames",
    "access": null,
    "description": "Returns the supported format names.",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000164",
    "___s": true
  },
  {
    "__docId__": 163,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getFormatTypes",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult.getFormatTypes",
    "access": null,
    "description": "Returns the supported format types.",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000165",
    "___s": true
  },
  {
    "__docId__": 164,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSetting",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#getSetting",
    "access": null,
    "description": "Returns the setting indexed by the given key.",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "<p>A key used to store the setting parameter.</p>\n",
        "descriptionRaw": "A key used to store the setting parameter."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "<p>A default value to return if no setting for the given key is currently stored.</p>\n",
        "descriptionRaw": "A default value to return if no setting for the given key is currently stored."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000166",
    "___s": true
  },
  {
    "__docId__": 165,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult.parse",
    "access": null,
    "description": "Deserializes a JSON object representing a ProjectResult.",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ProjectResult}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>A JSON object of a ProjectResult that was previously serialized.</p>\n",
        "descriptionRaw": "A JSON object of a ProjectResult that was previously serialized."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ProjectResult"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000167",
    "___s": true
  },
  {
    "__docId__": 166,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setSetting",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#setSetting",
    "access": null,
    "description": "Sets the setting indexed by the given key and returns true if successful.",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "<p>A key used to store the setting parameter.</p>\n",
        "descriptionRaw": "A key used to store the setting parameter."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "<p>A value to set to <code>this.settings[key]</code>.</p>\n",
        "descriptionRaw": "A value to set to `this.settings[key]`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000168",
    "___s": true
  },
  {
    "__docId__": 167,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toFormat",
    "memberof": "src/project/result/ProjectResult.js~ProjectResult",
    "longname": "src/project/result/ProjectResult.js~ProjectResult#toFormat",
    "access": null,
    "description": "Formats this ProjectResult given the type.",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>The name of formatter to use.</p>\n",
        "descriptionRaw": "The name of formatter to use."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters to pass to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters to pass to the formatter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000169",
    "___s": true
  },
  {
    "__docId__": 168,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/TransformFormat.js",
    "memberof": null,
    "longname": "src/transform/TransformFormat.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ModuleReport              from '../module/report/ModuleReport';\nimport ProjectResult             from '../project/result/ProjectResult';\n\nimport FormatJSON                from './formats/json/FormatJSON';\nimport FormatJSONCheckstyle      from './formats/json/FormatJSONCheckstyle';\nimport FormatJSONMinimal         from './formats/json/FormatJSONMinimal';\nimport FormatJSONModules         from './formats/json/FormatJSONModules';\nimport FormatMarkdown            from './formats/markdown/FormatMarkdown';\nimport FormatMarkdownAdjacency   from './formats/markdown/FormatMarkdownAdjacency';\nimport FormatMarkdownMinimal     from './formats/markdown/FormatMarkdownMinimal';\nimport FormatMarkdownModules     from './formats/markdown/FormatMarkdownModules';\nimport FormatMarkdownVisibility  from './formats/markdown/FormatMarkdownVisibility';\nimport FormatText                from './formats/text/FormatText';\nimport FormatTextAdjacency       from './formats/text/FormatTextAdjacency';\nimport FormatTextMinimal         from './formats/text/FormatTextMinimal';\nimport FormatTextModules         from './formats/text/FormatTextModules';\nimport FormatTextVisibility      from './formats/text/FormatTextVisibility';\n\n/**\n * Stores all transform formats.\n * @type {Map<string>, object}\n * @ignore\n */\nconst s_FORMATTERS = new Map();\n\nexport default class TransformFormat\n{\n   /**\n    * Adds a formatter to the static Map by type: `format.type`.\n    *\n    * @param {object}   format - An instance of an object conforming to the module / project transform format API.\n    */\n   static addFormat(format)\n   {\n      if (typeof format !== 'object') { throw new TypeError(`addFormat error: 'format' is not an 'object'.`); }\n\n      if (typeof format.extension !== 'string')\n      {\n         throw new TypeError(`addFormat error: 'format.extension' is not a 'string'.`);\n      }\n\n      if (typeof format.name !== 'string')\n      {\n         throw new TypeError(`addFormat error: 'format.name' is not a 'string'.`);\n      }\n\n      if (typeof format.type !== 'string')\n      {\n         throw new TypeError(`addFormat error: 'format.type' is not a 'string'.`);\n      }\n\n      if (typeof format.formatReport !== 'function')\n      {\n         throw new TypeError(`addFormat error: 'format.formatReport' is not a 'function'.`);\n      }\n\n      if (typeof format.formatResult !== 'function')\n      {\n         throw new TypeError(`addFormat error: 'format.formatResult' is not a 'function'.`);\n      }\n\n      s_FORMATTERS.set(format.name, format);\n   }\n\n   /**\n    * Invokes the callback for each stored formatter.\n    *\n    * @param {function} callback - A callback function.\n    * @param {object}   thisArg - (Optional) this context.\n    */\n   static forEach(callback, thisArg)\n   {\n      s_FORMATTERS.forEach(callback, thisArg);\n   }\n\n   /**\n    * Provides a `forEach` variation that invokes the callback if the given extension matches that of a stored\n    * formatter.\n    *\n    * @param {string}   extension - A format extension.\n    * @param {function} callback - A callback function.\n    * @param {object}   thisArg - (Optional) this context.\n    */\n   static forEachExt(extension, callback, thisArg = undefined)\n   {\n      for (const format of s_FORMATTERS.values())\n      {\n         if (format.extension === extension) { callback.call(thisArg, format, format.name); }\n      }\n   }\n\n   /**\n    * Provides a `forEach` variation that invokes the callback if the given type matches that of a stored\n    * formatter.\n    *\n    * @param {string}   type - A format type.\n    * @param {function} callback - A callback function.\n    * @param {object}   thisArg - (Optional) this context.\n    */\n   static forEachType(type, callback, thisArg = undefined)\n   {\n      for (const format of s_FORMATTERS.values())\n      {\n         if (format.type === type) { callback.call(thisArg, format, format.name); }\n      }\n   }\n\n   /**\n    * Formats a given ModuleReport or ProjectResult via the formatter of the requested type.\n    *\n    * @param {ModuleReport|ProjectResult} resultOrReport - A ModuleReport or ProjectResult to format.\n    *\n    * @param {string}                     name - The name of formatter to invoke.\n    *\n    * @param {object}                     options - (Optional) One or more optional parameters to pass to the formatter.\n    *\n    * @returns {string}\n    */\n   static format(resultOrReport, name, options = undefined)\n   {\n      if (!(resultOrReport instanceof ModuleReport || resultOrReport instanceof ProjectResult))\n      {\n         throw new TypeError(`format error: 'resultOrReport' is not a 'ModuleReport' or a 'ProjectResult'.`);\n      }\n\n      const formatter = s_FORMATTERS.get(name);\n\n      if (typeof formatter === 'undefined')\n      {\n         throw new Error(`format error: unknown formatter name '${name}'.`);\n      }\n\n      if (resultOrReport instanceof ModuleReport)\n      {\n         return formatter.formatReport(resultOrReport, options);\n      }\n\n      if (resultOrReport instanceof ProjectResult)\n      {\n         return formatter.formatResult(resultOrReport, options);\n      }\n   }\n\n   /**\n    * Returns the supported format file extension types.\n    *\n    * @returns {string[]}\n    */\n   static getFileExtensions()\n   {\n      return Array.from(s_FORMATTERS.values()).map((format) => { return format.extension; });\n   }\n\n   /**\n    * Returns the format names supported.\n    *\n    * @returns {string[]}\n    */\n   static getNames()\n   {\n      return Array.from(s_FORMATTERS.keys());\n   }\n\n   /**\n    * Returns the format types supported.\n    *\n    * @returns {string[]}\n    */\n   static getTypes()\n   {\n      return Array.from(s_FORMATTERS.values()).map((format) => { return format.type; });\n   }\n\n   /**\n    * Returns whether a given formatter by name is available.\n    *\n    * @param {string}   name - The name of the formatter: `format.name`.\n    *\n    * @returns {boolean}\n    */\n   static isFormat(name)\n   {\n      return s_FORMATTERS.has(name);\n   }\n\n   /**\n    * Removes a formatter from the static Map by name.\n    *\n    * @param {string}   name - The name of the formatter: `format.name`.\n    */\n   static removeFormat(name)\n   {\n      s_FORMATTERS.delete(name);\n   }\n}\n\n/**\n * Load all integrated format transforms.\n */\nTransformFormat.addFormat(new FormatJSON());\nTransformFormat.addFormat(new FormatJSONCheckstyle());\nTransformFormat.addFormat(new FormatJSONMinimal());\nTransformFormat.addFormat(new FormatJSONModules());\nTransformFormat.addFormat(new FormatMarkdown());\nTransformFormat.addFormat(new FormatMarkdownAdjacency());\nTransformFormat.addFormat(new FormatMarkdownMinimal());\nTransformFormat.addFormat(new FormatMarkdownModules());\nTransformFormat.addFormat(new FormatMarkdownVisibility());\nTransformFormat.addFormat(new FormatText());\nTransformFormat.addFormat(new FormatTextAdjacency());\nTransformFormat.addFormat(new FormatTextMinimal());\nTransformFormat.addFormat(new FormatTextModules());\nTransformFormat.addFormat(new FormatTextVisibility());\n",
    "___id": "T000002R000170",
    "___s": true
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_FORMATTERS",
    "memberof": "src/transform/TransformFormat.js",
    "longname": "src/transform/TransformFormat.js~s_FORMATTERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/TransformFormat.js",
    "importStyle": null,
    "description": "Stores all transform formats.",
    "lineNumber": 24,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "Map<string>, object"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000171",
    "___s": true
  },
  {
    "__docId__": 170,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TransformFormat",
    "memberof": "src/transform/TransformFormat.js",
    "longname": "src/transform/TransformFormat.js~TransformFormat",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/TransformFormat.js",
    "importStyle": "TransformFormat",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "interface": false,
    "___id": "T000002R000172",
    "___s": true
  },
  {
    "__docId__": 171,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "addFormat",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.addFormat",
    "access": null,
    "description": "Adds a formatter to the static Map by type: `format.type`.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "format",
        "description": "<p>An instance of an object conforming to the module / project transform format API.</p>\n",
        "descriptionRaw": "An instance of an object conforming to the module / project transform format API."
      }
    ],
    "generator": false,
    "___id": "T000002R000173",
    "___s": true
  },
  {
    "__docId__": 172,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "forEach",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.forEach",
    "access": null,
    "description": "Invokes the callback for each stored formatter.",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "<p>A callback function.</p>\n",
        "descriptionRaw": "A callback function."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "thisArg",
        "description": "<p>(Optional) this context.</p>\n",
        "descriptionRaw": "(Optional) this context."
      }
    ],
    "generator": false,
    "___id": "T000002R000174",
    "___s": true
  },
  {
    "__docId__": 173,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "forEachExt",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.forEachExt",
    "access": null,
    "description": "Provides a `forEach` variation that invokes the callback if the given extension matches that of a stored\nformatter.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "extension",
        "description": "<p>A format extension.</p>\n",
        "descriptionRaw": "A format extension."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "<p>A callback function.</p>\n",
        "descriptionRaw": "A callback function."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "thisArg",
        "description": "<p>(Optional) this context.</p>\n",
        "descriptionRaw": "(Optional) this context."
      }
    ],
    "generator": false,
    "___id": "T000002R000175",
    "___s": true
  },
  {
    "__docId__": 174,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "forEachType",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.forEachType",
    "access": null,
    "description": "Provides a `forEach` variation that invokes the callback if the given type matches that of a stored\nformatter.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "<p>A format type.</p>\n",
        "descriptionRaw": "A format type."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "<p>A callback function.</p>\n",
        "descriptionRaw": "A callback function."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "thisArg",
        "description": "<p>(Optional) this context.</p>\n",
        "descriptionRaw": "(Optional) this context."
      }
    ],
    "generator": false,
    "___id": "T000002R000176",
    "___s": true
  },
  {
    "__docId__": 175,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "format",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.format",
    "access": null,
    "description": "Formats a given ModuleReport or ProjectResult via the formatter of the requested type.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport",
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "resultOrReport",
        "description": "<p>A ModuleReport or ProjectResult to format.</p>\n",
        "descriptionRaw": "A ModuleReport or ProjectResult to format."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>The name of formatter to invoke.</p>\n",
        "descriptionRaw": "The name of formatter to invoke."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters to pass to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters to pass to the formatter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000177",
    "___s": true
  },
  {
    "__docId__": 176,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getFileExtensions",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.getFileExtensions",
    "access": null,
    "description": "Returns the supported format file extension types.",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000178",
    "___s": true
  },
  {
    "__docId__": 177,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getNames",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.getNames",
    "access": null,
    "description": "Returns the format names supported.",
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000179",
    "___s": true
  },
  {
    "__docId__": 178,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getTypes",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.getTypes",
    "access": null,
    "description": "Returns the format types supported.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000180",
    "___s": true
  },
  {
    "__docId__": 179,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "isFormat",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.isFormat",
    "access": null,
    "description": "Returns whether a given formatter by name is available.",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>The name of the formatter: <code>format.name</code>.</p>\n",
        "descriptionRaw": "The name of the formatter: `format.name`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000181",
    "___s": true
  },
  {
    "__docId__": 180,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "removeFormat",
    "memberof": "src/transform/TransformFormat.js~TransformFormat",
    "longname": "src/transform/TransformFormat.js~TransformFormat.removeFormat",
    "access": null,
    "description": "Removes a formatter from the static Map by name.",
    "lineNumber": 191,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "<p>The name of the formatter: <code>format.name</code>.</p>\n",
        "descriptionRaw": "The name of the formatter: `format.name`."
      }
    ],
    "generator": false,
    "___id": "T000002R000182",
    "___s": true
  },
  {
    "__docId__": 181,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/json/FormatJSON.js",
    "memberof": null,
    "longname": "src/transform/formats/json/FormatJSON.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to a JSON string.\n */\nexport default class FormatJSON\n{\n   /**\n    * Formats a module report as a JSON string.\n    *\n    * @param {ModuleReport}   report - A module report.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {number}      spacing - (Optional) An integer defining the JSON output spacing.\n    *\n    * @returns {string}\n    */\n   formatReport(report, options = {})\n   {\n      return typeof options === 'object' && Number.isInteger(options.spacing) ?\n       JSON.stringify(report, undefined, options.spacing) : JSON.stringify(report);\n   }\n\n   /**\n    * Formats a project result as a JSON string.\n    *\n    * @param {ProjectResult}  result - A project result.\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {number}      spacing - (Optional) An integer defining the JSON output spacing.\n    *\n    * @returns {string}\n    */\n   formatResult(result, options = {})\n   {\n      return typeof options === 'object' && Number.isInteger(options.spacing) ?\n       JSON.stringify(result, undefined, options.spacing) : JSON.stringify(result);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'json';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'json';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'full';\n   }\n}",
    "___id": "T000002R000183",
    "___s": true
  },
  {
    "__docId__": 182,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatJSON",
    "memberof": "src/transform/formats/json/FormatJSON.js",
    "longname": "src/transform/formats/json/FormatJSON.js~FormatJSON",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/json/FormatJSON.js",
    "importStyle": "FormatJSON",
    "description": "Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to a JSON string.",
    "lineNumber": 4,
    "interface": false,
    "___id": "T000002R000184",
    "___s": true
  },
  {
    "__docId__": 183,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatReport",
    "memberof": "src/transform/formats/json/FormatJSON.js~FormatJSON",
    "longname": "src/transform/formats/json/FormatJSON.js~FormatJSON#formatReport",
    "access": null,
    "description": "Formats a module report as a JSON string.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "spacing",
        "description": "<p>(Optional) An integer defining the JSON output spacing.</p>\n",
        "descriptionRaw": "(Optional) An integer defining the JSON output spacing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000185",
    "___s": true
  },
  {
    "__docId__": 184,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatResult",
    "memberof": "src/transform/formats/json/FormatJSON.js~FormatJSON",
    "longname": "src/transform/formats/json/FormatJSON.js~FormatJSON#formatResult",
    "access": null,
    "description": "Formats a project result as a JSON string.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "spacing",
        "description": "<p>(Optional) An integer defining the JSON output spacing.</p>\n",
        "descriptionRaw": "(Optional) An integer defining the JSON output spacing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000186",
    "___s": true
  },
  {
    "__docId__": 185,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/json/FormatJSON.js~FormatJSON",
    "longname": "src/transform/formats/json/FormatJSON.js~FormatJSON#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000187",
    "___s": true
  },
  {
    "__docId__": 186,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/json/FormatJSON.js~FormatJSON",
    "longname": "src/transform/formats/json/FormatJSON.js~FormatJSON#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000188",
    "___s": true
  },
  {
    "__docId__": 187,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/json/FormatJSON.js~FormatJSON",
    "longname": "src/transform/formats/json/FormatJSON.js~FormatJSON#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000189",
    "___s": true
  },
  {
    "__docId__": 188,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/json/FormatJSONCheckstyle.js",
    "memberof": null,
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ObjectUtil from '../../../utils/ObjectUtil';\n\n/**\n * Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to JSON that\n * corresponds to the XML checkstyle format.\n *\n * The checkstyle XML format outputs error elements for each file / module. This format depends on the output of\n * `FormatJSONCheckstyle`. The implementation below outputs a `file` array that contains an `error` array entries.\n *\n * There is a corresponding `FormatXMLCheckstyle` format loaded when `escomplex-plugin-formats-xml` during plugin\n * loading which converts the JSON output of this format transform to the official XML checkstyle format.\n *\n * @see http://checkstyle.sourceforge.net/\n * @see https://github.com/checkstyle/checkstyle\n * @see https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java\n */\nexport default class FormatJSONCheckstyle\n{\n   constructor(thresholds = s_DEFAULT_THRESHOLDS)\n   {\n      this._thresholds = thresholds;\n   }\n\n   /**\n    * Formats a module report as JSON / checkstyle.\n    *\n    * @param {ModuleReport}   report - A module report.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {{info: number, warning: number, error: number}} cyclomatic - A hash of name / number thresholds.\n    * @property {{info: number, warning: number, error: number}} halstead - A hash of name / number thresholds.\n    *\n    * @returns {string}\n    */\n   formatReport(report, options = {})\n   {\n      let localOptions = Object.assign({}, this._thresholds);\n      localOptions = Object.assign(localOptions, options);\n\n      const output = { version: '7.0', file: [] };\n\n      output.file.push(this._formatModule(report, true, localOptions));\n\n      return typeof localOptions === 'object' && Number.isInteger(localOptions.spacing) ?\n       JSON.stringify(output, undefined, options.spacing) : JSON.stringify(output);\n   }\n\n   /**\n    * Formats a project result as JSON / checkstyle.\n    *\n    * @param {ProjectResult}  result - A project result.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {{info: number, warning: number, error: number}} cyclomatic - A hash of name / number thresholds.\n    * @property {{info: number, warning: number, error: number}} halstead - A hash of name / number thresholds.\n    *\n    * @returns {string}\n    */\n   formatResult(result, options = {})\n   {\n      let localOptions = Object.assign({}, this._thresholds);\n      localOptions = Object.assign(localOptions, options);\n\n      const reportsAvailable = result.getSetting('serializeReports', false);\n\n      const output = { version: '7.0', file: [] };\n\n      result.reports.forEach((report) =>\n      {\n         output.file.push(this._formatModule(report, reportsAvailable, localOptions));\n      });\n\n      return typeof localOptions === 'object' && Number.isInteger(localOptions.spacing) ?\n       JSON.stringify(output, undefined, localOptions.spacing) : JSON.stringify(output);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'json';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'json-checkstyle';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'checkstyle';\n   }\n\n   /**\n    * Formats a module report.\n    *\n    * @param {ModuleReport}   report - A module report.\n    *\n    * @param {boolean}        reportsAvailable - Indicates that the report metric data is available.\n    *\n    * @param {object}         options - (Optional) One or more optional entries defining threshold parameters.\n    *\n    * @returns {object}\n    */\n   _formatModule(report, reportsAvailable, options)\n   {\n      const output = {};\n\n      output.name = report.filePath ? report.filePath : '<unknown>';\n\n      output.error = [];\n\n      if (reportsAvailable)\n      {\n         if (typeof options.moduleReport === 'object')\n         {\n            this._parseErrors(`Module: ${output.name}`, report, options.moduleReport, output.error);\n         }\n\n         for (let cntr = 0; cntr < report.methods.length; cntr++)\n         {\n            if (typeof options.methodReport === 'object')\n            {\n               this._parseErrors('Module method: ', report.methods[cntr], options.methodReport, output.error);\n            }\n         }\n\n         for (let cntr = 0; cntr < report.classes.length; cntr++)\n         {\n            const classReport = report.classes[cntr];\n\n            if (typeof options.classReport === 'object')\n            {\n               this._parseErrors(`Class: `, classReport, options.classReport, output.error);\n            }\n\n            for (let cntr2 = 0; cntr2 < classReport.methods.length; cntr2++)\n            {\n               if (typeof options.methodReport === 'object')\n               {\n                  this._parseErrors(`Class (${classReport.name}) / method: `, classReport.methods[cntr2],\n                   options.methodReport, output.error);\n               }\n            }\n         }\n      }\n\n      return output;\n   }\n\n   _parseErrors(sourceObjectType, sourceObject, options, errors)\n   {\n      for (const key in options)\n      {\n         if (!options.hasOwnProperty(key)) { continue; }\n\n         const sourceObjectValue = ObjectUtil.safeAccess(sourceObject, key);\n\n         if (typeof sourceObjectValue === 'number')\n         {\n            let severity = undefined;\n            let mapEntryValue;\n            let testSign;\n\n            const map = options[key];\n\n            for (const entryKey in map)\n            {\n               if (!map.hasOwnProperty(entryKey)) { continue; }\n\n               // Skip `_test` entry.\n               if (entryKey === '_test') { continue; }\n\n               switch (map._test)\n               {\n                  case '<':\n                     if (sourceObjectValue < map[entryKey])\n                     {\n                        severity = entryKey;\n                        mapEntryValue = map[entryKey];\n                        testSign = ' < ';\n                     }\n                     break;\n\n                  case '<=':\n                     if (sourceObjectValue <= map[entryKey])\n                     {\n                        severity = entryKey;\n                        mapEntryValue = map[entryKey];\n                        testSign = ' <= ';\n                     }\n                     break;\n\n                  case '>=':\n                     if (sourceObjectValue >= map[entryKey])\n                     {\n                        severity = entryKey;\n                        mapEntryValue = map[entryKey];\n                        testSign = ' >= ';\n                     }\n                     break;\n\n                  default:\n                     if (sourceObjectValue > map[entryKey])\n                     {\n                        severity = entryKey;\n                        mapEntryValue = map[entryKey];\n                        testSign = ' > ';\n                     }\n                     break;\n               }\n            }\n\n            if (typeof severity === 'string')\n            {\n               errors.push(\n               {\n                  line: sourceObject.lineStart,\n                  severity,\n                  message: `${key}: ${sourceObjectValue}${testSign}${mapEntryValue}`,\n                  source: `${sourceObjectType}${typeof sourceObject.name === 'string' ? sourceObject.name : ''}`\n               });\n            }\n         }\n      }\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines default thresholds for severity levels matching the XML checkstyle format.\n * error levels: info, warning, error\n *\n * Entries may include `classReport`, `methodReport`, `moduleReport` that each define an object hash of threshold\n * object hashes. The key of each threshold hash is the entry key to compare against the `info, warning, error` values.\n * By default the order flows left to right using greater than comparisons. An optional entry is `_test` which is a\n * string defining the comparison operations with the following supported options, `<`, `<=`, `>`, and `>=`.\n *\n * @type {{classReport: {maintainability: {_test: string, info: number, warning: number, error: number}}, methodReport: {cyclomatic: {info: number, warning: number, error: number}, [halstead.difficulty]: {info: number, warning: number, error: number}}, moduleReport: {maintainability: {_test: string, info: number, warning: number, error: number}}}}\n * @ignore\n */\nconst s_DEFAULT_THRESHOLDS =\n{\n   classReport:\n   {\n      maintainability: { _test: '<', info: 115, warning: 100, error: 90 }\n   },\n   methodReport:\n   {\n      'cyclomatic': { info: 3, warning: 7, error: 12 },\n      'halstead.difficulty': { info: 8, warning: 13, error: 20 }\n   },\n   moduleReport:\n   {\n      maintainability: { _test: '<', info: 115, warning: 100, error: 90 }\n   }\n};\n",
    "___id": "T000002R000190",
    "___s": true
  },
  {
    "__docId__": 189,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatJSONCheckstyle",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/json/FormatJSONCheckstyle.js",
    "importStyle": "FormatJSONCheckstyle",
    "description": "Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to JSON that\ncorresponds to the XML checkstyle format.\n\nThe checkstyle XML format outputs error elements for each file / module. This format depends on the output of\n`FormatJSONCheckstyle`. The implementation below outputs a `file` array that contains an `error` array entries.\n\nThere is a corresponding `FormatXMLCheckstyle` format loaded when `escomplex-plugin-formats-xml` during plugin\nloading which converts the JSON output of this format transform to the official XML checkstyle format.",
    "see": [
      "<a href=\"http://checkstyle.sourceforge.net/\">http://checkstyle.sourceforge.net/</a>",
      "<a href=\"https://github.com/checkstyle/checkstyle\">https://github.com/checkstyle/checkstyle</a>",
      "<a href=\"https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java\">https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java</a>"
    ],
    "lineNumber": 17,
    "interface": false,
    "___id": "T000002R000191",
    "___s": true
  },
  {
    "__docId__": 190,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#constructor",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "thresholds",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "s_DEFAULT_THRESHOLDS",
        "defaultValue": "s_DEFAULT_THRESHOLDS"
      }
    ],
    "generator": false,
    "___id": "T000002R000192",
    "___s": true
  },
  {
    "__docId__": 191,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_thresholds",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#_thresholds",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000193",
    "___s": true
  },
  {
    "__docId__": 192,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatReport",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#formatReport",
    "access": null,
    "description": "Formats a module report as JSON / checkstyle.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "{info: number, warning: number, error: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "cyclomatic",
        "description": "<p>A hash of name / number thresholds.</p>\n",
        "descriptionRaw": "A hash of name / number thresholds."
      },
      {
        "nullable": null,
        "types": [
          "{info: number, warning: number, error: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "halstead",
        "description": "<p>A hash of name / number thresholds.</p>\n",
        "descriptionRaw": "A hash of name / number thresholds."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000194",
    "___s": true
  },
  {
    "__docId__": 193,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatResult",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#formatResult",
    "access": null,
    "description": "Formats a project result as JSON / checkstyle.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "{info: number, warning: number, error: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "cyclomatic",
        "description": "<p>A hash of name / number thresholds.</p>\n",
        "descriptionRaw": "A hash of name / number thresholds."
      },
      {
        "nullable": null,
        "types": [
          "{info: number, warning: number, error: number}"
        ],
        "spread": false,
        "optional": false,
        "name": "halstead",
        "description": "<p>A hash of name / number thresholds.</p>\n",
        "descriptionRaw": "A hash of name / number thresholds."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000195",
    "___s": true
  },
  {
    "__docId__": 194,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000196",
    "___s": true
  },
  {
    "__docId__": 195,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000197",
    "___s": true
  },
  {
    "__docId__": 196,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000198",
    "___s": true
  },
  {
    "__docId__": 197,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatModule",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#_formatModule",
    "access": null,
    "description": "Formats a module report.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "reportsAvailable",
        "description": "<p>Indicates that the report metric data is available.</p>\n",
        "descriptionRaw": "Indicates that the report metric data is available."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional entries defining threshold parameters.</p>\n",
        "descriptionRaw": "(Optional) One or more optional entries defining threshold parameters."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000199",
    "___s": true
  },
  {
    "__docId__": 198,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_parseErrors",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~FormatJSONCheckstyle#_parseErrors",
    "access": null,
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [
      {
        "name": "sourceObjectType",
        "types": [
          "*"
        ]
      },
      {
        "name": "sourceObject",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "errors",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false,
    "___id": "T000002R000200",
    "___s": true
  },
  {
    "__docId__": 199,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_THRESHOLDS",
    "memberof": "src/transform/formats/json/FormatJSONCheckstyle.js",
    "longname": "src/transform/formats/json/FormatJSONCheckstyle.js~s_DEFAULT_THRESHOLDS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/json/FormatJSONCheckstyle.js",
    "importStyle": null,
    "description": "Defines default thresholds for severity levels matching the XML checkstyle format.\nerror levels: info, warning, error\n\nEntries may include `classReport`, `methodReport`, `moduleReport` that each define an object hash of threshold\nobject hashes. The key of each threshold hash is the entry key to compare against the `info, warning, error` values.\nBy default the order flows left to right using greater than comparisons. An optional entry is `_test` which is a\nstring defining the comparison operations with the following supported options, `<`, `<=`, `>`, and `>=`.",
    "lineNumber": 256,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classReport: {maintainability: {_test: string, info: number, warning: number, error: number}}, methodReport: {cyclomatic: {info: number, warning: number, error: number}, [halstead.difficulty]: {info: number, warning: number, error: number}}, moduleReport: {maintainability: {_test: string, info: number, warning: number, error: number}}}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000201",
    "___s": true
  },
  {
    "__docId__": 200,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/json/FormatJSONMinimal.js",
    "memberof": null,
    "longname": "src/transform/formats/json/FormatJSONMinimal.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ObjectUtil from '../../../utils/ObjectUtil';\n\n/**\n * Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to JSON with\n * minimal metrics.\n */\nexport default class FormatJSONMinimal\n{\n   constructor(keys = s_DEFAULT_KEYS)\n   {\n      this._keys = keys;\n   }\n\n   /**\n    * Formats a module report as a JSON string.\n    *\n    * @param {ModuleReport}   report - A module report.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      classReport - An entry key found in the ClassReport to output.\n    * @property {string}      methodReport - An entry key found in the MethodReport to output.\n    * @property {string}      moduleReport - An entry key found in the ModuleReport to output.\n    *\n    * @returns {object}\n    */\n   formatReport(report, options = {})\n   {\n      let localOptions = Object.assign({}, this._keys);\n      localOptions = Object.assign(localOptions, options);\n\n      const output = this._formatModule(report, true, localOptions);\n\n      return typeof localOptions === 'object' && Number.isInteger(localOptions.spacing) ?\n       JSON.stringify(output, undefined, localOptions.spacing) : JSON.stringify(output);\n   }\n\n   /**\n    * Formats a project result as minimal / plain text.\n    *\n    * @param {ProjectResult}  result - A project result.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      classReport - An entry key found in the ClassReport to output.\n    * @property {string}      methodReport - An entry key found in the MethodReport to output.\n    * @property {string}      moduleReport - An entry key found in the ModuleReport to output.\n    *\n    * @returns {string}\n    */\n   formatResult(result, options = {})\n   {\n      let localOptions = Object.assign({}, this._keys);\n      localOptions = Object.assign(localOptions, options);\n\n      const output = { modules: [] };\n\n      const reportsAvailable = result.getSetting('serializeReports', false);\n\n      result.reports.forEach((report) =>\n      {\n         output.modules.push(this._formatModule(report, reportsAvailable, localOptions));\n      });\n\n      return typeof localOptions === 'object' && Number.isInteger(localOptions.spacing) ?\n       JSON.stringify(output, undefined, localOptions.spacing) : JSON.stringify(output);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'json';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'json-minimal';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'minimal';\n   }\n\n   /**\n    * Formats a module reports methods array.\n    *\n    * @param {Array<ClassReport>}   classReports - An array of ClassReport instances to format.\n    *\n    * @param {object}               options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}            classReport - An entry key found in the ClassReport to output.\n    * @property {string}            methodReport - An entry key found in the MethodReport to output.\n    *\n    * @returns {Array<object>}\n    */\n   _formatClasses(classReports, options)\n   {\n      const output = [];\n\n      classReports.forEach((classReport) =>\n      {\n         const entry = {};\n\n         if (classReport.name) { entry.name = classReport.name; }\n         if (classReport.lineStart) { entry.lineStart = classReport.lineStart; }\n\n         if (Array.isArray(options.classReport))\n         {\n            options.classReport.forEach((classEntry) =>\n            {\n               const entryValue = ObjectUtil.safeAccess(classReport, classEntry);\n               if (entryValue) { entry[classEntry] = entryValue; }\n            });\n         }\n\n         entry.methods = this._formatMethods(classReport.methods, options);\n\n         output.push(entry);\n      });\n\n      return output;\n   }\n\n   /**\n    * Formats a module or class reports methods array.\n    *\n    * @param {Array<MethodReport>}  methodReports - An array of MethodReport instances to format.\n    *\n    * @param {object}               options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}            methodReport - An entry key found in the MethodReport to output.\n    *\n    * @returns {Array<object>}\n    */\n   _formatMethods(methodReports, options)\n   {\n      const output = [];\n\n      methodReports.forEach((methodReport) =>\n      {\n         const entry = {};\n\n         if (methodReport.name) { entry.name = methodReport.name; }\n         if (methodReport.lineStart) { entry.lineStart = methodReport.lineStart; }\n\n         if (Array.isArray(options.methodReport))\n         {\n            options.methodReport.forEach((methodEntry) =>\n            {\n               const entryValue = ObjectUtil.safeAccess(methodReport, methodEntry);\n               if (entryValue) { entry[methodEntry] = entryValue; }\n            });\n         }\n\n         output.push(entry);\n      });\n\n      return output;\n   }\n\n   /**\n    * Formats a module report.\n    *\n    * @param {ModuleReport}   report - A module report.\n    *\n    * @param {boolean}        reportsAvailable - Indicates that the report metric data is available.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      classReport - An entry key found in the ClassReport to output.\n    * @property {string}      methodReport - An entry key found in the MethodReport to output.\n    * @property {string}      moduleReport - An entry key found in the ModuleReport to output.\n    *\n    * @returns {object}\n    */\n   _formatModule(report, reportsAvailable, options)\n   {\n      const output = {};\n\n      if (reportsAvailable)\n      {\n         if (report.filePath) { output.filePath = report.filePath; }\n         if (report.srcPath) { output.srcPath = report.srcPath; }\n         if (report.srcPathAlias) { output.srcPathAlias = report.srcPathAlias; }\n\n         if (Array.isArray(options.moduleReport))\n         {\n            options.moduleReport.forEach((moduleEntry) =>\n            {\n               const entryValue = ObjectUtil.safeAccess(report, moduleEntry);\n               if (entryValue) { output[moduleEntry] = entryValue; }\n            });\n         }\n\n         output.classes = this._formatClasses(report.classes, options);\n         output.methods = this._formatMethods(report.methods, options);\n      }\n      else\n      {\n         if (report.filePath) { output.filePath = report.filePath; }\n         if (report.srcPath) { output.srcPath = report.srcPath; }\n         if (report.srcPathAlias) { output.srcPathAlias = report.srcPathAlias; }\n\n         output.classes = [];\n         output.methods = [];\n      }\n\n      return output;\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines the default keys to include in a minimal JSON representation of module / project results.\n * @type {{classReport: string[], methodReport: string[], moduleReport: string[]}}\n * @ignore\n */\nconst s_DEFAULT_KEYS =\n{\n   classReport: ['maintainability'],\n   methodReport: ['cyclomatic', 'halstead.difficulty'],\n   moduleReport: ['maintainability']\n};\n",
    "___id": "T000002R000202",
    "___s": true
  },
  {
    "__docId__": 201,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatJSONMinimal",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/json/FormatJSONMinimal.js",
    "importStyle": "FormatJSONMinimal",
    "description": "Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to JSON with\nminimal metrics.",
    "lineNumber": 7,
    "interface": false,
    "___id": "T000002R000203",
    "___s": true
  },
  {
    "__docId__": 202,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "keys",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "s_DEFAULT_KEYS",
        "defaultValue": "s_DEFAULT_KEYS"
      }
    ],
    "generator": false,
    "___id": "T000002R000204",
    "___s": true
  },
  {
    "__docId__": 203,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_keys",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#_keys",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000205",
    "___s": true
  },
  {
    "__docId__": 204,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatReport",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#formatReport",
    "access": null,
    "description": "Formats a module report as a JSON string.",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>An entry key found in the ModuleReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ModuleReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000206",
    "___s": true
  },
  {
    "__docId__": 205,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatResult",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#formatResult",
    "access": null,
    "description": "Formats a project result as minimal / plain text.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>An entry key found in the ModuleReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ModuleReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000207",
    "___s": true
  },
  {
    "__docId__": 206,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000208",
    "___s": true
  },
  {
    "__docId__": 207,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000209",
    "___s": true
  },
  {
    "__docId__": 208,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000210",
    "___s": true
  },
  {
    "__docId__": 209,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatClasses",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#_formatClasses",
    "access": null,
    "description": "Formats a module reports methods array.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<object>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ClassReport>"
        ],
        "spread": false,
        "optional": false,
        "name": "classReports",
        "description": "<p>An array of ClassReport instances to format.</p>\n",
        "descriptionRaw": "An array of ClassReport instances to format."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000211",
    "___s": true
  },
  {
    "__docId__": 210,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatMethods",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#_formatMethods",
    "access": null,
    "description": "Formats a module or class reports methods array.",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<object>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<MethodReport>"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReports",
        "description": "<p>An array of MethodReport instances to format.</p>\n",
        "descriptionRaw": "An array of MethodReport instances to format."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000212",
    "___s": true
  },
  {
    "__docId__": 211,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatModule",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~FormatJSONMinimal#_formatModule",
    "access": null,
    "description": "Formats a module report.",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "reportsAvailable",
        "description": "<p>Indicates that the report metric data is available.</p>\n",
        "descriptionRaw": "Indicates that the report metric data is available."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>An entry key found in the ModuleReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ModuleReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000213",
    "___s": true
  },
  {
    "__docId__": 212,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_KEYS",
    "memberof": "src/transform/formats/json/FormatJSONMinimal.js",
    "longname": "src/transform/formats/json/FormatJSONMinimal.js~s_DEFAULT_KEYS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/json/FormatJSONMinimal.js",
    "importStyle": null,
    "description": "Defines the default keys to include in a minimal JSON representation of module / project results.",
    "lineNumber": 229,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classReport: string[], methodReport: string[], moduleReport: string[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000214",
    "___s": true
  },
  {
    "__docId__": 213,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/json/FormatJSONModules.js",
    "memberof": null,
    "longname": "src/transform/formats/json/FormatJSONModules.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to JSON that\n * includes only the `filePath`, `srcPath`, and / or `srcPathAlias` of module report entries.\n */\nexport default class FormatJSONModules\n{\n   /**\n    * Formats a module report as a JSON string. Please note that the exported JSON only contains data for ModuleReport\n    * instances contained in a ProjectResult.\n    *\n    * @param {ModuleReport}   report - A module report.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {number}      spacing - (Optional) An integer defining the JSON output spacing.\n\n    * @returns {string}\n    */\n   formatReport(report, options = {})\n   {\n      const output = {};\n\n      if (report.filePath) { output.filePath = report.filePath; }\n      if (report.srcPath) { output.srcPath = report.srcPath; }\n      if (report.srcPathAlias) { output.srcPathAlias = report.srcPathAlias; }\n\n      return typeof options === 'object' && Number.isInteger(options.spacing) ?\n       JSON.stringify(output, undefined, options.spacing) : JSON.stringify(output);\n   }\n\n   /**\n    * Formats a project result modules as plain text.\n    *\n    * @param {ProjectResult}  result - A project result.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {number}      spacing - (Optional) An integer defining the JSON output spacing.\n    *\n    * @returns {string}\n    */\n   formatResult(result, options = {})\n   {\n      const output = { modules: [] };\n\n      result.reports.forEach((report) =>\n      {\n         const entry = {};\n\n         if (report.filePath) { entry.filePath = report.filePath; }\n         if (report.srcPath) { entry.srcPath = report.srcPath; }\n         if (report.srcPathAlias) { entry.srcPathAlias = report.srcPathAlias; }\n\n         output.modules.push(entry);\n      });\n\n      return typeof options === 'object' && Number.isInteger(options.spacing) ?\n       JSON.stringify(output, undefined, options.spacing) : JSON.stringify(output);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'json';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'json-modules';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'modules';\n   }\n}",
    "___id": "T000002R000215",
    "___s": true
  },
  {
    "__docId__": 214,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatJSONModules",
    "memberof": "src/transform/formats/json/FormatJSONModules.js",
    "longname": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/json/FormatJSONModules.js",
    "importStyle": "FormatJSONModules",
    "description": "Provides a format transform for ESComplex ModuleReport / ProjectResult instances converting them to JSON that\nincludes only the `filePath`, `srcPath`, and / or `srcPathAlias` of module report entries.",
    "lineNumber": 5,
    "interface": false,
    "___id": "T000002R000216",
    "___s": true
  },
  {
    "__docId__": 215,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatReport",
    "memberof": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules",
    "longname": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules#formatReport",
    "access": null,
    "description": "Formats a module report as a JSON string. Please note that the exported JSON only contains data for ModuleReport\ninstances contained in a ProjectResult.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "spacing",
        "description": "<p>(Optional) An integer defining the JSON output spacing.</p>\n",
        "descriptionRaw": "(Optional) An integer defining the JSON output spacing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000217",
    "___s": true
  },
  {
    "__docId__": 216,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatResult",
    "memberof": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules",
    "longname": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules#formatResult",
    "access": null,
    "description": "Formats a project result modules as plain text.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "spacing",
        "description": "<p>(Optional) An integer defining the JSON output spacing.</p>\n",
        "descriptionRaw": "(Optional) An integer defining the JSON output spacing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000218",
    "___s": true
  },
  {
    "__docId__": 217,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules",
    "longname": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000219",
    "___s": true
  },
  {
    "__docId__": 218,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules",
    "longname": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000220",
    "___s": true
  },
  {
    "__docId__": 219,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules",
    "longname": "src/transform/formats/json/FormatJSONModules.js~FormatJSONModules#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000221",
    "___s": true
  },
  {
    "__docId__": 220,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/markdown/FormatMarkdown.js",
    "memberof": null,
    "longname": "src/transform/formats/markdown/FormatMarkdown.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import FormatText from '../text/FormatText';\nimport StringUtil from '../../../utils/StringUtil';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting them to a markdown string.\n */\nexport default class FormatMarkdown extends FormatText\n{\n   constructor(headers = {}, keys = {}, adjacencyFormatName = 'markdown-adjacency',\n    visibilityFormatName = 'markdown-visibility')\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers), keys, adjacencyFormatName,\n       visibilityFormatName);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'md';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'markdown';\n   }\n}\n\n/**\n * Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.\n * @type {{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: *[], projectResult: string[]}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   classMethod:\n   [\n      '\\n',\n      ['* Class method: **', 'name', 1, '**', StringUtil.tagEscapeHTML]\n   ],\n\n   classReport:\n   [\n      '\\n',\n      ['* Class: **', 'name', 1, '**', StringUtil.tagEscapeHTML]\n   ],\n\n   entryPrepend: '* ',\n\n   moduleMethod:\n   [\n      '\\n',\n      ['* Module method: **', 'name', 1, '**', StringUtil.tagEscapeHTML]\n   ],\n\n   moduleReport:\n   [\n      '\\n',\n      ['* Module ', '___modulecntrplus1___', 1, ':'],\n      ['   * File path: `',       'filePath', 1, '`'],\n      ['   * Source path: `',     'srcPath', 1, '`'],\n      ['   * Source alias: `',    'srcPathAlias', 1, '`']\n   ],\n\n   projectResult:\n   [\n      '* Project: \\n'\n   ]\n};",
    "___id": "T000002R000222",
    "___s": true
  },
  {
    "__docId__": 221,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatMarkdown",
    "memberof": "src/transform/formats/markdown/FormatMarkdown.js",
    "longname": "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdown.js",
    "importStyle": "FormatMarkdown",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting them to a markdown string.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/transform/formats/text/FormatText.js~FormatText"
    ],
    "___id": "T000002R000223",
    "___s": true,
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
      "src/transform/formats/text/FormatText.js~FormatText"
    ]
  },
  {
    "__docId__": 222,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown",
    "longname": "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "adjacencyFormatName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "markdown-adjacency",
        "defaultValue": "markdown-adjacency"
      },
      {
        "name": "visibilityFormatName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "markdown-visibility",
        "defaultValue": "markdown-visibility"
      }
    ],
    "generator": false,
    "___id": "T000002R000224",
    "___s": true
  },
  {
    "__docId__": 223,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown",
    "longname": "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000225",
    "___s": true
  },
  {
    "__docId__": 224,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown",
    "longname": "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000226",
    "___s": true
  },
  {
    "__docId__": 225,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/markdown/FormatMarkdown.js",
    "longname": "src/transform/formats/markdown/FormatMarkdown.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdown.js",
    "importStyle": null,
    "description": "Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.",
    "lineNumber": 42,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: *[], projectResult: string[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000227",
    "___s": true
  },
  {
    "__docId__": 226,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/markdown/FormatMarkdownAdjacency.js",
    "memberof": null,
    "longname": "src/transform/formats/markdown/FormatMarkdownAdjacency.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import FormatTextAdjacency from '../text/FormatTextAdjacency';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into markdown.\n */\nexport default class FormatMarkdownAdjacency extends FormatTextAdjacency\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers), keys);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'md';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'markdown-adjacency';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines the default headers added to any output strings..\n * @type {{entryPrepend: string, entryWrapper: string, textHeader: string}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   entryPrepend: '* ',\n   entryWrapper: '`',\n   textHeader: '* Adjacency (dependencies / numerical indices correspond to ProjectResult modules / reports):\\n'\n};\n",
    "___id": "T000002R000228",
    "___s": true
  },
  {
    "__docId__": 227,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatMarkdownAdjacency",
    "memberof": "src/transform/formats/markdown/FormatMarkdownAdjacency.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownAdjacency.js",
    "importStyle": "FormatMarkdownAdjacency",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into markdown.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency"
    ],
    "___id": "T000002R000229",
    "___s": true,
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
      "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency"
    ]
  },
  {
    "__docId__": 228,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency",
    "longname": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency#constructor",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000230",
    "___s": true
  },
  {
    "__docId__": 229,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency",
    "longname": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000231",
    "___s": true
  },
  {
    "__docId__": 230,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency",
    "longname": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000232",
    "___s": true
  },
  {
    "__docId__": 231,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/markdown/FormatMarkdownAdjacency.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownAdjacency.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownAdjacency.js",
    "importStyle": null,
    "description": "Defines the default headers added to any output strings..",
    "lineNumber": 41,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{entryPrepend: string, entryWrapper: string, textHeader: string}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000233",
    "___s": true
  },
  {
    "__docId__": 232,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/markdown/FormatMarkdownMinimal.js",
    "memberof": null,
    "longname": "src/transform/formats/markdown/FormatMarkdownMinimal.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import FormatTextMinimal   from '../text/FormatTextMinimal';\n\nimport StringUtil          from '../../../utils/StringUtil';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting them to markdown with\n * minimal metrics.\n */\nexport default class FormatMarkdownMinimal extends FormatTextMinimal\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers), keys);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'md';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'markdown-minimal';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines the default headers as markdown which are inserted via spread into `StringUtil.safeStringsObject`.\n * @type {{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: *[], projectResult: string[]}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   classMethod:\n   [\n      ['* Class method: **', 'name', 0, '', StringUtil.tagEscapeHTML],\n      ['** (', 'lineStart', 1, ')']\n   ],\n\n   classReport:\n   [\n      ['* Class: **', 'name', 0, '', StringUtil.tagEscapeHTML],\n      ['** (', 'lineStart', 1, ')']\n   ],\n\n   entryPrepend: '* ',\n\n   moduleMethod:\n   [\n      ['* Module method: **', 'name', 0, '', StringUtil.tagEscapeHTML],\n      ['** (', 'lineStart', 1, ')']\n   ],\n\n   moduleReport:\n   [\n      '\\n',\n      ['* Module ', '___modulecntrplus1___', 1, ':'],\n      ['   * filePath: `', 'filePath', 1, '`'],\n      ['   * srcPath: `', 'srcPath', 1, '`'],\n      ['   * srcPathAlias: `', 'srcPathAlias', 1, '`']\n   ],\n\n   projectResult:\n   [\n      '* Project:\\n'\n   ]\n};\n",
    "___id": "T000002R000234",
    "___s": true
  },
  {
    "__docId__": 233,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatMarkdownMinimal",
    "memberof": "src/transform/formats/markdown/FormatMarkdownMinimal.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownMinimal.js",
    "importStyle": "FormatMarkdownMinimal",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting them to markdown with\nminimal metrics.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal"
    ],
    "___id": "T000002R000235",
    "___s": true,
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatTest",
      "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal"
    ]
  },
  {
    "__docId__": 234,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal",
    "longname": "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal#constructor",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000236",
    "___s": true
  },
  {
    "__docId__": 235,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal",
    "longname": "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000237",
    "___s": true
  },
  {
    "__docId__": 236,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal",
    "longname": "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000238",
    "___s": true
  },
  {
    "__docId__": 237,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/markdown/FormatMarkdownMinimal.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownMinimal.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownMinimal.js",
    "importStyle": null,
    "description": "Defines the default headers as markdown which are inserted via spread into `StringUtil.safeStringsObject`.",
    "lineNumber": 44,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: *[], projectResult: string[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000239",
    "___s": true
  },
  {
    "__docId__": 238,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/markdown/FormatMarkdownModules.js",
    "memberof": null,
    "longname": "src/transform/formats/markdown/FormatMarkdownModules.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import FormatTextModules  from '../text/FormatTextModules';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting them to markdown with just modules.\n */\nexport default class FormatMarkdownModules extends FormatTextModules\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers), keys);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'md';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'markdown-modules';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines markdown headers as text which are inserted via spread into `StringUtil.safeStringsObject`.\n * @type {{moduleReport: string[]}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   moduleReport:\n   [\n      ['* Module ', '___modulecntrplus1___', 1, ':'],\n      ['   * filePath: `', 'filePath', 1, '`'],\n      ['   * srcPath: `', 'srcPath', 1, '`'],\n      ['   * srcPathAlias: `', 'srcPathAlias', 1, '`'],\n      '\\n'\n   ]\n};\n",
    "___id": "T000002R000240",
    "___s": true
  },
  {
    "__docId__": 239,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatMarkdownModules",
    "memberof": "src/transform/formats/markdown/FormatMarkdownModules.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownModules.js",
    "importStyle": "FormatMarkdownModules",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting them to markdown with just modules.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/transform/formats/text/FormatTextModules.js~FormatTextModules"
    ],
    "___id": "T000002R000241",
    "___s": true,
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatTest",
      "src/transform/formats/text/FormatTextModules.js~FormatTextModules"
    ]
  },
  {
    "__docId__": 240,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules",
    "longname": "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules#constructor",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000242",
    "___s": true
  },
  {
    "__docId__": 241,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules",
    "longname": "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000243",
    "___s": true
  },
  {
    "__docId__": 242,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules",
    "longname": "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000244",
    "___s": true
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/markdown/FormatMarkdownModules.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownModules.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownModules.js",
    "importStyle": null,
    "description": "Defines markdown headers as text which are inserted via spread into `StringUtil.safeStringsObject`.",
    "lineNumber": 41,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{moduleReport: string[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000245",
    "___s": true
  },
  {
    "__docId__": 244,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/markdown/FormatMarkdownVisibility.js",
    "memberof": null,
    "longname": "src/transform/formats/markdown/FormatMarkdownVisibility.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import FormatTextVisibility from '../text/FormatTextVisibility';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into markdown.\n */\nexport default class FormatMarkdownVisibility extends FormatTextVisibility\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers), keys);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'md';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'markdown-visibility';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines the default headers added to any output strings..\n * @type {{entryPrepend: string, entryWrapper: string, textHeader: string}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   entryPrepend: '* ',\n   entryWrapper: '`',\n   textHeader: '* Visibility (reverse dependents / numerical indices correspond to ProjectResult modules / reports):\\n'\n};\n",
    "___id": "T000002R000246",
    "___s": true
  },
  {
    "__docId__": 245,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatMarkdownVisibility",
    "memberof": "src/transform/formats/markdown/FormatMarkdownVisibility.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownVisibility.js",
    "importStyle": "FormatMarkdownVisibility",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into markdown.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility"
    ],
    "___id": "T000002R000247",
    "___s": true,
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
      "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility"
    ]
  },
  {
    "__docId__": 246,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility",
    "longname": "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility#constructor",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000248",
    "___s": true
  },
  {
    "__docId__": 247,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility",
    "longname": "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000249",
    "___s": true
  },
  {
    "__docId__": 248,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility",
    "longname": "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000250",
    "___s": true
  },
  {
    "__docId__": 249,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/markdown/FormatMarkdownVisibility.js",
    "longname": "src/transform/formats/markdown/FormatMarkdownVisibility.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/markdown/FormatMarkdownVisibility.js",
    "importStyle": null,
    "description": "Defines the default headers added to any output strings..",
    "lineNumber": 41,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{entryPrepend: string, entryWrapper: string, textHeader: string}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000251",
    "___s": true
  },
  {
    "__docId__": 250,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/text/AbstractFormatText.js",
    "memberof": null,
    "longname": "src/transform/formats/text/AbstractFormatText.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import StringUtil from '../../../utils/StringUtil';\n\n/**\n * Provides the base text format transform for ModuleReport / ProjectResult instances.\n */\nexport default class AbstractFormatText\n{\n   /**\n    * Initializes instance storing default headers / keys.\n    *\n    * @param {object}   headers - An object hash of header entries formatted for `StringUtil.safeStringsObject`.\n    *\n    * @param {object}   keys - An object hash of key entries formatted for `StringUtil.safeStringsObject`.\n    */\n   constructor(headers = {}, keys = {})\n   {\n      this._headers = headers;\n      this._keys = keys;\n   }\n\n   /**\n    * Formats a module report as plain text.\n    *\n    * @param {ModuleReport}   report - A module report.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      classReport - An entry key found in the ClassReport to output.\n    * @property {string}      methodReport - An entry key found in the MethodReport to output.\n    * @property {string}      moduleReport - An entry key found in the ModuleReport to output.\n    *\n    * @returns {string}\n    */\n   formatReport(report, options = {})\n   {\n      let localOptions = Object.assign({}, this._keys);\n      localOptions = Object.assign(localOptions, options);\n\n      let output = '';\n\n      // Add / remove a temporary entries for the current module index.\n      try\n      {\n         report.___modulecntr___ = 0;\n         report.___modulecntrplus1___ = 1;\n\n         output = this._formatModule(report, true, localOptions);\n      }\n      finally\n      {\n         delete report.___modulecntr___;\n         delete report.___modulecntrplus1___;\n      }\n\n      // For reports remove any existing new line at the beginning.\n      return output.replace(/^[\\n]/, '');\n   }\n\n   /**\n    * Formats a project result as plain text.\n    *\n    * @param {ProjectResult}  result - A project result.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      classReport - An entry key found in the ClassReport to output.\n    * @property {string}      methodReport - An entry key found in the MethodReport to output.\n    * @property {string}      moduleReport - An entry key found in the ModuleReport to output.\n    *\n    * @returns {string}\n    */\n   formatResult(result, options = {})\n   {\n      let localOptions = Object.assign({}, this._keys);\n      localOptions = Object.assign(localOptions, options);\n\n      const reportsAvailable = result.getSetting('serializeReports', false);\n\n      return result.reports.reduce((formatted, moduleReport, index) =>\n      {\n         let current = '';\n\n         // Add / remove a temporary entries for the current module index.\n         try\n         {\n            moduleReport.___modulecntr___ = index;\n            moduleReport.___modulecntrplus1___ = index + 1;\n\n            current = `${formatted}${this._formatModule(moduleReport, reportsAvailable, localOptions)}`;\n         }\n         finally\n         {\n            delete moduleReport.___modulecntr___;\n            delete moduleReport.___modulecntrplus1___;\n         }\n\n         return current;\n      }, `${this._formatProject(result, localOptions)}`);\n   }\n\n   /**\n    * Formats a class report.\n    *\n    * @param {ClassReport} classReport - A class report.\n    *\n    * @param {object}      options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}   classReport - An entry key found in the ClassReport to output.\n    * @property {string}   methodReport - An entry key found in the MethodReport to output.\n    *\n    * @param {string}      prepend - (Optional) A string to prepend; default: `''`.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatClass(classReport, options, prepend = '')\n   {\n      if (!Array.isArray(this._headers.classReport)) { return ''; }\n\n      const indent = typeof options.indent === 'boolean' && !options.indent ? '' : '   ';\n      const indent2 = typeof options.indent === 'boolean' && !options.indent ? '' : '      ';\n\n      // Must concatenate class methods so that the initial prepend isn't displayed twice.\n      return `${StringUtil.safeStringsPrependObject(prepend, classReport, ...this._headers.classReport,\n       ...this._formatEntries(classReport, options.classReport, indent))}${this._formatMethods(\n        classReport.methods, options, indent2, false)}`;\n   }\n\n   /**\n    * Formats a module reports methods array.\n    *\n    * @param {Array<ClassReport>}   classReports - An array of ClassReport instances to format.\n    *\n    * @param {object}               options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}            classReport - An entry key found in the ClassReport to output.\n    * @property {string}            methodReport - An entry key found in the MethodReport to output.\n    *\n    * @param {string}               prepend - (Optional) A string to prepend; default: `''`.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatClasses(classReports, options, prepend = '')\n   {\n      if (!Array.isArray(classReports)) { return ''; }\n\n      return classReports.reduce((formatted, classReport) =>\n      {\n         return `${formatted}${this._formatClass(classReport, options, prepend)}`;\n      }, '');\n   }\n\n   /**\n    * Formats a class report.\n    *\n    * @param {object}         report - A class / method report.\n    *\n    * @param {Array<string>}  entries - (Optional) One or more optional entries to format.\n    *\n    * @param {string}         prepend - (Optional) A string to prepend; default: `''`.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatEntries(report, entries, prepend = '')\n   {\n      if (!Array.isArray(entries)) { return ''; }\n\n      const entryPrepend = typeof this._headers.entryPrepend === 'string' ? this._headers.entryPrepend : '';\n\n      const output = [];\n\n      entries.forEach((entry) =>\n      {\n         let value;\n\n         if (Array.isArray(entry))\n         {\n            value = StringUtil.safeStringsPrependObject(`${prepend}${entryPrepend}`, report, entry);\n         }\n         else if (typeof entry === 'string')\n         {\n            value = StringUtil.safeStringObject(`${prepend}${entryPrepend}${entry}: `, report, entry, 1);\n         }\n\n         if (typeof value === 'string' && value !== '') { output.push(value); }\n      });\n\n      return output;\n   }\n\n   /**\n    * Formats a method report.\n    *\n    * @param {MethodReport}   methodReport - A method report.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      methodReport - An entry key found in the MethodReport to output.\n    *\n    * @param {string}         prepend - (Optional) A string to prepend; default: `''`.\n    *\n    * @param {boolean}        isModule - (Optional) Indicates module scope; default: `true`.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatMethod(methodReport, options, prepend = '', isModule = true)\n   {\n      // Skip processing if there are no headers.\n      if (!Array.isArray(this._headers.classMethod) || !Array.isArray(this._headers.moduleMethod)) { return ''; }\n\n      const indent = typeof options.indent === 'boolean' && !options.indent ? '' : '   ';\n\n      return StringUtil.safeStringsPrependObject(prepend, methodReport,\n         ...(isModule ? this._headers.moduleMethod : this._headers.classMethod),\n         ...this._formatEntries(methodReport, options.methodReport, indent)\n      );\n   }\n\n   /**\n    * Formats a module reports methods array.\n    *\n    * @param {Array<MethodReport>}  methodReports - An array of MethodReport instances to format.\n    *\n    * @param {object}               options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}            methodReport - An entry key found in the MethodReport to output.\n    *\n    * @param {string}               prepend - (Optional) A string to prepend; default: `''`.\n    *\n    * @param {boolean}              isModule - (Optional) Indicates module scope; default: `true`.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatMethods(methodReports, options, prepend = '', isModule = true)\n   {\n      if (!Array.isArray(methodReports)) { return ''; }\n\n      return methodReports.reduce((formatted, methodReport) =>\n      {\n         return `${formatted}${this._formatMethod(methodReport, options, prepend, isModule)}`;\n      }, '');\n   }\n\n   /**\n    * Formats a module report.\n    *\n    * @param {ModuleReport}   moduleReport - A module report.\n    *\n    * @param {boolean}        reportsAvailable - Indicates that the report metric data is available.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      classReport - Entry keys found in the ClassReport to output.\n    * @property {string}      methodReport - Entry keys found in the MethodReport to output.\n    * @property {string}      moduleReport - Entry keys found in the ModuleReport to output.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatModule(moduleReport, reportsAvailable, options)\n   {\n      // Skip processing if there are no headers.\n      if (!Array.isArray(this._headers.moduleReport)) { return ''; }\n\n      const indent = typeof options.indent === 'boolean' && !options.indent ? '' : '   ';\n\n      if (reportsAvailable)\n      {\n         return StringUtil.safeStringsObject(moduleReport,\n            ...this._headers.moduleReport,\n            ...this._formatEntries(moduleReport, options.moduleReport, indent),\n            this._formatMethods(moduleReport.methods, options, indent, true),\n            this._formatClasses(moduleReport.classes, options, indent)\n         );\n      }\n      else\n      {\n         return StringUtil.safeStringsObject(moduleReport, ...this._headers.moduleReport);\n      }\n   }\n\n   /**\n    * Formats a project result.\n    *\n    * @param {ProjectResult}  projectResult - A project result.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      projectResult - Entry keys found in the ProjectReport to output.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatProject(projectResult, options)\n   {\n      // Skip processing if there are no headers.\n      if (!Array.isArray(this._headers.projectResult)) { return ''; }\n\n      const indent = typeof options.indent === 'boolean' && !options.indent ? '' : '   ';\n\n      return StringUtil.safeStringsObject(projectResult,\n         ...this._headers.projectResult,\n         ...this._formatEntries(projectResult, options.projectResult, indent)\n      );\n   }\n}",
    "___id": "T000002R000252",
    "___s": true
  },
  {
    "__docId__": 251,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AbstractFormatText",
    "memberof": "src/transform/formats/text/AbstractFormatText.js",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/AbstractFormatText.js",
    "importStyle": "AbstractFormatText",
    "description": "Provides the base text format transform for ModuleReport / ProjectResult instances.",
    "lineNumber": 6,
    "interface": false,
    "___id": "T000002R000253",
    "___s": true,
    "_custom_indirect_subclasses": [
      "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown"
    ],
    "_custom_direct_subclasses": [
      "src/transform/formats/text/FormatText.js~FormatText"
    ]
  },
  {
    "__docId__": 252,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#constructor",
    "access": null,
    "description": "Initializes instance storing default headers / keys.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "headers",
        "description": "<p>An object hash of header entries formatted for <code>StringUtil.safeStringsObject</code>.</p>\n",
        "descriptionRaw": "An object hash of header entries formatted for `StringUtil.safeStringsObject`."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": "<p>An object hash of key entries formatted for <code>StringUtil.safeStringsObject</code>.</p>\n",
        "descriptionRaw": "An object hash of key entries formatted for `StringUtil.safeStringsObject`."
      }
    ],
    "generator": false,
    "___id": "T000002R000254",
    "___s": true
  },
  {
    "__docId__": 253,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_headers",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_headers",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000255",
    "___s": true
  },
  {
    "__docId__": 254,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_keys",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_keys",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000256",
    "___s": true
  },
  {
    "__docId__": 255,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatReport",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#formatReport",
    "access": null,
    "description": "Formats a module report as plain text.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>An entry key found in the ModuleReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ModuleReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000257",
    "___s": true
  },
  {
    "__docId__": 256,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatResult",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#formatResult",
    "access": null,
    "description": "Formats a project result as plain text.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>An entry key found in the ModuleReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ModuleReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000258",
    "___s": true
  },
  {
    "__docId__": 257,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatClass",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_formatClass",
    "access": "private",
    "description": "<p>Formats a class report.</p>\n",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ClassReport"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>A class report.</p>\n",
        "descriptionRaw": "A class report."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepend",
        "description": "<p>(Optional) A string to prepend; default: <code>&#39;&#39;</code>.</p>\n",
        "descriptionRaw": "(Optional) A string to prepend; default: `''`."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000259",
    "___s": true,
    "descriptionRaw": "Formats a class report."
  },
  {
    "__docId__": 258,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatClasses",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_formatClasses",
    "access": "private",
    "description": "<p>Formats a module reports methods array.</p>\n",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<ClassReport>"
        ],
        "spread": false,
        "optional": false,
        "name": "classReports",
        "description": "<p>An array of ClassReport instances to format.</p>\n",
        "descriptionRaw": "An array of ClassReport instances to format."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepend",
        "description": "<p>(Optional) A string to prepend; default: <code>&#39;&#39;</code>.</p>\n",
        "descriptionRaw": "(Optional) A string to prepend; default: `''`."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000260",
    "___s": true,
    "descriptionRaw": "Formats a module reports methods array."
  },
  {
    "__docId__": 259,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatEntries",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_formatEntries",
    "access": "private",
    "description": "<p>Formats a class report.</p>\n",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "report",
        "description": "<p>A class / method report.</p>\n",
        "descriptionRaw": "A class / method report."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "entries",
        "description": "<p>(Optional) One or more optional entries to format.</p>\n",
        "descriptionRaw": "(Optional) One or more optional entries to format."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepend",
        "description": "<p>(Optional) A string to prepend; default: <code>&#39;&#39;</code>.</p>\n",
        "descriptionRaw": "(Optional) A string to prepend; default: `''`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000261",
    "___s": true,
    "descriptionRaw": "Formats a class report."
  },
  {
    "__docId__": 260,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatMethod",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_formatMethod",
    "access": "private",
    "description": "<p>Formats a method report.</p>\n",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "MethodReport"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>A method report.</p>\n",
        "descriptionRaw": "A method report."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepend",
        "description": "<p>(Optional) A string to prepend; default: <code>&#39;&#39;</code>.</p>\n",
        "descriptionRaw": "(Optional) A string to prepend; default: `''`."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isModule",
        "description": "<p>(Optional) Indicates module scope; default: <code>true</code>.</p>\n",
        "descriptionRaw": "(Optional) Indicates module scope; default: `true`."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000262",
    "___s": true,
    "descriptionRaw": "Formats a method report."
  },
  {
    "__docId__": 261,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatMethods",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_formatMethods",
    "access": "private",
    "description": "<p>Formats a module reports methods array.</p>\n",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<MethodReport>"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReports",
        "description": "<p>An array of MethodReport instances to format.</p>\n",
        "descriptionRaw": "An array of MethodReport instances to format."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "prepend",
        "description": "<p>(Optional) A string to prepend; default: <code>&#39;&#39;</code>.</p>\n",
        "descriptionRaw": "(Optional) A string to prepend; default: `''`."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isModule",
        "description": "<p>(Optional) Indicates module scope; default: <code>true</code>.</p>\n",
        "descriptionRaw": "(Optional) Indicates module scope; default: `true`."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000263",
    "___s": true,
    "descriptionRaw": "Formats a module reports methods array."
  },
  {
    "__docId__": 262,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatModule",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_formatModule",
    "access": "private",
    "description": "<p>Formats a module report.</p>\n",
    "lineNumber": 257,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ModuleReport"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>A module report.</p>\n",
        "descriptionRaw": "A module report."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "reportsAvailable",
        "description": "<p>Indicates that the report metric data is available.</p>\n",
        "descriptionRaw": "Indicates that the report metric data is available."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>Entry keys found in the ClassReport to output.</p>\n",
        "descriptionRaw": "Entry keys found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>Entry keys found in the MethodReport to output.</p>\n",
        "descriptionRaw": "Entry keys found in the MethodReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>Entry keys found in the ModuleReport to output.</p>\n",
        "descriptionRaw": "Entry keys found in the ModuleReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000264",
    "___s": true,
    "descriptionRaw": "Formats a module report."
  },
  {
    "__docId__": 263,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatProject",
    "memberof": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText",
    "longname": "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText#_formatProject",
    "access": "private",
    "description": "<p>Formats a project result.</p>\n",
    "lineNumber": 290,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "projectResult",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "projectResult",
        "description": "<p>Entry keys found in the ProjectReport to output.</p>\n",
        "descriptionRaw": "Entry keys found in the ProjectReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000265",
    "___s": true,
    "descriptionRaw": "Formats a project result."
  },
  {
    "__docId__": 264,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/text/AbstractTextMatrix.js",
    "memberof": null,
    "longname": "src/transform/formats/text/AbstractTextMatrix.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ObjectUtil from '../../../utils/ObjectUtil';\n\n/**\n * Provides the base text format transform for ProjectResult matrix list entries.\n */\nexport default class AbstractTextMatrix\n{\n   /**\n    * Initializes instance storing default headers / keys.\n    *\n    * @param {object}      headers - An object hash containing the following entries.\n    * @property {string}   entryPrepend - A string to prepend all entries.\n    * @property {string}   entryWrapper - A string to wrap output entries between.\n    * @property {string}   textHeader - A string to prepend output providing a leading header.\n    *\n    * @param {object}      keys - An object hash containing the following entries.\n    * @property {boolean}  matrixFilePath - If true the module `filePath` is serialized.\n    * @property {string}   matrixList - An entry key to lookup a given matrix list in a ProjectResult.\n    * @property {boolean}  zeroIndex - If true module report indexes are zero indexed.\n    */\n   constructor(headers = {}, keys = {})\n   {\n      this._headers = headers;\n      this._keys = keys;\n   }\n\n   /**\n    * Currently there are no matrix lists stored in modules, but the implementation is complete in case a ModuleReport\n    * does have a matrix list.\n    *\n    * @returns {string}\n    */\n   formatReport()\n   {\n      return '';\n   }\n\n   /**\n    * Formats a matrix list stored in a ProjectResult.\n    *\n    * @param {ProjectResult}  result - A project result.\n    *\n    * @param {object}      options - (Optional) An object hash containing the following entries.\n    * @property {boolean}  matrixFilePath - If true the module `filePath` is serialized.\n    * @property {string}   matrixList - An entry key to lookup a given matrix list in a ProjectResult.\n    * @property {boolean}  zeroIndex - If true module report indexes are zero indexed.\n    *\n    * @returns {string}\n    */\n   formatResult(result, options = {})\n   {\n      let localOptions = Object.assign({}, this._keys);\n      localOptions = Object.assign(localOptions, options);\n\n      const matrixList = ObjectUtil.safeAccess(result, localOptions.matrixList);\n\n      /* istanbul ignore if */\n      if (!Array.isArray(matrixList))\n      {\n         throw new TypeError(`formatResult error: could not locate matrixList '${localOptions.matrixList}'.`);\n      }\n\n      /* istanbul ignore if */\n      if (!Array.isArray(result.reports))\n      {\n         throw new TypeError(`formatResult error: could not locate 'result.reports'.`);\n      }\n\n      /* istanbul ignore if */\n      if (typeof this._headers.entryPrepend !== 'string')\n      {\n         throw new TypeError(`formatResult error: 'this._headers.entryPrepend' is not a 'string'.`);\n      }\n\n      /* istanbul ignore if */\n      if (typeof this._headers.entryWrapper !== 'string')\n      {\n         throw new TypeError(`formatResult error: 'this._headers.entryWrapper' is not a 'string'.`);\n      }\n\n      let output = '';\n\n      // Add any defined text header.\n      if (typeof this._headers.textHeader === 'string') { output += this._headers.textHeader; }\n\n      output += this._formatMatrixList(result, matrixList, localOptions);\n\n      return output;\n   }\n\n   /**\n    * Returns a string representing the adjacency relationships by printing out the report index followed by\n    * dependent ModuleReport indices / `srcPaths`.\n    *\n    * @param {ProjectResult}                          result - A project result instance containing the matrix list.\n    *\n    * @param {Array<{row: number, cols: number[]}>}   matrixList - The matrix list to be serialized.\n    *\n    * @param {object}                                 options - (Optional) An object hash of options.\n    * @property {boolean}                             zeroIndex - If true module report indexes are zero indexed.\n    * @property {boolean}                             matrixFilePath - If true the module `filePath` is serialized.\n    *\n    * @returns {string}\n    * @private\n    */\n   _formatMatrixList(result, matrixList, options)\n   {\n      let output = '';\n\n      const plus1 = typeof options.zeroIndex === 'boolean' && options.zeroIndex ? 0 : 1;\n      const path = typeof options.matrixFilePath === 'boolean' && options.matrixFilePath ? 'filePath' : 'srcPath';\n\n      const entryPrepend = this._headers.entryPrepend;\n      const entryWrapper = this._headers.entryWrapper;\n\n      matrixList.forEach((entry) =>\n      {\n         output += `${entryPrepend}${entry.row + plus1}:\\t${entryWrapper}${ObjectUtil.safeAccess(\n          result.reports[entry.row], path, 'unknown')}${entryWrapper}\\n`;\n\n         entry.cols.forEach((colIndex) =>\n         {\n            output += `\\t${entryPrepend}${colIndex + plus1}:\\t${entryWrapper}${ObjectUtil.safeAccess(\n             result.reports[colIndex], path, 'unknown')}${entryWrapper}\\n`;\n         });\n\n         output += '\\n';\n      });\n\n      return output;\n   }\n}",
    "___id": "T000002R000266",
    "___s": true
  },
  {
    "__docId__": 265,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AbstractTextMatrix",
    "memberof": "src/transform/formats/text/AbstractTextMatrix.js",
    "longname": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/AbstractTextMatrix.js",
    "importStyle": "AbstractTextMatrix",
    "description": "Provides the base text format transform for ProjectResult matrix list entries.",
    "lineNumber": 6,
    "interface": false,
    "___id": "T000002R000267",
    "___s": true,
    "_custom_indirect_subclasses": [
      "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency",
      "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility"
    ],
    "_custom_direct_subclasses": [
      "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency",
      "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility"
    ]
  },
  {
    "__docId__": 266,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
    "longname": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix#constructor",
    "access": null,
    "description": "Initializes instance storing default headers / keys.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "headers",
        "description": "<p>An object hash containing the following entries.</p>\n",
        "descriptionRaw": "An object hash containing the following entries."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": "<p>An object hash containing the following entries.</p>\n",
        "descriptionRaw": "An object hash containing the following entries."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "entryPrepend",
        "description": "<p>A string to prepend all entries.</p>\n",
        "descriptionRaw": "A string to prepend all entries."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "entryWrapper",
        "description": "<p>A string to wrap output entries between.</p>\n",
        "descriptionRaw": "A string to wrap output entries between."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "textHeader",
        "description": "<p>A string to prepend output providing a leading header.</p>\n",
        "descriptionRaw": "A string to prepend output providing a leading header."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixFilePath",
        "description": "<p>If true the module <code>filePath</code> is serialized.</p>\n",
        "descriptionRaw": "If true the module `filePath` is serialized."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixList",
        "description": "<p>An entry key to lookup a given matrix list in a ProjectResult.</p>\n",
        "descriptionRaw": "An entry key to lookup a given matrix list in a ProjectResult."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "zeroIndex",
        "description": "<p>If true module report indexes are zero indexed.</p>\n",
        "descriptionRaw": "If true module report indexes are zero indexed."
      }
    ],
    "generator": false,
    "___id": "T000002R000268",
    "___s": true
  },
  {
    "__docId__": 267,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_headers",
    "memberof": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
    "longname": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix#_headers",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000269",
    "___s": true
  },
  {
    "__docId__": 268,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_keys",
    "memberof": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
    "longname": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix#_keys",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000270",
    "___s": true
  },
  {
    "__docId__": 269,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatReport",
    "memberof": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
    "longname": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix#formatReport",
    "access": null,
    "description": "Currently there are no matrix lists stored in modules, but the implementation is complete in case a ModuleReport\ndoes have a matrix list.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000271",
    "___s": true
  },
  {
    "__docId__": 270,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatResult",
    "memberof": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
    "longname": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix#formatResult",
    "access": null,
    "description": "Formats a matrix list stored in a ProjectResult.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) An object hash containing the following entries.</p>\n",
        "descriptionRaw": "(Optional) An object hash containing the following entries."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixFilePath",
        "description": "<p>If true the module <code>filePath</code> is serialized.</p>\n",
        "descriptionRaw": "If true the module `filePath` is serialized."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixList",
        "description": "<p>An entry key to lookup a given matrix list in a ProjectResult.</p>\n",
        "descriptionRaw": "An entry key to lookup a given matrix list in a ProjectResult."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "zeroIndex",
        "description": "<p>If true module report indexes are zero indexed.</p>\n",
        "descriptionRaw": "If true module report indexes are zero indexed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000272",
    "___s": true
  },
  {
    "__docId__": 271,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatMatrixList",
    "memberof": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix",
    "longname": "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix#_formatMatrixList",
    "access": "private",
    "description": "<p>Returns a string representing the adjacency relationships by printing out the report index followed by\ndependent ModuleReport indices / <code>srcPaths</code>.</p>\n",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result instance containing the matrix list.</p>\n",
        "descriptionRaw": "A project result instance containing the matrix list."
      },
      {
        "nullable": null,
        "types": [
          "Array<{row: number, cols: number[]}>"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixList",
        "description": "<p>The matrix list to be serialized.</p>\n",
        "descriptionRaw": "The matrix list to be serialized."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) An object hash of options.</p>\n",
        "descriptionRaw": "(Optional) An object hash of options."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "zeroIndex",
        "description": "<p>If true module report indexes are zero indexed.</p>\n",
        "descriptionRaw": "If true module report indexes are zero indexed."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixFilePath",
        "description": "<p>If true the module <code>filePath</code> is serialized.</p>\n",
        "descriptionRaw": "If true the module `filePath` is serialized."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000273",
    "___s": true,
    "descriptionRaw": "Returns a string representing the adjacency relationships by printing out the report index followed by\ndependent ModuleReport indices / `srcPaths`."
  },
  {
    "__docId__": 272,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/text/FormatText.js",
    "memberof": null,
    "longname": "src/transform/formats/text/FormatText.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractFormatText  from './AbstractFormatText';\nimport TransformFormat     from '../../TransformFormat';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting them to plain text.\n */\nexport default class FormatText extends AbstractFormatText\n{\n   constructor(headers = {}, keys = {}, adjacencyFormatName = 'text-adjacency',\n    visibilityFormatName = 'text-visibility')\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers),\n       Object.assign(Object.assign({}, s_DEFAULT_KEYS), keys));\n\n      this._adjacencyFormatName = adjacencyFormatName;\n      this._visibilityFormatName = visibilityFormatName;\n   }\n\n   /**\n    * Formats a project result as plain text.\n    *\n    * @param {ProjectResult}  result - A project result.\n    *\n    * @param {object}         options - (Optional) One or more optional parameters passed to the formatter.\n    * @property {string}      classReport - An entry key found in the ClassReport to output.\n    * @property {string}      methodReport - An entry key found in the MethodReport to output.\n    * @property {string}      moduleReport - An entry key found in the ModuleReport to output.\n    *\n    * @returns {string}\n    */\n   formatResult(result, options = {})\n   {\n      let output = super.formatResult(result, options);\n\n      let localOptions = Object.assign({}, this._keys);\n      localOptions = Object.assign(localOptions, options);\n\n      const adjacency = typeof localOptions.adjacency === 'boolean' ? localOptions.adjacency : true;\n      const visibility = typeof localOptions.visibility === 'boolean' ? localOptions.visibility : true;\n\n      // Add adjacency matrix output\n      if (adjacency && TransformFormat.isFormat(this._adjacencyFormatName))\n      {\n         output += `\\n\\n${TransformFormat.format(result, this._adjacencyFormatName, options)}`;\n      }\n\n      // Add visibility matrix output\n      if (visibility && TransformFormat.isFormat(this._visibilityFormatName))\n      {\n         output += `\\n\\n${TransformFormat.format(result, this._visibilityFormatName, options)}`;\n      }\n\n      return output;\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'txt';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'text';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'full';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Provides shared method data.\n * @type {*[]}\n * @ignore\n */\nconst s_SHARED_METHOD_DATA =\n[\n   ['Line start: ',                          'lineStart'],\n   ['Line end: ',                            'lineEnd'],\n   ['Physical LOC: ',                        'sloc.physical'],\n   ['Logical LOC: ',                         'sloc.logical'],\n   ['Cyclomatic complexity: ',               'cyclomatic'],\n   ['Cyclomatic complexity density: ',       'cyclomaticDensity', 1, '%'],\n   ['Halstead difficulty: ',                 'halstead.difficulty'],\n   ['Halstead volume: ',                     'halstead.volume'],\n   ['Halstead effort: ',                     'halstead.effort'],\n   ['Parameter count: ',                     'params']\n];\n\n/**\n * Provides shared average method data.\n * @type {*[]}\n * @ignore\n */\nconst s_SHARED_METHOD_AVERAGE_DATA =\n[\n   ['Average per-function physical LOC: ',            'methodAverage.sloc.physical'],\n   ['Average per-function logical LOC: ',             'methodAverage.sloc.logical'],\n   ['Average per-function cyclomatic complexity: ',   'methodAverage.cyclomatic'],\n   ['Average per-function cyclomatic density: ',      'methodAverage.cyclomaticDensity', 1, '%'],\n   ['Average per-function halstead difficulty: ',     'methodAverage.halstead.difficulty'],\n   ['Average per-function halstead volume: ',         'methodAverage.halstead.volume'],\n   ['Average per-function halstead effort: ',         'methodAverage.halstead.effort']\n];\n\n/**\n * Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.\n * @type {{classMethod: Array, classReport: Array, methodReport: *[], moduleReport: *[], projectResult: *[]}}\n * @ignore\n */\nconst s_DEFAULT_KEYS =\n{\n   classMethod:\n   [\n      ...s_SHARED_METHOD_DATA\n   ],\n\n   classReport:\n   [\n      ['Line start: ',                 'lineStart'],\n      ['Line end: ',                   'lineEnd'],\n      ...s_SHARED_METHOD_AVERAGE_DATA\n   ],\n\n   methodReport:\n   [\n      ...s_SHARED_METHOD_DATA\n   ],\n\n   moduleReport:\n   [\n      ['Total lines: ',                'lineEnd'],\n      ['Maintainability index: ',      'maintainability'],\n      ['Dependency count: ',           'dependencies.length'],\n      ...s_SHARED_METHOD_AVERAGE_DATA\n   ],\n\n   projectResult:\n   [\n      ['First-order density: ',                          'firstOrderDensity', 1, '%'],\n      ['Change cost: ',                                  'changeCost', 1, '%'],\n      ['Core size: ',                                    'coreSize', 1, '%'],\n      ['Average per-module maintainability index: ',     'moduleAverage.maintainability'],\n      ['Average per-function physical LOC: ',            'moduleAverage.methodAverage.sloc.physical'],\n      ['Average per-function logical LOC: ',             'moduleAverage.methodAverage.sloc.logical'],\n      ['Average per-function parameter count: ',         'moduleAverage.methodAverage.params'],\n      ['Average per-function cyclomatic complexity: ',   'moduleAverage.methodAverage.cyclomatic'],\n      ['Average per-function halstead difficulty: ',     'moduleAverage.methodAverage.halstead.difficulty'],\n      ['Average per-function halstead effort: ',         'moduleAverage.methodAverage.halstead.effort']\n   ]\n};\n\n/**\n * Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.\n * @type {{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: string[], projectResult: string[]}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   classMethod:\n   [\n      '\\n',\n      ['Class method: ', 'name']\n   ],\n\n   classReport:\n   [\n      '\\n',\n      ['Class: ', 'name']\n   ],\n\n   entryPrepend: '',\n\n   moduleMethod:\n   [\n      '\\n',\n      ['Module method: ', 'name']\n   ],\n\n   moduleReport:\n   [\n      '\\n',\n      ['Module ', '___modulecntrplus1___', 1, ':'],\n      ['   File path: ',       'filePath'],\n      ['   Source path: ',     'srcPath'],\n      ['   Source alias: ',    'srcPathAlias']\n   ],\n\n   projectResult:\n   [\n      'Project: \\n'\n   ]\n};",
    "___id": "T000002R000274",
    "___s": true
  },
  {
    "__docId__": 273,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatText",
    "memberof": "src/transform/formats/text/FormatText.js",
    "longname": "src/transform/formats/text/FormatText.js~FormatText",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatText.js",
    "importStyle": "FormatText",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting them to plain text.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText"
    ],
    "___id": "T000002R000275",
    "___s": true,
    "_custom_direct_subclasses": [
      "src/transform/formats/markdown/FormatMarkdown.js~FormatMarkdown"
    ],
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatText"
    ]
  },
  {
    "__docId__": 274,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/text/FormatText.js~FormatText",
    "longname": "src/transform/formats/text/FormatText.js~FormatText#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "adjacencyFormatName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "text-adjacency",
        "defaultValue": "text-adjacency"
      },
      {
        "name": "visibilityFormatName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "text-visibility",
        "defaultValue": "text-visibility"
      }
    ],
    "generator": false,
    "___id": "T000002R000276",
    "___s": true
  },
  {
    "__docId__": 275,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_adjacencyFormatName",
    "memberof": "src/transform/formats/text/FormatText.js~FormatText",
    "longname": "src/transform/formats/text/FormatText.js~FormatText#_adjacencyFormatName",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000277",
    "___s": true
  },
  {
    "__docId__": 276,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_visibilityFormatName",
    "memberof": "src/transform/formats/text/FormatText.js~FormatText",
    "longname": "src/transform/formats/text/FormatText.js~FormatText#_visibilityFormatName",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "___id": "T000002R000278",
    "___s": true
  },
  {
    "__docId__": 277,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "formatResult",
    "memberof": "src/transform/formats/text/FormatText.js~FormatText",
    "longname": "src/transform/formats/text/FormatText.js~FormatText#formatResult",
    "access": null,
    "description": "Formats a project result as plain text.",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ProjectResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "<p>A project result.</p>\n",
        "descriptionRaw": "A project result."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "<p>(Optional) One or more optional parameters passed to the formatter.</p>\n",
        "descriptionRaw": "(Optional) One or more optional parameters passed to the formatter."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "classReport",
        "description": "<p>An entry key found in the ClassReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ClassReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "methodReport",
        "description": "<p>An entry key found in the MethodReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the MethodReport to output."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "moduleReport",
        "description": "<p>An entry key found in the ModuleReport to output.</p>\n",
        "descriptionRaw": "An entry key found in the ModuleReport to output."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000279",
    "___s": true
  },
  {
    "__docId__": 278,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/text/FormatText.js~FormatText",
    "longname": "src/transform/formats/text/FormatText.js~FormatText#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000280",
    "___s": true
  },
  {
    "__docId__": 279,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/text/FormatText.js~FormatText",
    "longname": "src/transform/formats/text/FormatText.js~FormatText#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000281",
    "___s": true
  },
  {
    "__docId__": 280,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/text/FormatText.js~FormatText",
    "longname": "src/transform/formats/text/FormatText.js~FormatText#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000282",
    "___s": true
  },
  {
    "__docId__": 281,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_SHARED_METHOD_DATA",
    "memberof": "src/transform/formats/text/FormatText.js",
    "longname": "src/transform/formats/text/FormatText.js~s_SHARED_METHOD_DATA",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatText.js",
    "importStyle": null,
    "description": "Provides shared method data.",
    "lineNumber": 94,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "*[]"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000283",
    "___s": true
  },
  {
    "__docId__": 282,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_SHARED_METHOD_AVERAGE_DATA",
    "memberof": "src/transform/formats/text/FormatText.js",
    "longname": "src/transform/formats/text/FormatText.js~s_SHARED_METHOD_AVERAGE_DATA",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatText.js",
    "importStyle": null,
    "description": "Provides shared average method data.",
    "lineNumber": 113,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "*[]"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000284",
    "___s": true
  },
  {
    "__docId__": 283,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_KEYS",
    "memberof": "src/transform/formats/text/FormatText.js",
    "longname": "src/transform/formats/text/FormatText.js~s_DEFAULT_KEYS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatText.js",
    "importStyle": null,
    "description": "Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.",
    "lineNumber": 129,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classMethod: Array, classReport: Array, methodReport: *[], moduleReport: *[], projectResult: *[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000285",
    "___s": true
  },
  {
    "__docId__": 284,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/text/FormatText.js",
    "longname": "src/transform/formats/text/FormatText.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatText.js",
    "importStyle": null,
    "description": "Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.",
    "lineNumber": 176,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: string[], projectResult: string[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000286",
    "___s": true
  },
  {
    "__docId__": 285,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/text/FormatTextAdjacency.js",
    "memberof": null,
    "longname": "src/transform/formats/text/FormatTextAdjacency.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractTextMatrix  from './AbstractTextMatrix';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into plain text.\n */\nexport default class FormatTextAdjacency extends AbstractTextMatrix\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers),\n       Object.assign(Object.assign({}, s_DEFAULT_KEYS), keys));\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'txt';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'text-adjacency';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'adjacency';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines the default matrix list key accessed.\n * @type {{matrixList: string}}\n * @ignore\n */\nconst s_DEFAULT_KEYS =\n{\n   matrixList: 'adjacencyList'\n};\n\n/**\n * Defines the default headers added to any output strings..\n * @type {{entryPrepend: string, entryWrapper: string, textHeader: string}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   entryPrepend: '',\n   entryWrapper: '',\n   textHeader: 'Adjacency (dependencies / numerical indices correspond to ProjectResult modules / reports):\\n'\n};\n",
    "___id": "T000002R000287",
    "___s": true
  },
  {
    "__docId__": 286,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatTextAdjacency",
    "memberof": "src/transform/formats/text/FormatTextAdjacency.js",
    "longname": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextAdjacency.js",
    "importStyle": "FormatTextAdjacency",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into plain text.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix"
    ],
    "___id": "T000002R000288",
    "___s": true,
    "_custom_direct_subclasses": [
      "src/transform/formats/markdown/FormatMarkdownAdjacency.js~FormatMarkdownAdjacency"
    ],
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix"
    ]
  },
  {
    "__docId__": 287,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency",
    "longname": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency#constructor",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000289",
    "___s": true
  },
  {
    "__docId__": 288,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency",
    "longname": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000290",
    "___s": true
  },
  {
    "__docId__": 289,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency",
    "longname": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000291",
    "___s": true
  },
  {
    "__docId__": 290,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency",
    "longname": "src/transform/formats/text/FormatTextAdjacency.js~FormatTextAdjacency#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000292",
    "___s": true
  },
  {
    "__docId__": 291,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_KEYS",
    "memberof": "src/transform/formats/text/FormatTextAdjacency.js",
    "longname": "src/transform/formats/text/FormatTextAdjacency.js~s_DEFAULT_KEYS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextAdjacency.js",
    "importStyle": null,
    "description": "Defines the default matrix list key accessed.",
    "lineNumber": 52,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{matrixList: string}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000293",
    "___s": true
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/text/FormatTextAdjacency.js",
    "longname": "src/transform/formats/text/FormatTextAdjacency.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextAdjacency.js",
    "importStyle": null,
    "description": "Defines the default headers added to any output strings..",
    "lineNumber": 62,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{entryPrepend: string, entryWrapper: string, textHeader: string}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000294",
    "___s": true
  },
  {
    "__docId__": 293,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/text/FormatTextMinimal.js",
    "memberof": null,
    "longname": "src/transform/formats/text/FormatTextMinimal.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractFormatTest  from './AbstractFormatText';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting them to plain text with just\n * modules.\n */\nexport default class FormatTextMinimal extends AbstractFormatTest\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers),\n       Object.assign(Object.assign({}, s_DEFAULT_KEYS), keys));\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'txt';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'text-minimal';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'minimal';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines the default keys to include in a minimal text representation of module / project results.\n * @type {{classReport: string[], methodReport: string[], moduleReport: string[], projectResult: string[]}}\n * @ignore\n */\nconst s_DEFAULT_KEYS =\n{\n   classReport: ['maintainability'],\n   methodReport: ['cyclomatic', 'halstead.difficulty'],\n   moduleReport: ['maintainability'],\n   projectResult: ['moduleAverage.maintainability']\n};\n\n/**\n * Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.\n * @type {{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: *[], projectResult: string[]}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   classMethod:\n   [\n      ['Class method: ', 'name', 0],\n      [' (', 'lineStart', 1, ')']\n   ],\n\n   classReport:\n   [\n      ['Class: ', 'name', 0],\n      [' (', 'lineStart', 1, ')']\n   ],\n\n   entryPrepend: '',\n\n   moduleMethod:\n   [\n      ['Module method: ', 'name', 0],\n      [' (', 'lineStart', 1, ')']\n   ],\n\n   moduleReport:\n   [\n      '\\n',\n      ['Module ', '___modulecntrplus1___', 1, ':'],\n      ['   filePath: ', 'filePath', 1],\n      ['   srcPath: ', 'srcPath', 1],\n      ['   srcPathAlias: ', 'srcPathAlias', 1]\n   ],\n\n   projectResult:\n   [\n      'Project:\\n'\n   ]\n};\n",
    "___id": "T000002R000295",
    "___s": true
  },
  {
    "__docId__": 294,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatTextMinimal",
    "memberof": "src/transform/formats/text/FormatTextMinimal.js",
    "longname": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextMinimal.js",
    "importStyle": "FormatTextMinimal",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting them to plain text with just\nmodules.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatTest"
    ],
    "___id": "T000002R000296",
    "___s": true,
    "_custom_direct_subclasses": [
      "src/transform/formats/markdown/FormatMarkdownMinimal.js~FormatMarkdownMinimal"
    ],
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatTest"
    ]
  },
  {
    "__docId__": 295,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal",
    "longname": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000297",
    "___s": true
  },
  {
    "__docId__": 296,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal",
    "longname": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000298",
    "___s": true
  },
  {
    "__docId__": 297,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal",
    "longname": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000299",
    "___s": true
  },
  {
    "__docId__": 298,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal",
    "longname": "src/transform/formats/text/FormatTextMinimal.js~FormatTextMinimal#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000300",
    "___s": true
  },
  {
    "__docId__": 299,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_KEYS",
    "memberof": "src/transform/formats/text/FormatTextMinimal.js",
    "longname": "src/transform/formats/text/FormatTextMinimal.js~s_DEFAULT_KEYS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextMinimal.js",
    "importStyle": null,
    "description": "Defines the default keys to include in a minimal text representation of module / project results.",
    "lineNumber": 53,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classReport: string[], methodReport: string[], moduleReport: string[], projectResult: string[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000301",
    "___s": true
  },
  {
    "__docId__": 300,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/text/FormatTextMinimal.js",
    "longname": "src/transform/formats/text/FormatTextMinimal.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextMinimal.js",
    "importStyle": null,
    "description": "Defines the default headers as text which are inserted via spread into `StringUtil.safeStringsObject`.",
    "lineNumber": 66,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{classMethod: *[], classReport: *[], entryPrepend: string, moduleMethod: *[], moduleReport: *[], projectResult: string[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000302",
    "___s": true
  },
  {
    "__docId__": 301,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/text/FormatTextModules.js",
    "memberof": null,
    "longname": "src/transform/formats/text/FormatTextModules.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractFormatTest  from './AbstractFormatText';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting them to plain text with just\n * modules.\n */\nexport default class FormatTextModules extends AbstractFormatTest\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers), keys);\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'txt';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'text-modules';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'modules';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines markdown headers as text which are inserted via spread into `StringUtil.safeStringsObject`.\n * @type {{moduleReport: *[]}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   moduleReport:\n   [\n      ['Module ', '___modulecntrplus1___', 1, ':'],\n      ['filePath: ', 'filePath'],\n      ['srcPath: ', 'srcPath'],\n      ['srcPathAlias: ', 'srcPathAlias'],\n      '\\n'\n   ]\n};",
    "___id": "T000002R000303",
    "___s": true
  },
  {
    "__docId__": 302,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatTextModules",
    "memberof": "src/transform/formats/text/FormatTextModules.js",
    "longname": "src/transform/formats/text/FormatTextModules.js~FormatTextModules",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextModules.js",
    "importStyle": "FormatTextModules",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting them to plain text with just\nmodules.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatTest"
    ],
    "___id": "T000002R000304",
    "___s": true,
    "_custom_direct_subclasses": [
      "src/transform/formats/markdown/FormatMarkdownModules.js~FormatMarkdownModules"
    ],
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractFormatText.js~AbstractFormatTest"
    ]
  },
  {
    "__docId__": 303,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/text/FormatTextModules.js~FormatTextModules",
    "longname": "src/transform/formats/text/FormatTextModules.js~FormatTextModules#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000305",
    "___s": true
  },
  {
    "__docId__": 304,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/text/FormatTextModules.js~FormatTextModules",
    "longname": "src/transform/formats/text/FormatTextModules.js~FormatTextModules#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000306",
    "___s": true
  },
  {
    "__docId__": 305,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/text/FormatTextModules.js~FormatTextModules",
    "longname": "src/transform/formats/text/FormatTextModules.js~FormatTextModules#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000307",
    "___s": true
  },
  {
    "__docId__": 306,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/text/FormatTextModules.js~FormatTextModules",
    "longname": "src/transform/formats/text/FormatTextModules.js~FormatTextModules#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000308",
    "___s": true
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/text/FormatTextModules.js",
    "longname": "src/transform/formats/text/FormatTextModules.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextModules.js",
    "importStyle": null,
    "description": "Defines markdown headers as text which are inserted via spread into `StringUtil.safeStringsObject`.",
    "lineNumber": 52,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{moduleReport: *[]}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000309",
    "___s": true
  },
  {
    "__docId__": 308,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/transform/formats/text/FormatTextVisibility.js",
    "memberof": null,
    "longname": "src/transform/formats/text/FormatTextVisibility.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import AbstractTextMatrix  from './AbstractTextMatrix';\n\n/**\n * Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into plain text.\n */\nexport default class FormatTextVisibility extends AbstractTextMatrix\n{\n   constructor(headers = {}, keys = {})\n   {\n      super(Object.assign(Object.assign({}, s_DEFAULT_HEADERS), headers),\n       Object.assign(Object.assign({}, s_DEFAULT_KEYS), keys));\n   }\n\n   /**\n    * Gets the file extension.\n    *\n    * @returns {string}\n    */\n   get extension()\n   {\n      return 'txt';\n   }\n\n   /**\n    * Gets the format name.\n    *\n    * @returns {string}\n    */\n   get name()\n   {\n      return 'text-visibility';\n   }\n\n   /**\n    * Gets the format type.\n    *\n    * @returns {string}\n    */\n   get type()\n   {\n      return 'visibility';\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Defines the default matrix list key accessed.\n * @type {{matrixList: string}}\n * @ignore\n */\nconst s_DEFAULT_KEYS =\n{\n   matrixList: 'visibilityList'\n};\n\n/**\n * Defines the default headers added to any output strings..\n * @type {{entryPrepend: string, entryWrapper: string, textHeader: string}}\n * @ignore\n */\nconst s_DEFAULT_HEADERS =\n{\n   entryPrepend: '',\n   entryWrapper: '',\n   textHeader: 'Visibility (reverse dependents / numerical indices correspond to ProjectResult modules / reports):\\n'\n};\n",
    "___id": "T000002R000310",
    "___s": true
  },
  {
    "__docId__": 309,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FormatTextVisibility",
    "memberof": "src/transform/formats/text/FormatTextVisibility.js",
    "longname": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextVisibility.js",
    "importStyle": "FormatTextVisibility",
    "description": "Provides a format transform for ModuleReport / ProjectResult instances converting a matrix list into plain text.",
    "lineNumber": 6,
    "interface": false,
    "extends": [
      "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix"
    ],
    "___id": "T000002R000311",
    "___s": true,
    "_custom_direct_subclasses": [
      "src/transform/formats/markdown/FormatMarkdownVisibility.js~FormatMarkdownVisibility"
    ],
    "_custom_extends_chains": [
      "src/transform/formats/text/AbstractTextMatrix.js~AbstractTextMatrix"
    ]
  },
  {
    "__docId__": 310,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility",
    "longname": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility#constructor",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "headers",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "keys",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false,
    "___id": "T000002R000312",
    "___s": true
  },
  {
    "__docId__": 311,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "extension",
    "memberof": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility",
    "longname": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility#extension",
    "access": null,
    "description": "Gets the file extension.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000313",
    "___s": true
  },
  {
    "__docId__": 312,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility",
    "longname": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility#name",
    "access": null,
    "description": "Gets the format name.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000314",
    "___s": true
  },
  {
    "__docId__": 313,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility",
    "longname": "src/transform/formats/text/FormatTextVisibility.js~FormatTextVisibility#type",
    "access": null,
    "description": "Gets the format type.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false,
    "___id": "T000002R000315",
    "___s": true
  },
  {
    "__docId__": 314,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_KEYS",
    "memberof": "src/transform/formats/text/FormatTextVisibility.js",
    "longname": "src/transform/formats/text/FormatTextVisibility.js~s_DEFAULT_KEYS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextVisibility.js",
    "importStyle": null,
    "description": "Defines the default matrix list key accessed.",
    "lineNumber": 52,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{matrixList: string}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000316",
    "___s": true
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "s_DEFAULT_HEADERS",
    "memberof": "src/transform/formats/text/FormatTextVisibility.js",
    "longname": "src/transform/formats/text/FormatTextVisibility.js~s_DEFAULT_HEADERS",
    "access": null,
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/transform/formats/text/FormatTextVisibility.js",
    "importStyle": null,
    "description": "Defines the default headers added to any output strings..",
    "lineNumber": 62,
    "ignore": true,
    "type": {
      "nullable": null,
      "types": [
        "{entryPrepend: string, entryWrapper: string, textHeader: string}"
      ],
      "spread": false,
      "description": null
    },
    "___id": "T000002R000317",
    "___s": true
  },
  {
    "__docId__": 316,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/MathUtil.js",
    "memberof": null,
    "longname": "src/utils/MathUtil.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ObjectUtil from './ObjectUtil';\n\n/**\n * Provides common math utilities.\n */\nexport default class MathUtil\n{\n   /**\n    * Compacts a 2D matrix testing entries against a testValue with a default value of `1` for inclusion. The resulting\n    * compacted array only has object hash entries for rows that contain column entries that pass the test. Each entry\n    * has a `row` entry as a number corresponding to a row index and a `cols` entry which is an array of numbers\n    * representing all column indexes that pass the test. This works well for large sparse matrices.\n    *\n    * @param {Array<Array<number>>} matrix - A matrix to compact / compress.\n    * @param {*}                    testValue - A value to test strict equality to include entry for compaction.\n    *\n    * @returns {Array<{row: number, cols: Array<number>}>}\n    */\n   static compactMatrix(matrix, testValue = 1)\n   {\n      const compacted = [];\n\n      matrix.forEach((rowEntry, row) =>\n      {\n         const cols = [];\n\n         rowEntry.forEach((colEntry, colIndex) => { if (colEntry === testValue) { cols.push(colIndex); } });\n\n         if (cols.length > 0) { compacted.push({ row, cols }); }\n      });\n\n      return compacted;\n   }\n\n   /**\n    * Creates an 2-dimensional array of the given length.\n    *\n    * @param {number}   length - Array length for x / y dimensions.\n    * @param {number}   value - Default value.\n    *\n    * @return {Array<Array<number>>}\n    */\n   static create2DArray(length = 0, value = 0)\n   {\n      const array = new Array(length);\n\n      for (let cntr = 0; cntr < length; cntr++) { array[cntr] = new Array(length); }\n\n      for (let i = 0; i < length; i++)\n      {\n         for (let j = 0; j < length; j++) { array[i][j] = value; }\n      }\n\n      return array;\n   }\n\n   /**\n    * Returns the median / middle value from the given array after sorting numerically. If values length is odd the\n    * middle value in the array is returned otherwise if even two middle values are summed then divided by 2.\n    *\n    * @param {Array<number>}  values - An Array of numerical values.\n    *\n    * @returns {number}\n    */\n   static getMedian(values)\n   {\n      // Sort by number.\n      values.sort((lhs, rhs) => { return lhs - rhs; });\n\n      // Checks of values.length is odd.\n      if (values.length % 2) { return values[(values.length - 1) / 2]; }\n\n      return (values[(values.length - 2) / 2] + values[values.length / 2]) / 2;\n   }\n\n   /**\n    * Returns the percent of a given value and limit.\n    *\n    * @param {number}   value - A `value` to calculate the percentage against the given `limit`.\n    * @param {number}   limit - A base `limit` that constrains the `value`.\n    *\n    * @returns {number}\n    */\n   static getPercent(value, limit)\n   {\n      return limit === 0 ? 0 : (value / limit) * 100;\n   }\n\n   /**\n    * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n    * The result of the `toFixed` method is invoked for each leaf or array entry modifying any floating point number\n    * in place.\n    *\n    * @param {object}   data - An object or array.\n    *\n    * @returns {*}\n    */\n   static toFixedTraverse(data)\n   {\n      return ObjectUtil.depthTraverse(data, MathUtil.toFixed);\n   }\n\n   /**\n    * Converts floating point numbers to a fixed decimal length of 3. This saves space and avoids precision\n    * issues with serializing / deserializing.\n    *\n    * @param {*}  val - Any value; only floats are processed.\n    *\n    * @returns {*}\n    */\n   static toFixed(val)\n   {\n      return typeof val === 'number' && !Number.isInteger(val) ? Math.round(val * 1000) / 1000 : val;\n   }\n}",
    "___id": "T000002R000318",
    "___s": true
  },
  {
    "__docId__": 317,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MathUtil",
    "memberof": "src/utils/MathUtil.js",
    "longname": "src/utils/MathUtil.js~MathUtil",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/utils/MathUtil.js",
    "importStyle": "MathUtil",
    "description": "Provides common math utilities.",
    "lineNumber": 6,
    "interface": false,
    "___id": "T000002R000319",
    "___s": true
  },
  {
    "__docId__": 318,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "compactMatrix",
    "memberof": "src/utils/MathUtil.js~MathUtil",
    "longname": "src/utils/MathUtil.js~MathUtil.compactMatrix",
    "access": null,
    "description": "Compacts a 2D matrix testing entries against a testValue with a default value of `1` for inclusion. The resulting\ncompacted array only has object hash entries for rows that contain column entries that pass the test. Each entry\nhas a `row` entry as a number corresponding to a row index and a `cols` entry which is an array of numbers\nrepresenting all column indexes that pass the test. This works well for large sparse matrices.",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<{row: number, cols: Array<number>}>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Array<number>>"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": "<p>A matrix to compact / compress.</p>\n",
        "descriptionRaw": "A matrix to compact / compress."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "testValue",
        "description": "<p>A value to test strict equality to include entry for compaction.</p>\n",
        "descriptionRaw": "A value to test strict equality to include entry for compaction."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<{row: number, cols: Array<number>}>"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000320",
    "___s": true
  },
  {
    "__docId__": 319,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "create2DArray",
    "memberof": "src/utils/MathUtil.js~MathUtil",
    "longname": "src/utils/MathUtil.js~MathUtil.create2DArray",
    "access": null,
    "description": "Creates an 2-dimensional array of the given length.",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "<p>Array length for x / y dimensions.</p>\n",
        "descriptionRaw": "Array length for x / y dimensions."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "<p>Default value.</p>\n",
        "descriptionRaw": "Default value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Array<number>>"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000321",
    "___s": true
  },
  {
    "__docId__": 320,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getMedian",
    "memberof": "src/utils/MathUtil.js~MathUtil",
    "longname": "src/utils/MathUtil.js~MathUtil.getMedian",
    "access": null,
    "description": "Returns the median / middle value from the given array after sorting numerically. If values length is odd the\nmiddle value in the array is returned otherwise if even two middle values are summed then divided by 2.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<number>"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "<p>An Array of numerical values.</p>\n",
        "descriptionRaw": "An Array of numerical values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000322",
    "___s": true
  },
  {
    "__docId__": 321,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getPercent",
    "memberof": "src/utils/MathUtil.js~MathUtil",
    "longname": "src/utils/MathUtil.js~MathUtil.getPercent",
    "access": null,
    "description": "Returns the percent of a given value and limit.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "<p>A <code>value</code> to calculate the percentage against the given <code>limit</code>.</p>\n",
        "descriptionRaw": "A `value` to calculate the percentage against the given `limit`."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "limit",
        "description": "<p>A base <code>limit</code> that constrains the <code>value</code>.</p>\n",
        "descriptionRaw": "A base `limit` that constrains the `value`."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000323",
    "___s": true
  },
  {
    "__docId__": 322,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "toFixedTraverse",
    "memberof": "src/utils/MathUtil.js~MathUtil",
    "longname": "src/utils/MathUtil.js~MathUtil.toFixedTraverse",
    "access": null,
    "description": "Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\nThe result of the `toFixed` method is invoked for each leaf or array entry modifying any floating point number\nin place.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>An object or array.</p>\n",
        "descriptionRaw": "An object or array."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000324",
    "___s": true
  },
  {
    "__docId__": 323,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "toFixed",
    "memberof": "src/utils/MathUtil.js~MathUtil",
    "longname": "src/utils/MathUtil.js~MathUtil.toFixed",
    "access": null,
    "description": "Converts floating point numbers to a fixed decimal length of 3. This saves space and avoids precision\nissues with serializing / deserializing.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "val",
        "description": "<p>Any value; only floats are processed.</p>\n",
        "descriptionRaw": "Any value; only floats are processed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000325",
    "___s": true
  },
  {
    "__docId__": 324,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/ObjectUtil.js",
    "memberof": null,
    "longname": "src/utils/ObjectUtil.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Provides common object manipulation utilities.\n */\nexport default class ObjectUtil\n{\n   /**\n    * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n    * The result of the callback function is used to modify in place the given data.\n    *\n    * @param {object|Array}   data - An object or array.\n    * @param {function}       func - A callback function to process leaf values in children arrays or object members.\n    *\n    * @returns {*}\n    */\n   static depthTraverse(data, func)\n   {\n      /* istanbul ignore if */\n      if (typeof data !== 'object') { throw new TypeError('depthTraverse error: \\'data\\' is not an \\'object\\'.'); }\n\n      /* istanbul ignore if */\n      if (typeof func !== 'function') { throw new TypeError('depthTraverse error: \\'func\\' is not a \\'function\\'.'); }\n\n      return _depthTraverse(data, func);\n   }\n\n   /**\n    * Returns a list of accessor keys by traversing the given object.\n    *\n    * @param {object}   data - An object to traverse for accessor keys.\n    *\n    * @returns {Array}\n    */\n   static getAccessorList(data)\n   {\n      if (typeof data !== 'object') { throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`); }\n\n      return _getAccessorList(data);\n   }\n\n   /**\n    * Provides a way to safely access an objects data / entries given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * @param {object}   data - An object to access entry data.\n    * @param {string}   accessor - A string describing the entries to access.\n    * @param {*}        defaultValue - (Optional) A default value to return if an entry for accessor is not found.\n    *\n    * @returns {*}\n    */\n   static safeAccess(data, accessor, defaultValue = undefined)\n   {\n      if (typeof data !== 'object') { return defaultValue; }\n      if (typeof accessor !== 'string') { return defaultValue; }\n\n      const access = accessor.split('.');\n\n      // Walk through the given object by the accessor indexes.\n      for (let cntr = 0; cntr < access.length; cntr++)\n      {\n         // If the next level of object access is undefined or null then return the empty string.\n         if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) { return defaultValue; }\n\n         data = data[access[cntr]];\n      }\n\n      return data;\n   }\n\n   /**\n    * Provides a way to safely set an objects data / entries given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * @param {object}   data - An object to access entry data.\n    * @param {string}   accessor - A string describing the entries to access.\n    * @param {*}        value - A new value to set if an entry for accessor is found.\n    * @param {string}   operation - (Optional) Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n    *                               default (`set`).\n    *\n    * @returns {boolean} True if successful.\n    */\n   static safeSet(data, accessor, value, operation = 'set')\n   {\n      if (typeof data !== 'object') { throw new TypeError(`safeSet Error: 'data' is not an 'object'.`); }\n      if (typeof accessor !== 'string') { throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`); }\n\n      const access = accessor.split('.');\n\n      // Walk through the given object by the accessor indexes.\n      for (let cntr = 0; cntr < access.length; cntr++)\n      {\n         // If the next level of object access is undefined then create a new object entry.\n         if (typeof data[access[cntr]] === 'undefined') { data[access[cntr]] = {}; }\n\n         if (cntr === access.length - 1)\n         {\n            switch (operation)\n            {\n               case 'add':\n                  data[access[cntr]] += value;\n                  break;\n\n               case 'div':\n                  data[access[cntr]] /= value;\n                  break;\n\n               case 'mult':\n                  data[access[cntr]] *= value;\n                  break;\n\n               case 'set':\n                  data[access[cntr]] = value;\n                  break;\n\n               case 'sub':\n                  data[access[cntr]] -= value;\n                  break;\n            }\n         }\n         else\n         {\n            // Abort if the next level is null or not an object and containing a value.\n            if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') { return false; }\n\n            data = data[access[cntr]];\n         }\n      }\n\n      return true;\n   }\n}\n\n// Module private ---------------------------------------------------------------------------------------------------\n\n/**\n * Private implementation of depth traversal.\n *\n * @param {object|Array}   data - An object or array.\n * @param {function}       func - A callback function to process leaf values in children arrays or object members.\n *\n * @returns {*}\n * @ignore\n * @private\n */\nfunction _depthTraverse(data, func)\n{\n   if (Array.isArray(data))\n   {\n      for (let cntr = 0; cntr < data.length; cntr++) { data[cntr] = _depthTraverse(data[cntr], func); }\n   }\n   else if (typeof data === 'object')\n   {\n      for (const key in data) { if (data.hasOwnProperty(key)) { data[key] = _depthTraverse(data[key], func); } }\n   }\n   else\n   {\n      data = func(data);\n   }\n\n   return data;\n}\n\n/**\n * Private implementation of `getAccessorList`.\n *\n * @param {object}   data - An object to traverse.\n *\n * @returns {Array}\n * @ignore\n * @private\n */\nfunction _getAccessorList(data)\n{\n   const accessors = [];\n\n   for (const key in data)\n   {\n      if (data.hasOwnProperty(key))\n      {\n         if (typeof data[key] === 'object')\n         {\n            const childKeys = _getAccessorList(data[key]);\n\n            childKeys.forEach((childKey) =>\n            {\n               accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\n            });\n         }\n         else\n         {\n            accessors.push(key);\n         }\n      }\n   }\n\n   return accessors;\n}\n",
    "___id": "T000002R000326",
    "___s": true
  },
  {
    "__docId__": 325,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ObjectUtil",
    "memberof": "src/utils/ObjectUtil.js",
    "longname": "src/utils/ObjectUtil.js~ObjectUtil",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/utils/ObjectUtil.js",
    "importStyle": "ObjectUtil",
    "description": "Provides common object manipulation utilities.",
    "lineNumber": 4,
    "interface": false,
    "___id": "T000002R000327",
    "___s": true
  },
  {
    "__docId__": 326,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "depthTraverse",
    "memberof": "src/utils/ObjectUtil.js~ObjectUtil",
    "longname": "src/utils/ObjectUtil.js~ObjectUtil.depthTraverse",
    "access": null,
    "description": "Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\nThe result of the callback function is used to modify in place the given data.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>An object or array.</p>\n",
        "descriptionRaw": "An object or array."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "<p>A callback function to process leaf values in children arrays or object members.</p>\n",
        "descriptionRaw": "A callback function to process leaf values in children arrays or object members."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000328",
    "___s": true
  },
  {
    "__docId__": 327,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getAccessorList",
    "memberof": "src/utils/ObjectUtil.js~ObjectUtil",
    "longname": "src/utils/ObjectUtil.js~ObjectUtil.getAccessorList",
    "access": null,
    "description": "Returns a list of accessor keys by traversing the given object.",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>An object to traverse for accessor keys.</p>\n",
        "descriptionRaw": "An object to traverse for accessor keys."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000329",
    "___s": true
  },
  {
    "__docId__": 328,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "safeAccess",
    "memberof": "src/utils/ObjectUtil.js~ObjectUtil",
    "longname": "src/utils/ObjectUtil.js~ObjectUtil.safeAccess",
    "access": null,
    "description": "Provides a way to safely access an objects data / entries given an accessor string which describes the\nentries to walk. To access deeper entries into the object format the accessor string with `.` between entries\nto walk.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>An object to access entry data.</p>\n",
        "descriptionRaw": "An object to access entry data."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessor",
        "description": "<p>A string describing the entries to access.</p>\n",
        "descriptionRaw": "A string describing the entries to access."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultValue",
        "description": "<p>(Optional) A default value to return if an entry for accessor is not found.</p>\n",
        "descriptionRaw": "(Optional) A default value to return if an entry for accessor is not found."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000330",
    "___s": true
  },
  {
    "__docId__": 329,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "safeSet",
    "memberof": "src/utils/ObjectUtil.js~ObjectUtil",
    "longname": "src/utils/ObjectUtil.js~ObjectUtil.safeSet",
    "access": null,
    "description": "Provides a way to safely set an objects data / entries given an accessor string which describes the\nentries to walk. To access deeper entries into the object format the accessor string with `.` between entries\nto walk.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if successful."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "<p>An object to access entry data.</p>\n",
        "descriptionRaw": "An object to access entry data."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessor",
        "description": "<p>A string describing the entries to access.</p>\n",
        "descriptionRaw": "A string describing the entries to access."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "<p>A new value to set if an entry for accessor is found.</p>\n",
        "descriptionRaw": "A new value to set if an entry for accessor is found."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "operation",
        "description": "<p>(Optional) Operation to perform including: &#39;add&#39;, &#39;div&#39;, &#39;mult&#39;, &#39;set&#39;, &#39;sub&#39;;\n                              default (<code>set</code>).</p>\n",
        "descriptionRaw": "(Optional) Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n                              default (`set`)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "<p>True if successful.</p>\n",
      "descriptionRaw": "True if successful."
    },
    "generator": false,
    "___id": "T000002R000331",
    "___s": true
  },
  {
    "__docId__": 330,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_depthTraverse",
    "memberof": "src/utils/ObjectUtil.js",
    "longname": "src/utils/ObjectUtil.js~_depthTraverse",
    "access": "private",
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/utils/ObjectUtil.js",
    "importStyle": null,
    "description": "Private implementation of depth traversal.",
    "lineNumber": 146,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "An object or array."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "A callback function to process leaf values in children arrays or object members."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false,
    "___id": "T000002R000332",
    "___s": false
  },
  {
    "__docId__": 331,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_getAccessorList",
    "memberof": "src/utils/ObjectUtil.js",
    "longname": "src/utils/ObjectUtil.js~_getAccessorList",
    "access": "private",
    "export": false,
    "importPath": "typhonjs-escomplex-commons/src/utils/ObjectUtil.js",
    "importStyle": null,
    "description": "Private implementation of `getAccessorList`.",
    "lineNumber": 173,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "An object to traverse."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false,
    "___id": "T000002R000333",
    "___s": false
  },
  {
    "__docId__": 332,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/StringUtil.js",
    "memberof": null,
    "longname": "src/utils/StringUtil.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ObjectUtil from './ObjectUtil';\n\n/**\n * Provides common string utilities.\n */\nexport default class StringUtil\n{\n   /**\n    * Compares two strings.\n    *\n    * @param {string}   lhs - Left-hand side.\n    * @param {string}   rhs - Right-hand side.\n    *\n    * @returns {number}\n    */\n   static compare(lhs, rhs)\n   {\n      return lhs.toLowerCase().localeCompare(rhs.toLowerCase());\n   }\n\n   /**\n    * Increments the indentation amount.\n    *\n    * @param {number}   indentation - Current indentation amount.\n    * @param {number}   amount - (Optional) indentation amount; default: 3.\n    *\n    * @returns {number}\n    */\n   static incrementIndent(indentation, amount = 3)\n   {\n      return indentation + amount;\n   }\n\n   /**\n    * Creates an indentation string given the indentation amount.\n    *\n    * @param {number}   indentation - Current indentation amount.\n    * @param {string}   string - A string to append.\n    *\n    * @returns {string}\n    */\n   static indent(indentation, string = '')\n   {\n      return (new Array(indentation + 1)).join(' ') + string;\n   }\n\n   /**\n    * Provides a way to output a given string value with concatenated data from safely accessing an objects data /\n    * entries given an accessor string which describes the entries to walk. To access deeper entries into the object\n    * format the accessor string with `.` between entries to walk.\n    *\n    * @param {string}   string - A string to prepend to the object data received.\n    * @param {object}   object - An object to access entry data.\n    * @param {string}   accessor - A string describing the entries to access.\n    * @param {number}   newLine - (Optional) A number of new line characters to append; default: `1`.\n    * @param {string}   appendString - (Optional) A string to potentially append; default: `''`;\n    * @param {function} tagFunction - (Optional) A template tag function to apply; default: `void 0`;\n    *\n    * @returns {string}\n    */\n   static safeStringObject(string, object, accessor, newLine = 1, appendString = '', tagFunction = void 0)\n   {\n      const value = ObjectUtil.safeAccess(object, accessor);\n\n      if (typeof value === 'undefined') { return ''; }\n\n      let end = '\\n';\n\n      // Create the ending new line result if it is not the default of `1`.\n      if (newLine === 0 || newLine > 1) { end = new Array(newLine + 1).join('\\n'); }\n\n      return typeof tagFunction === 'function' ? tagFunction`${string}${value}${appendString}${end}` :\n       `${string}${value}${appendString}${end}`;\n   }\n\n   /**\n    * Provides a convenience method producing a block of safeStringObject results.\n    *\n    * @param {object}         object - An object to access entry data.\n    *\n    * @param {string|Array<string|number|function>}  entries -\n    *                                  Multiple arrays or strings. If the entry is not an array it will simply\n    *                                  be appended. If the entry is an array then entries in this array correspond\n    *                                  to the following parameters which are forwarded onto `safeStringObject`.\n    *                                  The indexes correspond to the following:\n    * ```\n    * [0] (string) - The string to prepend.\n    * [1] (string) - The accessor string describing the lookup operation.\n    * [2] (number) - (Optional) The number of newlines characters to append.\n    * [3] (string) - (Optional) A string to append to the end.\n    * [4] (function) - (Optional) A template tag function to apply.\n    * ```\n    *\n    * @returns {string}\n    */\n   static safeStringsObject(object, ...entries)\n   {\n      return StringUtil.safeStringsPrependObject('', object, ...entries);\n   }\n\n   /**\n    * Provides a convenience method producing a block of safeStringObject results with the option to prepend a\n    * given string.\n    *\n    * @param {*}              origPrepend - An additional value to prepend to all results.\n    *\n    * @param {object}         object - An object to access entry data.\n    *\n    * @param {string|Array<string|number|function>}  entries -\n    *                                  Multiple arrays or strings. If the entry is not an array it will simply\n    *                                  be appended. If the entry is an array then entries in this array correspond\n    *                                  to the following parameters which are forwarded onto `safeStringObject`.\n    *                                  The indexes correspond to the following:\n    * ```\n    * [0] (string) - The string to prepend.\n    * [1] (string) - The accessor string describing the lookup operation.\n    * [2] (number) - (Optional) The number of newlines characters to append.\n    * [3] (string) - (Optional) A string to append to the end.\n    * [4] (function) - (Optional) A template tag function to apply.\n    * ```\n    *\n    * @returns {string}\n    */\n   static safeStringsPrependObject(origPrepend, object, ...entries)\n   {\n      if (typeof object !== 'object') { return ''; }\n\n      const output = [];\n\n      let skipPrepend = false;\n\n      for (let cntr = 0; cntr < entries.length; cntr++)\n      {\n         const entry = entries[cntr];\n\n         // Skip prepend action if last entry did not include a new line.\n         const prepend = skipPrepend ? '' : origPrepend;\n         skipPrepend = Array.isArray(entry) && typeof entry[2] === 'number' && entry[2] === 0;\n\n         // Process an array entry otherwise simply append `entry` to output if it is a string.\n         if (Array.isArray(entry))\n         {\n            switch (entry.length)\n            {\n               case 2:\n                  output.push(StringUtil.safeStringObject(`${prepend}${entry[0]}`, object, entry[1]));\n                  break;\n\n               case 3:\n                  output.push(StringUtil.safeStringObject(`${prepend}${entry[0]}`, object, entry[1], entry[2]));\n                  break;\n\n               case 4:\n                  output.push(\n                   StringUtil.safeStringObject(`${prepend}${entry[0]}`, object, entry[1], entry[2], entry[3]));\n                  break;\n\n               case 5:\n                  output.push(StringUtil.safeStringObject(`${prepend}${entry[0]}`,\n                   object, entry[1], entry[2], entry[3], entry[4]));\n                  break;\n\n               default:\n                  throw new Error(\n                   `safeStringsPrependObject error: entry at '${cntr}' has the wrong length '${entry.length}'.`);\n            }\n         }\n         else if (typeof entry === 'string' && entry !== '')\n         {\n            output.push(`${prepend}${entry}`);\n         }\n      }\n\n      return output.join('');\n   }\n\n   /**\n    * Provides a tagged template method to escape HTML elements.\n    *\n    * @param {Array<string>}  literal - Literal components of template string.\n    * @param {Array<*>}       values - Values to substitute.\n    *\n    * @returns {string}\n    */\n   static tagEscapeHTML(literal, ...values)\n   {\n      return values.reduce((previous, value, index) =>\n      {\n         return previous + String(value).replace('<', '&lt;').replace('>', '&gt;') + literal[index + 1];\n      }, literal[0]);\n   }\n}",
    "___id": "T000002R000334",
    "___s": true
  },
  {
    "__docId__": 333,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "StringUtil",
    "memberof": "src/utils/StringUtil.js",
    "longname": "src/utils/StringUtil.js~StringUtil",
    "access": null,
    "export": true,
    "importPath": "typhonjs-escomplex-commons/src/utils/StringUtil.js",
    "importStyle": "StringUtil",
    "description": "Provides common string utilities.",
    "lineNumber": 6,
    "interface": false,
    "___id": "T000002R000335",
    "___s": true
  },
  {
    "__docId__": 334,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "compare",
    "memberof": "src/utils/StringUtil.js~StringUtil",
    "longname": "src/utils/StringUtil.js~StringUtil.compare",
    "access": null,
    "description": "Compares two strings.",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lhs",
        "description": "<p>Left-hand side.</p>\n",
        "descriptionRaw": "Left-hand side."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "rhs",
        "description": "<p>Right-hand side.</p>\n",
        "descriptionRaw": "Right-hand side."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000336",
    "___s": true
  },
  {
    "__docId__": 335,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "incrementIndent",
    "memberof": "src/utils/StringUtil.js~StringUtil",
    "longname": "src/utils/StringUtil.js~StringUtil.incrementIndent",
    "access": null,
    "description": "Increments the indentation amount.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "indentation",
        "description": "<p>Current indentation amount.</p>\n",
        "descriptionRaw": "Current indentation amount."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "<p>(Optional) indentation amount; default: 3.</p>\n",
        "descriptionRaw": "(Optional) indentation amount; default: 3."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000337",
    "___s": true
  },
  {
    "__docId__": 336,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "indent",
    "memberof": "src/utils/StringUtil.js~StringUtil",
    "longname": "src/utils/StringUtil.js~StringUtil.indent",
    "access": null,
    "description": "Creates an indentation string given the indentation amount.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "indentation",
        "description": "<p>Current indentation amount.</p>\n",
        "descriptionRaw": "Current indentation amount."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "<p>A string to append.</p>\n",
        "descriptionRaw": "A string to append."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000338",
    "___s": true
  },
  {
    "__docId__": 337,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "safeStringObject",
    "memberof": "src/utils/StringUtil.js~StringUtil",
    "longname": "src/utils/StringUtil.js~StringUtil.safeStringObject",
    "access": null,
    "description": "Provides a way to output a given string value with concatenated data from safely accessing an objects data /\nentries given an accessor string which describes the entries to walk. To access deeper entries into the object\nformat the accessor string with `.` between entries to walk.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "<p>A string to prepend to the object data received.</p>\n",
        "descriptionRaw": "A string to prepend to the object data received."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>An object to access entry data.</p>\n",
        "descriptionRaw": "An object to access entry data."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "accessor",
        "description": "<p>A string describing the entries to access.</p>\n",
        "descriptionRaw": "A string describing the entries to access."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "newLine",
        "description": "<p>(Optional) A number of new line characters to append; default: <code>1</code>.</p>\n",
        "descriptionRaw": "(Optional) A number of new line characters to append; default: `1`."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "appendString",
        "description": "<p>(Optional) A string to potentially append; default: <code>&#39;&#39;</code>;</p>\n",
        "descriptionRaw": "(Optional) A string to potentially append; default: `''`;"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "tagFunction",
        "description": "<p>(Optional) A template tag function to apply; default: <code>void 0</code>;</p>\n",
        "descriptionRaw": "(Optional) A template tag function to apply; default: `void 0`;"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000339",
    "___s": true
  },
  {
    "__docId__": 338,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "safeStringsObject",
    "memberof": "src/utils/StringUtil.js~StringUtil",
    "longname": "src/utils/StringUtil.js~StringUtil.safeStringsObject",
    "access": null,
    "description": "Provides a convenience method producing a block of safeStringObject results.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>An object to access entry data.</p>\n",
        "descriptionRaw": "An object to access entry data."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Array<string",
          "number",
          "function>"
        ],
        "spread": false,
        "optional": false,
        "name": "entries",
        "description": "<p>Multiple arrays or strings. If the entry is not an array it will simply\n                                 be appended. If the entry is an array then entries in this array correspond\n                                 to the following parameters which are forwarded onto <code>safeStringObject</code>.\n                                 The indexes correspond to the following:</p>\n<pre><code><code class=\"source-code prettyprint\">[0] (string) - The string to prepend.\n[1] (string) - The accessor string describing the lookup operation.\n[2] (number) - (Optional) The number of newlines characters to append.\n[3] (string) - (Optional) A string to append to the end.\n[4] (function) - (Optional) A template tag function to apply.</code>\n</code></pre>",
        "descriptionRaw": "Multiple arrays or strings. If the entry is not an array it will simply\n                                 be appended. If the entry is an array then entries in this array correspond\n                                 to the following parameters which are forwarded onto `safeStringObject`.\n                                 The indexes correspond to the following:\n```\n[0] (string) - The string to prepend.\n[1] (string) - The accessor string describing the lookup operation.\n[2] (number) - (Optional) The number of newlines characters to append.\n[3] (string) - (Optional) A string to append to the end.\n[4] (function) - (Optional) A template tag function to apply.\n```"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000340",
    "___s": true
  },
  {
    "__docId__": 339,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "safeStringsPrependObject",
    "memberof": "src/utils/StringUtil.js~StringUtil",
    "longname": "src/utils/StringUtil.js~StringUtil.safeStringsPrependObject",
    "access": null,
    "description": "Provides a convenience method producing a block of safeStringObject results with the option to prepend a\ngiven string.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "origPrepend",
        "description": "<p>An additional value to prepend to all results.</p>\n",
        "descriptionRaw": "An additional value to prepend to all results."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "<p>An object to access entry data.</p>\n",
        "descriptionRaw": "An object to access entry data."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "Array<string",
          "number",
          "function>"
        ],
        "spread": false,
        "optional": false,
        "name": "entries",
        "description": "<p>Multiple arrays or strings. If the entry is not an array it will simply\n                                 be appended. If the entry is an array then entries in this array correspond\n                                 to the following parameters which are forwarded onto <code>safeStringObject</code>.\n                                 The indexes correspond to the following:</p>\n<pre><code><code class=\"source-code prettyprint\">[0] (string) - The string to prepend.\n[1] (string) - The accessor string describing the lookup operation.\n[2] (number) - (Optional) The number of newlines characters to append.\n[3] (string) - (Optional) A string to append to the end.\n[4] (function) - (Optional) A template tag function to apply.</code>\n</code></pre>",
        "descriptionRaw": "Multiple arrays or strings. If the entry is not an array it will simply\n                                 be appended. If the entry is an array then entries in this array correspond\n                                 to the following parameters which are forwarded onto `safeStringObject`.\n                                 The indexes correspond to the following:\n```\n[0] (string) - The string to prepend.\n[1] (string) - The accessor string describing the lookup operation.\n[2] (number) - (Optional) The number of newlines characters to append.\n[3] (string) - (Optional) A string to append to the end.\n[4] (function) - (Optional) A template tag function to apply.\n```"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000341",
    "___s": true
  },
  {
    "__docId__": 340,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "tagEscapeHTML",
    "memberof": "src/utils/StringUtil.js~StringUtil",
    "longname": "src/utils/StringUtil.js~StringUtil.tagEscapeHTML",
    "access": null,
    "description": "Provides a tagged template method to escape HTML elements.",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "literal",
        "description": "<p>Literal components of template string.</p>\n",
        "descriptionRaw": "Literal components of template string."
      },
      {
        "nullable": null,
        "types": [
          "Array<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": "<p>Values to substitute.</p>\n",
        "descriptionRaw": "Values to substitute."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "",
      "descriptionRaw": ""
    },
    "generator": false,
    "___id": "T000002R000342",
    "___s": true
  },
  {
    "__docId__": 342,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000343",
    "___s": true
  },
  {
    "__docId__": 343,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000344",
    "___s": true
  },
  {
    "__docId__": 344,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000345",
    "___s": true
  },
  {
    "__docId__": 345,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000346",
    "___s": true
  },
  {
    "__docId__": 346,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000347",
    "___s": true
  },
  {
    "__docId__": 347,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000348",
    "___s": true
  },
  {
    "__docId__": 348,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000349",
    "___s": true
  },
  {
    "__docId__": 349,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000350",
    "___s": true
  },
  {
    "__docId__": 350,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000351",
    "___s": true
  },
  {
    "__docId__": 351,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000352",
    "___s": true
  },
  {
    "__docId__": 352,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000353",
    "___s": true
  },
  {
    "__docId__": 353,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000354",
    "___s": true
  },
  {
    "__docId__": 354,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000355",
    "___s": true
  },
  {
    "__docId__": 355,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000356",
    "___s": true
  },
  {
    "__docId__": 356,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000357",
    "___s": true
  },
  {
    "__docId__": 357,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000358",
    "___s": true
  },
  {
    "__docId__": 358,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000359",
    "___s": true
  },
  {
    "__docId__": 359,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000360",
    "___s": true
  },
  {
    "__docId__": 360,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000361",
    "___s": true
  },
  {
    "__docId__": 361,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000362",
    "___s": true
  },
  {
    "__docId__": 362,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000363",
    "___s": true
  },
  {
    "__docId__": 363,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000364",
    "___s": true
  },
  {
    "__docId__": 364,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000365",
    "___s": true
  },
  {
    "__docId__": 365,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000366",
    "___s": true
  },
  {
    "__docId__": 366,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000367",
    "___s": true
  },
  {
    "__docId__": 367,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000368",
    "___s": true
  },
  {
    "__docId__": 368,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000369",
    "___s": true
  },
  {
    "__docId__": 369,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000370",
    "___s": true
  },
  {
    "__docId__": 370,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000371",
    "___s": true
  },
  {
    "__docId__": 371,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000372",
    "___s": true
  },
  {
    "__docId__": 372,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000373",
    "___s": true
  },
  {
    "__docId__": 373,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000374",
    "___s": true
  },
  {
    "__docId__": 374,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000375",
    "___s": true
  },
  {
    "__docId__": 375,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000376",
    "___s": true
  },
  {
    "__docId__": 376,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000377",
    "___s": true
  },
  {
    "__docId__": 377,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000378",
    "___s": true
  },
  {
    "__docId__": 378,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000379",
    "___s": true
  },
  {
    "__docId__": 379,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000380",
    "___s": true
  },
  {
    "__docId__": 380,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000381",
    "___s": true
  },
  {
    "__docId__": 381,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000382",
    "___s": true
  },
  {
    "__docId__": 382,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000383",
    "___s": true
  },
  {
    "__docId__": 383,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000384",
    "___s": true
  },
  {
    "__docId__": 384,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000385",
    "___s": true
  },
  {
    "__docId__": 385,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000386",
    "___s": true
  },
  {
    "__docId__": 386,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000387",
    "___s": true
  },
  {
    "__docId__": 387,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000388",
    "___s": true
  },
  {
    "__docId__": 388,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true,
    "___id": "T000002R000389",
    "___s": true
  },
  {
    "__docId__": 390,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000390",
    "___s": true
  },
  {
    "__docId__": 391,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000391",
    "___s": true
  },
  {
    "__docId__": 392,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000392",
    "___s": true
  },
  {
    "__docId__": 393,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000393",
    "___s": true
  },
  {
    "__docId__": 394,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000394",
    "___s": true
  },
  {
    "__docId__": 395,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000395",
    "___s": true
  },
  {
    "__docId__": 396,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true,
    "___id": "T000002R000396",
    "___s": true
  },
  {
    "__docId__": 397,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true,
    "___id": "T000002R000397",
    "___s": true
  },
  {
    "__docId__": 398,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/module/plugin.js",
    "memberof": null,
    "longname": "src/module/plugin.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { assert }             from 'chai';\n\nimport AbstractSyntaxLoader   from '../../../src/module/plugin/syntax/AbstractSyntaxLoader';\n\nimport * as testconfig        from '../testconfig';\n\nclass Parent extends AbstractSyntaxLoader\n{\n   ParentOne() { return {}; }\n   ParentTwo() { return {}; }\n}\n\nclass Child extends Parent\n{\n   onConfigure() { return {}; } // This is ignored by AbstractSyntaxLoader.\n   ChildThree() { return {}; }\n   ChildFour() { return {}; }\n}\n\nif (testconfig.modules['modulePlugin'])\n{\n   suite('plugin:', () =>\n   {\n      /**\n       * Verifies that AbstractSyntaxLoader can find all child / parent inheritance methods\n       */\n      suite('syntax (AbstractSyntaxLoader):', () =>\n      {\n         const instance = new Child();\n\n         test('verify child / parent syntax loading', () =>\n         {\n            const event = { data: { settings: {}, syntaxes: {} } };\n            instance.onLoadSyntax(event);\n\n            assert.isUndefined(event.data.syntaxes['onConfigure']);\n\n            assert.isObject(event.data.syntaxes['ChildThree']);\n            assert.isObject(event.data.syntaxes['ChildFour']);\n            assert.isObject(event.data.syntaxes['ParentOne']);\n            assert.isObject(event.data.syntaxes['ParentTwo']);\n         });\n      });\n   });\n}",
    "___id": "T000002R000398",
    "___s": true
  },
  {
    "__docId__": 399,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite0",
    "testId": 0,
    "memberof": "src/module/plugin.js",
    "testDepth": 0,
    "longname": "src/module/plugin.js~suite0",
    "access": null,
    "description": "plugin:",
    "lineNumber": 22,
    "___id": "T000002R000399",
    "___s": true
  },
  {
    "__docId__": 400,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite1",
    "testId": 1,
    "memberof": "src/module/plugin.js~suite0",
    "testDepth": 1,
    "longname": "src/module/plugin.js~suite0.suite1",
    "access": null,
    "description": "Verifies that AbstractSyntaxLoader can find all child / parent inheritance methods",
    "lineNumber": 27,
    "___id": "T000002R000400",
    "___s": true
  },
  {
    "__docId__": 401,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test2",
    "testId": 2,
    "memberof": "src/module/plugin.js~suite0.suite1",
    "testDepth": 2,
    "longname": "src/module/plugin.js~suite0.suite1.test2",
    "access": null,
    "description": "verify child / parent syntax loading",
    "lineNumber": 31,
    "___id": "T000002R000401",
    "___s": true
  },
  {
    "__docId__": 402,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/module/report.js",
    "memberof": null,
    "longname": "src/module/report.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { assert }       from 'chai';\n\nimport ClassReport      from '../../../src/module/report/ClassReport';\nimport MethodReport     from '../../../src/module/report/MethodReport';\nimport ModuleReport     from '../../../src/module/report/ModuleReport';\n\nimport * as testconfig  from '../testconfig';\n\nif (testconfig.modules['moduleReport'])\n{\n   suite('report:', () =>\n   {\n      suite('ModuleReport:', () =>\n      {\n         suite('instantiation:', () =>\n         {\n            let report;\n\n            setup(() => { report = new ModuleReport(10, 100); });\n            teardown(() => { report = undefined; });\n\n            test('report has correct line start / end', () =>\n            {\n               assert.strictEqual(report.lineStart, 10);\n               assert.strictEqual(report.lineEnd, 100);\n            });\n         });\n\n         suite('addDependencies:', () =>\n         {\n            let report;\n\n            setup(() => { report = new ModuleReport(10, 100); });\n            teardown(() => { report = undefined; });\n\n            test('report has correct dependencies', () =>\n            {\n               report.addDependencies({ type: 'esm' });\n\n               assert.lengthOf(report.dependencies, 1);\n            });\n         });\n\n         suite('createScope / popScope:', () =>\n         {\n            let report;\n\n            setup(() => { report = new ModuleReport(10, 100); });\n            teardown(() => { report = undefined; });\n\n            test('report has correct class scope', () =>\n            {\n               assert.isUndefined(report.getCurrentClassReport());\n\n               let classReport = report.createScope('class', 100, 200);\n               let classReport2 = report.getCurrentClassReport();\n\n               assert.instanceOf(classReport, ClassReport);\n               assert.instanceOf(classReport2, ClassReport);\n\n               assert.lengthOf(report.classes, 1);\n\n               assert.strictEqual(classReport, classReport2);\n\n               classReport = report.popScope('class');\n               classReport2 = report.getCurrentClassReport();\n\n               assert.isUndefined(classReport);\n               assert.isUndefined(classReport2);\n            });\n\n            test('report has correct method scope', () =>\n            {\n               assert.isUndefined(report.getCurrentMethodReport());\n\n               let methodReport = report.createScope('method', 100, 200);\n               let methodReport2 = report.getCurrentMethodReport();\n\n               assert.instanceOf(methodReport, MethodReport);\n               assert.instanceOf(methodReport2, MethodReport);\n\n               assert.lengthOf(report.methods, 1);\n\n               assert.strictEqual(methodReport, methodReport2);\n\n               methodReport = report.popScope('method');\n               methodReport2 = report.getCurrentMethodReport();\n\n               assert.isUndefined(methodReport);\n               assert.isUndefined(methodReport2);\n            });\n\n            test('report has correct class w/ method scope', () =>\n            {\n               report.createScope('class', 100, 200);\n               report.createScope('method', 100, 200, 4);\n\n               assert.lengthOf(report.classes, 1);\n               assert.lengthOf(report.classes[0].methods, 1);\n\n               assert.lengthOf(report.methods, 0);\n            });\n\n            test('error thrown for unknown scope type', () =>\n            {\n               assert.throws(() => { report.createScope('unknown', 100, 200); });\n               assert.throws(() => { report.popScope('unknown'); });\n            });\n\n            test('finalize removes `_methodReport`', () =>\n            {\n               assert.isObject(report._methodReport);\n               report.finalize();\n               assert.isNotObject(report._methodReport);\n            });\n         });\n\n         suite('halsteadItemEncountered:', () =>\n         {\n            let report;\n\n            setup(() => { report = new ModuleReport(10, 100); });\n            teardown(() => { report = undefined; });\n\n            test('report has correct class w/ method halstead metrics', () =>\n            {\n               report.createScope('class', 100, 200);\n               report.createScope('method', 100, 200, 0);\n\n               report.halsteadItemEncountered('operators', 'test');\n\n               assert.strictEqual(report.aggregate.halstead.operators.identifiers[0], 'test');\n               assert.strictEqual(report.classes[0].aggregate.halstead.operators.identifiers[0], 'test');\n               assert.strictEqual(report.classes[0].methods[0].halstead.operators.identifiers[0], 'test');\n            });\n         });\n\n         suite('incrementCyclomatic:', () =>\n         {\n            let report;\n\n            setup(() => { report = new ModuleReport(10, 100); });\n            teardown(() => { report = undefined; });\n\n            test('report has correct class w/ method cyclomatic metrics', () =>\n            {\n               report.createScope('class', 100, 200);\n               report.createScope('method', 100, 200, 0);\n\n               report.incrementCyclomatic(50);\n\n               assert.strictEqual(report.aggregate.cyclomatic, 51);\n               assert.strictEqual(report.classes[0].aggregate.cyclomatic, 51);\n               assert.strictEqual(report.classes[0].methods[0].cyclomatic, 51);\n            });\n         });\n\n         suite('incrementLogicalSloc:', () =>\n         {\n            let report;\n\n            setup(() => { report = new ModuleReport(10, 100); });\n            teardown(() => { report = undefined; });\n\n            test('report has correct class w/ method sloc metrics', () =>\n            {\n               report.createScope('class', 100, 200);\n               report.createScope('method', 100, 200, 0);\n\n               report.incrementLogicalSloc(50);\n\n               assert.strictEqual(report.aggregate.sloc.logical, 50);\n               assert.strictEqual(report.classes[0].aggregate.sloc.logical, 50);\n               assert.strictEqual(report.classes[0].methods[0].sloc.logical, 50);\n            });\n         });\n      });\n\n      suite('AbstractReport:', () =>\n      {\n         let report;\n\n         setup(() => { report = new ModuleReport(10, 100); });\n         teardown(() => { report = undefined; });\n\n         test('report aggregate has correct params count', () =>\n         {\n            report.incrementParams(20);\n            assert.strictEqual(report.aggregate.params, 20);\n         });\n      });\n\n      suite('HalsteadData:', () =>\n      {\n         let report;\n\n         setup(() => { report = new ModuleReport(10, 100); });\n         teardown(() => { report = undefined; });\n\n         test('report aggregate halstead data is reset', () =>\n         {\n            report.aggregate.halstead.bugs = 1000;\n            report.aggregate.halstead.operands.distinct = 1000;\n            report.aggregate.halstead.operands.identifiers.push('test');\n            report.aggregate.halstead.reset(true);\n            assert.strictEqual(report.aggregate.halstead.bugs, 0);\n            assert.strictEqual(report.aggregate.halstead.operands.distinct, 0);\n            assert.lengthOf(report.aggregate.halstead.operands.identifiers, 0);\n         });\n      });\n   });\n}",
    "___id": "T000002R000402",
    "___s": true
  },
  {
    "__docId__": 403,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite3",
    "testId": 3,
    "memberof": "src/module/report.js",
    "testDepth": 0,
    "longname": "src/module/report.js~suite3",
    "access": null,
    "description": "report:",
    "lineNumber": 11,
    "___id": "T000002R000403",
    "___s": true
  },
  {
    "__docId__": 404,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite4",
    "testId": 4,
    "memberof": "src/module/report.js~suite3",
    "testDepth": 1,
    "longname": "src/module/report.js~suite3.suite4",
    "access": null,
    "description": "ModuleReport:",
    "lineNumber": 13,
    "___id": "T000002R000404",
    "___s": true
  },
  {
    "__docId__": 405,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite5",
    "testId": 5,
    "memberof": "src/module/report.js~suite3.suite4",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite4.suite5",
    "access": null,
    "description": "instantiation:",
    "lineNumber": 15,
    "___id": "T000002R000405",
    "___s": true
  },
  {
    "__docId__": 406,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test6",
    "testId": 6,
    "memberof": "src/module/report.js~suite3.suite4.suite5",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite5.test6",
    "access": null,
    "description": "report has correct line start / end",
    "lineNumber": 22,
    "___id": "T000002R000406",
    "___s": true
  },
  {
    "__docId__": 407,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite7",
    "testId": 7,
    "memberof": "src/module/report.js~suite3.suite4",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite4.suite7",
    "access": null,
    "description": "addDependencies:",
    "lineNumber": 29,
    "___id": "T000002R000407",
    "___s": true
  },
  {
    "__docId__": 408,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test8",
    "testId": 8,
    "memberof": "src/module/report.js~suite3.suite4.suite7",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite7.test8",
    "access": null,
    "description": "report has correct dependencies",
    "lineNumber": 36,
    "___id": "T000002R000408",
    "___s": true
  },
  {
    "__docId__": 409,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite9",
    "testId": 9,
    "memberof": "src/module/report.js~suite3.suite4",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite4.suite9",
    "access": null,
    "description": "createScope / popScope:",
    "lineNumber": 44,
    "___id": "T000002R000409",
    "___s": true
  },
  {
    "__docId__": 410,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test10",
    "testId": 10,
    "memberof": "src/module/report.js~suite3.suite4.suite9",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite9.test10",
    "access": null,
    "description": "report has correct class scope",
    "lineNumber": 51,
    "___id": "T000002R000410",
    "___s": true
  },
  {
    "__docId__": 411,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test11",
    "testId": 11,
    "memberof": "src/module/report.js~suite3.suite4.suite9",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite9.test11",
    "access": null,
    "description": "report has correct method scope",
    "lineNumber": 72,
    "___id": "T000002R000411",
    "___s": true
  },
  {
    "__docId__": 412,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test12",
    "testId": 12,
    "memberof": "src/module/report.js~suite3.suite4.suite9",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite9.test12",
    "access": null,
    "description": "report has correct class w/ method scope",
    "lineNumber": 93,
    "___id": "T000002R000412",
    "___s": true
  },
  {
    "__docId__": 413,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test13",
    "testId": 13,
    "memberof": "src/module/report.js~suite3.suite4.suite9",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite9.test13",
    "access": null,
    "description": "error thrown for unknown scope type",
    "lineNumber": 104,
    "___id": "T000002R000413",
    "___s": true
  },
  {
    "__docId__": 414,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test14",
    "testId": 14,
    "memberof": "src/module/report.js~suite3.suite4.suite9",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite9.test14",
    "access": null,
    "description": "finalize removes `_methodReport`",
    "lineNumber": 110,
    "___id": "T000002R000414",
    "___s": true
  },
  {
    "__docId__": 415,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite15",
    "testId": 15,
    "memberof": "src/module/report.js~suite3.suite4",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite4.suite15",
    "access": null,
    "description": "halsteadItemEncountered:",
    "lineNumber": 118,
    "___id": "T000002R000415",
    "___s": true
  },
  {
    "__docId__": 416,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test16",
    "testId": 16,
    "memberof": "src/module/report.js~suite3.suite4.suite15",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite15.test16",
    "access": null,
    "description": "report has correct class w/ method halstead metrics",
    "lineNumber": 125,
    "___id": "T000002R000416",
    "___s": true
  },
  {
    "__docId__": 417,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite17",
    "testId": 17,
    "memberof": "src/module/report.js~suite3.suite4",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite4.suite17",
    "access": null,
    "description": "incrementCyclomatic:",
    "lineNumber": 138,
    "___id": "T000002R000417",
    "___s": true
  },
  {
    "__docId__": 418,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test18",
    "testId": 18,
    "memberof": "src/module/report.js~suite3.suite4.suite17",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite17.test18",
    "access": null,
    "description": "report has correct class w/ method cyclomatic metrics",
    "lineNumber": 145,
    "___id": "T000002R000418",
    "___s": true
  },
  {
    "__docId__": 419,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite19",
    "testId": 19,
    "memberof": "src/module/report.js~suite3.suite4",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite4.suite19",
    "access": null,
    "description": "incrementLogicalSloc:",
    "lineNumber": 158,
    "___id": "T000002R000419",
    "___s": true
  },
  {
    "__docId__": 420,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test20",
    "testId": 20,
    "memberof": "src/module/report.js~suite3.suite4.suite19",
    "testDepth": 3,
    "longname": "src/module/report.js~suite3.suite4.suite19.test20",
    "access": null,
    "description": "report has correct class w/ method sloc metrics",
    "lineNumber": 165,
    "___id": "T000002R000420",
    "___s": true
  },
  {
    "__docId__": 421,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite21",
    "testId": 21,
    "memberof": "src/module/report.js~suite3",
    "testDepth": 1,
    "longname": "src/module/report.js~suite3.suite21",
    "access": null,
    "description": "AbstractReport:",
    "lineNumber": 179,
    "___id": "T000002R000421",
    "___s": true
  },
  {
    "__docId__": 422,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test22",
    "testId": 22,
    "memberof": "src/module/report.js~suite3.suite21",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite21.test22",
    "access": null,
    "description": "report aggregate has correct params count",
    "lineNumber": 186,
    "___id": "T000002R000422",
    "___s": true
  },
  {
    "__docId__": 423,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite23",
    "testId": 23,
    "memberof": "src/module/report.js~suite3",
    "testDepth": 1,
    "longname": "src/module/report.js~suite3.suite23",
    "access": null,
    "description": "HalsteadData:",
    "lineNumber": 193,
    "___id": "T000002R000423",
    "___s": true
  },
  {
    "__docId__": 424,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test24",
    "testId": 24,
    "memberof": "src/module/report.js~suite3.suite23",
    "testDepth": 2,
    "longname": "src/module/report.js~suite3.suite23.test24",
    "access": null,
    "description": "report aggregate halstead data is reset",
    "lineNumber": 200,
    "___id": "T000002R000424",
    "___s": true
  },
  {
    "__docId__": 425,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/module/traits.js",
    "memberof": null,
    "longname": "src/module/traits.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { assert }       from 'chai';\n\nimport HalsteadArray    from '../../../src/module/traits/HalsteadArray';\nimport ModuleReport     from '../../../src/module/report/ModuleReport';\nimport Trait            from '../../../src/module/traits/Trait';\nimport TraitHalstead    from '../../../src/module/traits/TraitHalstead';\n\nimport actualize        from '../../../src/module/traits/actualize';\nimport safeName         from '../../../src/module/traits/safeName';\n\nimport * as testconfig  from '../testconfig';\n\nif (testconfig.modules['moduleTraits'])\n{\n   suite('traits:', () =>\n   {\n      suite('actualize:', () =>\n      {\n         suite('string arguments:', () =>\n         {\n            let result;\n\n            setup(() => { result = actualize('koda', 'basanda', 'bosoya', 'umahasha', 'tikki', 'ottobo', 'boshatta'); });\n            teardown(() => { result = undefined; });\n\n            test('result was object', () =>\n            {\n               assert.isObject(result);\n            });\n\n            test('lloc was correct', () =>\n            {\n               assert.instanceOf(result.lloc, Trait);\n               assert.strictEqual(result.lloc.metric, 'lloc');\n               assert.strictEqual(result.lloc.type, 'string');\n               assert.strictEqual(result.lloc.valueOf(), 'koda');\n            });\n\n            test('cyclomatic was correct', () =>\n            {\n               assert.instanceOf(result.cyclomatic, Trait);\n               assert.strictEqual(result.cyclomatic.metric, 'cyclomatic');\n               assert.strictEqual(result.cyclomatic.type, 'string');\n               assert.strictEqual(result.cyclomatic.valueOf(), 'basanda');\n            });\n\n            test('operators was correct', () =>\n            {\n               assert.instanceOf(result.operators, HalsteadArray);\n               assert.strictEqual(result.operators.length, 1);\n               assert.strictEqual(result.operators.metric, 'operators');\n               assert.strictEqual(result.operators.type, 'object');\n               assert.instanceOf(result.operators.get(0), TraitHalstead);\n               assert.strictEqual(result.operators.get(0).type, 'object');\n               assert.strictEqual(result.operators.get(0).valueOf(), 'bosoya');\n               assert.strictEqual(result.operators.get(0).filter(), true);\n            });\n\n            test('operands was correct', () =>\n            {\n               assert.instanceOf(result.operands, HalsteadArray);\n               assert.strictEqual(result.operands.length, 1);\n               assert.strictEqual(result.operands.metric, 'operands');\n               assert.strictEqual(result.operands.type, 'object');\n               assert.instanceOf(result.operands.get(0), TraitHalstead);\n               assert.strictEqual(result.operands.get(0).type, 'object');\n               assert.strictEqual(result.operands.get(0).valueOf(), 'umahasha');\n               assert.strictEqual(result.operands.get(0).filter(), true);\n            });\n\n            test('ignoreKeys was correct', () =>\n            {\n               assert.instanceOf(result.ignoreKeys, Trait);\n               assert.strictEqual(result.ignoreKeys.metric, 'ignoreKeys');\n               assert.strictEqual(result.ignoreKeys.type, 'object');\n               assert.isArray(result.ignoreKeys.valueOf());\n               assert.lengthOf(result.ignoreKeys.valueOf(), 1);\n               assert.strictEqual(result.ignoreKeys.valueOf()[0], 'tikki');\n            });\n\n            test('newScope was correct', () =>\n            {\n               assert.instanceOf(result.newScope, Trait);\n               assert.strictEqual(result.newScope.metric, 'newScope');\n               assert.strictEqual(result.newScope.type, 'string');\n               assert.strictEqual(result.newScope.valueOf(), 'ottobo');\n            });\n\n            test('dependencies was correct', () =>\n            {\n               assert.instanceOf(result.dependencies, Trait);\n               assert.strictEqual(result.dependencies.metric, 'dependencies');\n               assert.strictEqual(result.dependencies.type, 'string');\n               assert.strictEqual(result.dependencies.valueOf(), 'boshatta');\n            });\n         });\n\n         suite('array arguments:', () =>\n         {\n            let result;\n\n            setup(() => { result = actualize('1', '2', ['3'], ['4'], ['5'], '6', '7'); });\n            teardown(() => { result = undefined; });\n\n            test('lloc was correct', () =>\n            {\n               assert.strictEqual(result.lloc.valueOf(), '1');\n            });\n\n            test('cyclomatic was correct', () =>\n            {\n               assert.strictEqual(result.cyclomatic.valueOf(), '2');\n            });\n\n            test('ignoreKeys was correct', () =>\n            {\n               assert.isArray(result.ignoreKeys.valueOf());\n               assert.lengthOf(result.ignoreKeys.valueOf(), 1);\n               assert.strictEqual(result.ignoreKeys.valueOf()[0], '5');\n            });\n\n            test('newScope was correct', () =>\n            {\n               assert.strictEqual(result.newScope.valueOf(), '6');\n            });\n\n            test('dependencies was correct', () =>\n            {\n               assert.strictEqual(result.dependencies.valueOf(), '7');\n            });\n         });\n\n         suite('no arguments:', () =>\n         {\n            let result;\n\n            setup(() => { result = actualize(); });\n\n            teardown(() => { result = undefined; });\n\n            test('ignoreKeys was correct', () =>\n            {\n               assert.isArray(result.ignoreKeys.valueOf());\n               assert.lengthOf(result.ignoreKeys.valueOf(), 0);\n            });\n         });\n      });\n\n      suite('safeName:', () =>\n      {\n         suite('parsing is correct:', () =>\n         {\n            test('result with no parameters return `<anonymous>`', () =>\n            {\n               const result = safeName();\n               assert.strictEqual(result, '<anonymous>');\n            });\n\n            test('result with null data and default value', () =>\n            {\n               const result = safeName(null, 'default');\n               assert.strictEqual(result, 'default');\n            });\n\n            test('result with `object.name`', () =>\n            {\n               const result = safeName({ name: 'safe!' }, 'default');\n               assert.strictEqual(result, 'safe!');\n            });\n         });\n      });\n\n      suite('HalsteadArray:', () =>\n      {\n         suite('no identifiers:', () =>\n         {\n            let result;\n\n            setup(() => { result = new HalsteadArray('operators', []); });\n            teardown(() => { result = undefined; });\n\n            test('result was empty', () =>\n            {\n               assert.strictEqual(result.length, 0);\n            });\n\n            test('result metric is correct', () =>\n            {\n               assert.strictEqual(result.metric, 'operators');\n            });\n         });\n\n         suite('one identifier:', () =>\n         {\n            let result;\n\n            setup(() => { result = new HalsteadArray('operators', ['foo']); });\n            teardown(() => { result = undefined; });\n\n            test('result contained one item', () =>\n            {\n               assert.strictEqual(result.length, 1);\n            });\n\n            test('result forEach', () =>\n            {\n               result.forEach((traitHalstead) => { assert.strictEqual(traitHalstead.valueOf(), 'foo'); });\n            });\n\n            test('first item was correct', () =>\n            {\n               assert.instanceOf(result.get(0), TraitHalstead);\n               assert.strictEqual(result.get(0).valueOf('unused'), 'foo');\n            });\n         });\n\n         suite('two identifiers:', () =>\n         {\n            let result;\n\n            setup(() => { result = new HalsteadArray('operators', ['bar', 'baz']); });\n            teardown(() => { result = undefined; });\n\n            test('result contained two items', () =>\n            {\n               assert.strictEqual(result.length, 2);\n            });\n\n            test('first item was correct', () =>\n            {\n               assert.instanceOf(result.get(0), TraitHalstead);\n               assert.strictEqual(result.get(0).metric, 'operators');\n               assert.strictEqual(result.get(0).valueOf(), 'bar');\n            });\n\n            test('second item was correct', () =>\n            {\n               assert.instanceOf(result.get(1), TraitHalstead);\n               assert.strictEqual(result.get(1).metric, 'operators');\n               assert.strictEqual(result.get(1).valueOf(), 'baz');\n            });\n         });\n\n         suite('multiple identifiers / raw TraitHalstead function data (undefined data posts warning!):', () =>\n         {\n            let result;\n\n            setup(() =>\n            {\n               result = new HalsteadArray('operators',\n                [() => { return null; }, () => { return 222; }, 'foo', () => { return [undefined, true]; }]);\n            });\n\n            teardown(() => { result = undefined; });\n\n            test('result contained two items', () =>\n            {\n               assert.strictEqual(result.length, 4);\n            });\n\n            test('1st item was correct', () =>\n            {\n               assert.instanceOf(result.get(0), TraitHalstead);\n               assert.strictEqual(result.get(0).metric, 'operators');\n               assert.strictEqual(result.get(0).valueOf(), null);\n            });\n\n            test('2nd item was correct', () =>\n            {\n               assert.instanceOf(result.get(1), TraitHalstead);\n               assert.strictEqual(result.get(1).metric, 'operators');\n               assert.strictEqual(result.get(1).valueOf(), 222);\n            });\n\n            test('3rd item was correct', () =>\n            {\n               assert.instanceOf(result.get(2), TraitHalstead);\n               assert.strictEqual(result.get(2).metric, 'operators');\n               assert.strictEqual(result.get(2).valueOf(), 'foo');\n            });\n\n            test('4th item was correct', () =>\n            {\n               assert.instanceOf(result.get(3), TraitHalstead);\n               assert.strictEqual(result.get(3).metric, 'operators');\n               assert.isArray(result.get(3).valueOf());\n               assert.strictEqual(result.get(3).valueOf()[0], undefined);\n               assert.strictEqual(result.get(3).valueOf()[1], true);\n            });\n\n            test('HalsteadArray valueOf converts raw data to strings', () =>\n            {\n               const halsteadItems = result.valueOf();\n\n               assert.isArray(halsteadItems);\n               assert.lengthOf(halsteadItems, 5);\n               assert.strictEqual(halsteadItems[0], 'null');\n               assert.strictEqual(halsteadItems[1], '222');\n               assert.strictEqual(halsteadItems[2], 'foo');\n               assert.strictEqual(halsteadItems[3], 'undefined');\n               assert.strictEqual(halsteadItems[4], 'true');\n            });\n         });\n\n         suite('process report:', () =>\n         {\n            test('report contains correct operator identifiers', () =>\n            {\n               // Note the 3rd identifier has a filter method to skip processing.\n               const halsteadArray = new HalsteadArray('operators',\n                ['foo', 'bar', ['baz', 'biz'], { identifier: 'ignored', filter: () => { return false; } }]);\n\n               const report = new ModuleReport(0, 0);\n\n               report.processHalsteadItems('operators', halsteadArray.valueOf('unused'));\n\n               report.finalize();\n\n               assert.lengthOf(report.aggregate.halstead.operators.identifiers, 4);\n               assert.strictEqual(report.aggregate.halstead.operators.identifiers[0], 'foo');\n               assert.strictEqual(report.aggregate.halstead.operators.identifiers[1], 'bar');\n               assert.strictEqual(report.aggregate.halstead.operators.identifiers[2], 'baz');\n               assert.strictEqual(report.aggregate.halstead.operators.identifiers[3], 'biz');\n            });\n         });\n\n         suite('valueOf:', () =>\n         {\n            test('HalsteadArray valueOf contains correct operator identifiers', () =>\n            {\n               // Note the 3rd identifier has a filter method to skip processing.\n               const halsteadArray = new HalsteadArray('operators',\n                ['foo', 'bar', ['baz', 'biz'], { identifier: 'ignored', filter: () => { return false; } }]);\n\n               const result = halsteadArray.valueOf('unused');\n\n               assert.lengthOf(result, 4);\n               assert.strictEqual(result[0], 'foo');\n               assert.strictEqual(result[1], 'bar');\n               assert.strictEqual(result[2], 'baz');\n               assert.strictEqual(result[3], 'biz');\n            });\n\n            test('HalsteadArray valueOf contains correct operator identifiers w/ function values as strings', () =>\n            {\n               // Note the 3rd identifier has a filter method to skip processing.\n               const halsteadArray = new HalsteadArray('operators',\n                ['foo', 'bar', ['baz', 'biz'], () => { return null; }, () => { return [111, 222]; }]);\n\n               const result = halsteadArray.valueOf();\n\n               assert.lengthOf(result, 7);\n               assert.strictEqual(result[0], 'foo');\n               assert.strictEqual(result[1], 'bar');\n               assert.strictEqual(result[2], 'baz');\n               assert.strictEqual(result[3], 'biz');\n               assert.strictEqual(result[4], 'null');\n               assert.strictEqual(result[5], '111');\n               assert.strictEqual(result[6], '222');\n            });\n         });\n      });\n\n      suite('Trait:', () =>\n      {\n         suite('with function / params:', () =>\n         {\n            let result;\n\n            setup(() => { result = new Trait('a trait', (value) => { return value; }); });\n            teardown(() => { result = undefined; });\n\n            test('result with function / params is correct', () =>\n            {\n               assert.strictEqual(result.valueOf('foobar'), 'foobar');\n            });\n         });\n      });\n   });\n}",
    "___id": "T000002R000425",
    "___s": true
  },
  {
    "__docId__": 426,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite25",
    "testId": 25,
    "memberof": "src/module/traits.js",
    "testDepth": 0,
    "longname": "src/module/traits.js~suite25",
    "access": null,
    "description": "traits:",
    "lineNumber": 15,
    "___id": "T000002R000426",
    "___s": true
  },
  {
    "__docId__": 427,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite26",
    "testId": 26,
    "memberof": "src/module/traits.js~suite25",
    "testDepth": 1,
    "longname": "src/module/traits.js~suite25.suite26",
    "access": null,
    "description": "actualize:",
    "lineNumber": 17,
    "___id": "T000002R000427",
    "___s": true
  },
  {
    "__docId__": 428,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite27",
    "testId": 27,
    "memberof": "src/module/traits.js~suite25.suite26",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite26.suite27",
    "access": null,
    "description": "string arguments:",
    "lineNumber": 19,
    "___id": "T000002R000428",
    "___s": true
  },
  {
    "__docId__": 429,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test28",
    "testId": 28,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test28",
    "access": null,
    "description": "result was object",
    "lineNumber": 26,
    "___id": "T000002R000429",
    "___s": true
  },
  {
    "__docId__": 430,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test29",
    "testId": 29,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test29",
    "access": null,
    "description": "lloc was correct",
    "lineNumber": 31,
    "___id": "T000002R000430",
    "___s": true
  },
  {
    "__docId__": 431,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test30",
    "testId": 30,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test30",
    "access": null,
    "description": "cyclomatic was correct",
    "lineNumber": 39,
    "___id": "T000002R000431",
    "___s": true
  },
  {
    "__docId__": 432,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test31",
    "testId": 31,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test31",
    "access": null,
    "description": "operators was correct",
    "lineNumber": 47,
    "___id": "T000002R000432",
    "___s": true
  },
  {
    "__docId__": 433,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test32",
    "testId": 32,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test32",
    "access": null,
    "description": "operands was correct",
    "lineNumber": 59,
    "___id": "T000002R000433",
    "___s": true
  },
  {
    "__docId__": 434,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test33",
    "testId": 33,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test33",
    "access": null,
    "description": "ignoreKeys was correct",
    "lineNumber": 71,
    "___id": "T000002R000434",
    "___s": true
  },
  {
    "__docId__": 435,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test34",
    "testId": 34,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test34",
    "access": null,
    "description": "newScope was correct",
    "lineNumber": 81,
    "___id": "T000002R000435",
    "___s": true
  },
  {
    "__docId__": 436,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test35",
    "testId": 35,
    "memberof": "src/module/traits.js~suite25.suite26.suite27",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite27.test35",
    "access": null,
    "description": "dependencies was correct",
    "lineNumber": 89,
    "___id": "T000002R000436",
    "___s": true
  },
  {
    "__docId__": 437,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite36",
    "testId": 36,
    "memberof": "src/module/traits.js~suite25.suite26",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite26.suite36",
    "access": null,
    "description": "array arguments:",
    "lineNumber": 98,
    "___id": "T000002R000437",
    "___s": true
  },
  {
    "__docId__": 438,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test37",
    "testId": 37,
    "memberof": "src/module/traits.js~suite25.suite26.suite36",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite36.test37",
    "access": null,
    "description": "lloc was correct",
    "lineNumber": 105,
    "___id": "T000002R000438",
    "___s": true
  },
  {
    "__docId__": 439,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test38",
    "testId": 38,
    "memberof": "src/module/traits.js~suite25.suite26.suite36",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite36.test38",
    "access": null,
    "description": "cyclomatic was correct",
    "lineNumber": 110,
    "___id": "T000002R000439",
    "___s": true
  },
  {
    "__docId__": 440,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test39",
    "testId": 39,
    "memberof": "src/module/traits.js~suite25.suite26.suite36",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite36.test39",
    "access": null,
    "description": "ignoreKeys was correct",
    "lineNumber": 115,
    "___id": "T000002R000440",
    "___s": true
  },
  {
    "__docId__": 441,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test40",
    "testId": 40,
    "memberof": "src/module/traits.js~suite25.suite26.suite36",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite36.test40",
    "access": null,
    "description": "newScope was correct",
    "lineNumber": 122,
    "___id": "T000002R000441",
    "___s": true
  },
  {
    "__docId__": 442,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test41",
    "testId": 41,
    "memberof": "src/module/traits.js~suite25.suite26.suite36",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite36.test41",
    "access": null,
    "description": "dependencies was correct",
    "lineNumber": 127,
    "___id": "T000002R000442",
    "___s": true
  },
  {
    "__docId__": 443,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite42",
    "testId": 42,
    "memberof": "src/module/traits.js~suite25.suite26",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite26.suite42",
    "access": null,
    "description": "no arguments:",
    "lineNumber": 133,
    "___id": "T000002R000443",
    "___s": true
  },
  {
    "__docId__": 444,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test43",
    "testId": 43,
    "memberof": "src/module/traits.js~suite25.suite26.suite42",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite26.suite42.test43",
    "access": null,
    "description": "ignoreKeys was correct",
    "lineNumber": 141,
    "___id": "T000002R000444",
    "___s": true
  },
  {
    "__docId__": 445,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite44",
    "testId": 44,
    "memberof": "src/module/traits.js~suite25",
    "testDepth": 1,
    "longname": "src/module/traits.js~suite25.suite44",
    "access": null,
    "description": "safeName:",
    "lineNumber": 149,
    "___id": "T000002R000445",
    "___s": true
  },
  {
    "__docId__": 446,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite45",
    "testId": 45,
    "memberof": "src/module/traits.js~suite25.suite44",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite44.suite45",
    "access": null,
    "description": "parsing is correct:",
    "lineNumber": 151,
    "___id": "T000002R000446",
    "___s": true
  },
  {
    "__docId__": 447,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test46",
    "testId": 46,
    "memberof": "src/module/traits.js~suite25.suite44.suite45",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite44.suite45.test46",
    "access": null,
    "description": "result with no parameters return `<anonymous>`",
    "lineNumber": 153,
    "___id": "T000002R000447",
    "___s": true
  },
  {
    "__docId__": 448,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test47",
    "testId": 47,
    "memberof": "src/module/traits.js~suite25.suite44.suite45",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite44.suite45.test47",
    "access": null,
    "description": "result with null data and default value",
    "lineNumber": 159,
    "___id": "T000002R000448",
    "___s": true
  },
  {
    "__docId__": 449,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test48",
    "testId": 48,
    "memberof": "src/module/traits.js~suite25.suite44.suite45",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite44.suite45.test48",
    "access": null,
    "description": "result with `object.name`",
    "lineNumber": 165,
    "___id": "T000002R000449",
    "___s": true
  },
  {
    "__docId__": 450,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite49",
    "testId": 49,
    "memberof": "src/module/traits.js~suite25",
    "testDepth": 1,
    "longname": "src/module/traits.js~suite25.suite49",
    "access": null,
    "description": "HalsteadArray:",
    "lineNumber": 173,
    "___id": "T000002R000450",
    "___s": true
  },
  {
    "__docId__": 451,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite50",
    "testId": 50,
    "memberof": "src/module/traits.js~suite25.suite49",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite49.suite50",
    "access": null,
    "description": "no identifiers:",
    "lineNumber": 175,
    "___id": "T000002R000451",
    "___s": true
  },
  {
    "__docId__": 452,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test51",
    "testId": 51,
    "memberof": "src/module/traits.js~suite25.suite49.suite50",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite50.test51",
    "access": null,
    "description": "result was empty",
    "lineNumber": 182,
    "___id": "T000002R000452",
    "___s": true
  },
  {
    "__docId__": 453,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test52",
    "testId": 52,
    "memberof": "src/module/traits.js~suite25.suite49.suite50",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite50.test52",
    "access": null,
    "description": "result metric is correct",
    "lineNumber": 187,
    "___id": "T000002R000453",
    "___s": true
  },
  {
    "__docId__": 454,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite53",
    "testId": 53,
    "memberof": "src/module/traits.js~suite25.suite49",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite49.suite53",
    "access": null,
    "description": "one identifier:",
    "lineNumber": 193,
    "___id": "T000002R000454",
    "___s": true
  },
  {
    "__docId__": 455,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test54",
    "testId": 54,
    "memberof": "src/module/traits.js~suite25.suite49.suite53",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite53.test54",
    "access": null,
    "description": "result contained one item",
    "lineNumber": 200,
    "___id": "T000002R000455",
    "___s": true
  },
  {
    "__docId__": 456,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test55",
    "testId": 55,
    "memberof": "src/module/traits.js~suite25.suite49.suite53",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite53.test55",
    "access": null,
    "description": "result forEach",
    "lineNumber": 205,
    "___id": "T000002R000456",
    "___s": true
  },
  {
    "__docId__": 457,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test56",
    "testId": 56,
    "memberof": "src/module/traits.js~suite25.suite49.suite53",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite53.test56",
    "access": null,
    "description": "first item was correct",
    "lineNumber": 210,
    "___id": "T000002R000457",
    "___s": true
  },
  {
    "__docId__": 458,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite57",
    "testId": 57,
    "memberof": "src/module/traits.js~suite25.suite49",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite49.suite57",
    "access": null,
    "description": "two identifiers:",
    "lineNumber": 217,
    "___id": "T000002R000458",
    "___s": true
  },
  {
    "__docId__": 459,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test58",
    "testId": 58,
    "memberof": "src/module/traits.js~suite25.suite49.suite57",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite57.test58",
    "access": null,
    "description": "result contained two items",
    "lineNumber": 224,
    "___id": "T000002R000459",
    "___s": true
  },
  {
    "__docId__": 460,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test59",
    "testId": 59,
    "memberof": "src/module/traits.js~suite25.suite49.suite57",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite57.test59",
    "access": null,
    "description": "first item was correct",
    "lineNumber": 229,
    "___id": "T000002R000460",
    "___s": true
  },
  {
    "__docId__": 461,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test60",
    "testId": 60,
    "memberof": "src/module/traits.js~suite25.suite49.suite57",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite57.test60",
    "access": null,
    "description": "second item was correct",
    "lineNumber": 236,
    "___id": "T000002R000461",
    "___s": true
  },
  {
    "__docId__": 462,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite61",
    "testId": 61,
    "memberof": "src/module/traits.js~suite25.suite49",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite49.suite61",
    "access": null,
    "description": "multiple identifiers / raw TraitHalstead function data (undefined data posts warning!):",
    "lineNumber": 244,
    "___id": "T000002R000462",
    "___s": true
  },
  {
    "__docId__": 463,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test62",
    "testId": 62,
    "memberof": "src/module/traits.js~suite25.suite49.suite61",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite61.test62",
    "access": null,
    "description": "result contained two items",
    "lineNumber": 256,
    "___id": "T000002R000463",
    "___s": true
  },
  {
    "__docId__": 464,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test63",
    "testId": 63,
    "memberof": "src/module/traits.js~suite25.suite49.suite61",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite61.test63",
    "access": null,
    "description": "1st item was correct",
    "lineNumber": 261,
    "___id": "T000002R000464",
    "___s": true
  },
  {
    "__docId__": 465,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test64",
    "testId": 64,
    "memberof": "src/module/traits.js~suite25.suite49.suite61",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite61.test64",
    "access": null,
    "description": "2nd item was correct",
    "lineNumber": 268,
    "___id": "T000002R000465",
    "___s": true
  },
  {
    "__docId__": 466,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test65",
    "testId": 65,
    "memberof": "src/module/traits.js~suite25.suite49.suite61",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite61.test65",
    "access": null,
    "description": "3rd item was correct",
    "lineNumber": 275,
    "___id": "T000002R000466",
    "___s": true
  },
  {
    "__docId__": 467,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test66",
    "testId": 66,
    "memberof": "src/module/traits.js~suite25.suite49.suite61",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite61.test66",
    "access": null,
    "description": "4th item was correct",
    "lineNumber": 282,
    "___id": "T000002R000467",
    "___s": true
  },
  {
    "__docId__": 468,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test67",
    "testId": 67,
    "memberof": "src/module/traits.js~suite25.suite49.suite61",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite61.test67",
    "access": null,
    "description": "HalsteadArray valueOf converts raw data to strings",
    "lineNumber": 291,
    "___id": "T000002R000468",
    "___s": true
  },
  {
    "__docId__": 469,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite68",
    "testId": 68,
    "memberof": "src/module/traits.js~suite25.suite49",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite49.suite68",
    "access": null,
    "description": "process report:",
    "lineNumber": 305,
    "___id": "T000002R000469",
    "___s": true
  },
  {
    "__docId__": 470,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test69",
    "testId": 69,
    "memberof": "src/module/traits.js~suite25.suite49.suite68",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite68.test69",
    "access": null,
    "description": "report contains correct operator identifiers",
    "lineNumber": 307,
    "___id": "T000002R000470",
    "___s": true
  },
  {
    "__docId__": 471,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite70",
    "testId": 70,
    "memberof": "src/module/traits.js~suite25.suite49",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite49.suite70",
    "access": null,
    "description": "valueOf:",
    "lineNumber": 327,
    "___id": "T000002R000471",
    "___s": true
  },
  {
    "__docId__": 472,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test71",
    "testId": 71,
    "memberof": "src/module/traits.js~suite25.suite49.suite70",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite70.test71",
    "access": null,
    "description": "HalsteadArray valueOf contains correct operator identifiers",
    "lineNumber": 329,
    "___id": "T000002R000472",
    "___s": true
  },
  {
    "__docId__": 473,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test72",
    "testId": 72,
    "memberof": "src/module/traits.js~suite25.suite49.suite70",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite49.suite70.test72",
    "access": null,
    "description": "HalsteadArray valueOf contains correct operator identifiers w/ function values as strings",
    "lineNumber": 344,
    "___id": "T000002R000473",
    "___s": true
  },
  {
    "__docId__": 474,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite73",
    "testId": 73,
    "memberof": "src/module/traits.js~suite25",
    "testDepth": 1,
    "longname": "src/module/traits.js~suite25.suite73",
    "access": null,
    "description": "Trait:",
    "lineNumber": 364,
    "___id": "T000002R000474",
    "___s": true
  },
  {
    "__docId__": 475,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite74",
    "testId": 74,
    "memberof": "src/module/traits.js~suite25.suite73",
    "testDepth": 2,
    "longname": "src/module/traits.js~suite25.suite73.suite74",
    "access": null,
    "description": "with function / params:",
    "lineNumber": 366,
    "___id": "T000002R000475",
    "___s": true
  },
  {
    "__docId__": 476,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test75",
    "testId": 75,
    "memberof": "src/module/traits.js~suite25.suite73.suite74",
    "testDepth": 3,
    "longname": "src/module/traits.js~suite25.suite73.suite74.test75",
    "access": null,
    "description": "result with function / params is correct",
    "lineNumber": 373,
    "___id": "T000002R000476",
    "___s": true
  },
  {
    "__docId__": 477,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/project/result.js",
    "memberof": null,
    "longname": "src/project/result.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { assert }       from 'chai';\n\nimport ModuleReport     from '../../../src/module/report/ModuleReport';\nimport ProjectResult    from '../../../src/project/result/ProjectResult';\n\nimport * as testconfig  from '../testconfig';\n\nif (testconfig.modules['projectResult'])\n{\n   suite('result:', () =>\n   {\n      suite('ProjectResult:', () =>\n      {\n         suite('instantiation:', () =>\n         {\n            let result;\n\n            setup(() =>\n            {\n               const report = new ModuleReport(10, 100);\n               const report2 = new ModuleReport(10, 100);\n               const report3 = new ModuleReport(10, 100);\n\n               report.srcPath = './c.js';\n               report2.srcPath = './a.js';\n               report3.srcPath = './b.js';\n\n               report.createScope('method', 100, 200);\n               report.popScope('method');\n               report.createScope('class', 100, 200);\n               report.createScope('method', 100, 200);\n               report.popScope('method');\n               report.popScope('class');\n\n               result = new ProjectResult([report, report2, report3]);\n\n               // Fake the adjacency / visibility lists; a depends on b / b depends on a / c depends on a & b\n               result.adjacencyList = [{ row: 0, cols: [1] }, { row: 1, cols: [0] }, { row: 2, cols: [0, 1] }];\n               result.visibilityList = [{ row: 0, cols: [2] }, { row: 1, cols: [0] }, { row: 2, cols: [0, 1, 2] }];\n            });\n\n            teardown(() => { result = undefined; });\n\n            test('result has correct number of reports', () =>\n            {\n               assert.lengthOf(result.reports, 3);\n            });\n\n            test('result has correct report `srcPath` order', () =>\n            {\n               assert.strictEqual(result.reports[0].srcPath, './a.js');\n               assert.strictEqual(result.reports[1].srcPath, './b.js');\n               assert.strictEqual(result.reports[2].srcPath, './c.js');\n            });\n\n            test('finalize removes private data', () =>\n            {\n               assert.isObject(result.reports[2]._methodReport);\n               assert.isArray(result.reports[2]._scopeStackClass);\n               assert.isArray(result.reports[2]._scopeStackMethod);\n               assert.isObject(result.reports[2].classes[0]._methodReport);\n\n               result.finalize();\n\n               assert.isUndefined(result.reports[2]._methodReport);\n               assert.isUndefined(result.reports[2]._scopeStackClass);\n               assert.isUndefined(result.reports[2]._scopeStackMethod);\n               assert.isUndefined(result.reports[2].classes[0]._methodReport);\n            });\n\n            test('finalize w/ serializeReports === false is correct', () =>\n            {\n               const report = new ModuleReport(10, 100);\n               report.srcPath = './a.js';\n               result = new ProjectResult([report], { serializeReports: false });\n\n               assert.isObject(result.reports[0]._methodReport);\n               assert.isArray(result.reports[0]._scopeStackClass);\n               assert.isArray(result.reports[0]._scopeStackMethod);\n\n               result.finalize();\n\n               assert.isObject(result.reports[0]);\n\n               const reportKeys = Object.keys(result.reports[0]);\n\n               assert.lengthOf(reportKeys, 3);\n               assert.strictEqual(reportKeys[0], 'filePath');\n               assert.strictEqual(reportKeys[1], 'srcPath');\n               assert.strictEqual(reportKeys[2], 'srcPathAlias');\n\n               assert.isUndefined(result.reports[0].filePath);\n               assert.strictEqual(result.reports[0].srcPath, './a.js');\n               assert.isUndefined(result.reports[0].srcPathAlias);\n            });\n         });\n\n         suite('large project parsing performance', () =>\n         {\n            const largeProjectJSON = require('typhonjs-escomplex-test-data/files/large-project/results/results');\n\n            test('deserialize JSON object should be sufficiently fast', function()\n            {\n               this.timeout(75);\n               ProjectResult.parse(largeProjectJSON);\n            });\n         });\n      });\n   });\n}",
    "___id": "T000002R000477",
    "___s": true
  },
  {
    "__docId__": 478,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite76",
    "testId": 76,
    "memberof": "src/project/result.js",
    "testDepth": 0,
    "longname": "src/project/result.js~suite76",
    "access": null,
    "description": "result:",
    "lineNumber": 10,
    "___id": "T000002R000478",
    "___s": true
  },
  {
    "__docId__": 479,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite77",
    "testId": 77,
    "memberof": "src/project/result.js~suite76",
    "testDepth": 1,
    "longname": "src/project/result.js~suite76.suite77",
    "access": null,
    "description": "ProjectResult:",
    "lineNumber": 12,
    "___id": "T000002R000479",
    "___s": true
  },
  {
    "__docId__": 480,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite78",
    "testId": 78,
    "memberof": "src/project/result.js~suite76.suite77",
    "testDepth": 2,
    "longname": "src/project/result.js~suite76.suite77.suite78",
    "access": null,
    "description": "instantiation:",
    "lineNumber": 14,
    "___id": "T000002R000480",
    "___s": true
  },
  {
    "__docId__": 481,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test79",
    "testId": 79,
    "memberof": "src/project/result.js~suite76.suite77.suite78",
    "testDepth": 3,
    "longname": "src/project/result.js~suite76.suite77.suite78.test79",
    "access": null,
    "description": "result has correct number of reports",
    "lineNumber": 44,
    "___id": "T000002R000481",
    "___s": true
  },
  {
    "__docId__": 482,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test80",
    "testId": 80,
    "memberof": "src/project/result.js~suite76.suite77.suite78",
    "testDepth": 3,
    "longname": "src/project/result.js~suite76.suite77.suite78.test80",
    "access": null,
    "description": "result has correct report `srcPath` order",
    "lineNumber": 49,
    "___id": "T000002R000482",
    "___s": true
  },
  {
    "__docId__": 483,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test81",
    "testId": 81,
    "memberof": "src/project/result.js~suite76.suite77.suite78",
    "testDepth": 3,
    "longname": "src/project/result.js~suite76.suite77.suite78.test81",
    "access": null,
    "description": "finalize removes private data",
    "lineNumber": 56,
    "___id": "T000002R000483",
    "___s": true
  },
  {
    "__docId__": 484,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test82",
    "testId": 82,
    "memberof": "src/project/result.js~suite76.suite77.suite78",
    "testDepth": 3,
    "longname": "src/project/result.js~suite76.suite77.suite78.test82",
    "access": null,
    "description": "finalize w/ serializeReports === false is correct",
    "lineNumber": 71,
    "___id": "T000002R000484",
    "___s": true
  },
  {
    "__docId__": 485,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite83",
    "testId": 83,
    "memberof": "src/project/result.js~suite76.suite77",
    "testDepth": 2,
    "longname": "src/project/result.js~suite76.suite77.suite83",
    "access": null,
    "description": "large project parsing performance",
    "lineNumber": 98,
    "___id": "T000002R000485",
    "___s": true
  },
  {
    "__docId__": 486,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test84",
    "testId": 84,
    "memberof": "src/project/result.js~suite76.suite77.suite83",
    "testDepth": 3,
    "longname": "src/project/result.js~suite76.suite77.suite83.test84",
    "access": null,
    "description": "deserialize JSON object should be sufficiently fast",
    "lineNumber": 102,
    "___id": "T000002R000486",
    "___s": true
  },
  {
    "__docId__": 487,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/testconfig.js",
    "memberof": null,
    "longname": "src/testconfig.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Defines which modules to run tests.\n *\n * @type {{}}\n */\nexport const modules =\n{\n   modulePlugin: true,\n   moduleReport: true,\n   moduleTraits: true,\n   projectResult: true,\n   transformFormat: true,\n   utilMath: true,\n   utilObject: true,\n   utilString: true\n};\n",
    "___id": "T000002R000487",
    "___s": true
  },
  {
    "__docId__": 488,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/transform/format.js",
    "memberof": null,
    "longname": "src/transform/format.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import fs               from 'fs-extra';\nimport { assert }       from 'chai';\n\nimport ModuleReport     from '../../../src/module/report/ModuleReport';\nimport ProjectResult    from '../../../src/project/result/ProjectResult';\nimport TransformFormat  from '../../../src/transform/TransformFormat';\n\nimport * as testconfig  from '../testconfig';\n\n// Uncomment to generate matching format test data.\n// generateFormatData();\nrunTests();\n\n/**\n * Runs the tests\n */\nfunction runTests()\n{\n   if (testconfig.modules['transformFormat'])\n   {\n      suite('transform:', () =>\n      {\n         suite('TransformFormat:', () =>\n         {\n            suite('forEach / formatReport (large-module/report):', () =>\n            {\n               const largeModuleJSON = require('typhonjs-escomplex-test-data/files/large-module/report/report');\n\n               const moduleReport = ModuleReport.parse(largeModuleJSON).finalize();\n\n               TransformFormat.forEach((format, formatName) =>\n               {\n                  test(`formatName: ${formatName}`, () =>\n                  {\n                     const output = format.formatReport(moduleReport);\n\n                     const original = fs.readFileSync(\n                      `./test/fixture/files/large-module/report-${formatName}.${format.extension}`, 'utf8');\n\n                     assert.strictEqual(output, original);\n                  });\n               });\n            });\n\n            suite('forEach / formatResult (large-module/report):', () =>\n            {\n               const largeProjectJSON = require(\n                'typhonjs-escomplex-test-data/files/large-project/results/results-no-reports');\n\n               const projectResult = ProjectResult.parse(largeProjectJSON).finalize();\n\n               TransformFormat.forEach((format, formatName) =>\n               {\n                  test(`formatName: ${formatName}`, () =>\n                  {\n                     const output = format.formatResult(projectResult);\n\n                     const original = fs.readFileSync(\n                      `./test/fixture/files/large-project/results-no-reports-${formatName}.${format.extension}`,\n                       'utf8');\n\n                     assert.strictEqual(output, original);\n                  });\n               });\n            });\n         });\n\n         suite('ModuleReport:', () =>\n         {\n            suite('toFormat (large-module/report):', () =>\n            {\n               const largeModuleJSON = require('typhonjs-escomplex-test-data/files/large-module/report/report');\n\n               const moduleReport = ModuleReport.parse(largeModuleJSON).finalize();\n\n               const extensions = ModuleReport.getFormatFileExtensions();\n\n               ModuleReport.getFormatNames().forEach((formatName, index) =>\n               {\n                  test(`formatName: ${formatName}`, () =>\n                  {\n                     const output = moduleReport.toFormat(formatName);\n\n                     const original = fs.readFileSync(\n                      `./test/fixture/files/large-module/report-${formatName}.${extensions[index]}`, 'utf8');\n\n                     assert.strictEqual(output, original);\n                  });\n               });\n            });\n         });\n\n         suite('ProjectResult:', () =>\n         {\n            suite('toFormat (large-project/results):', () =>\n            {\n               const largeProjectJSON = require('typhonjs-escomplex-test-data/files/large-project/results/results');\n\n               const projectResult = ProjectResult.parse(largeProjectJSON).finalize();\n\n               const extensions = ProjectResult.getFormatFileExtensions();\n\n               ProjectResult.getFormatNames().forEach((formatName, index) =>\n               {\n                  test(`formatName: ${formatName}`, () =>\n                  {\n                     const output = projectResult.toFormat(formatName);\n\n                     const original = fs.readFileSync(\n                      `./test/fixture/files/large-project/result-${formatName}.${extensions[index]}`, 'utf8');\n\n                     assert.strictEqual(output, original);\n                  });\n               });\n            });\n\n            suite('toFormat (large-project/results-no-reports):', () =>\n            {\n               const largeProjectJSON = require(\n                'typhonjs-escomplex-test-data/files/large-project/results/results-no-reports');\n\n               const projectResult = ProjectResult.parse(largeProjectJSON).finalize();\n\n               const extensions = ProjectResult.getFormatFileExtensions();\n\n               ProjectResult.getFormatNames().forEach((formatName, index) =>\n               {\n                  test(`formatName: ${formatName}`, () =>\n                  {\n                     const output = projectResult.toFormat(formatName);\n\n                     const original = fs.readFileSync(\n                      `./test/fixture/files/large-project/results-no-reports-${formatName}.${extensions[index]}`,\n                       'utf8');\n\n                     assert.strictEqual(output, original);\n                  });\n               });\n            });\n         });\n      });\n   }\n}\n\n/**\n * Generates the original module report / project result test data.\n */\n/*\nfunction generateFormatData()\n{\n   // Empty formatted result / report matching test data.\n   //fs.emptyDirSync('./test/fixture/files/large-module');\n   //fs.emptyDirSync('./test/fixture/files/large-project');\n\n   // Generate project result formatted test data.\n\n   const largeModuleJSON = require('typhonjs-escomplex-test-data/files/large-module/report/report');\n   const moduleReport = ModuleReport.parse(largeModuleJSON).finalize();\n\n   TransformFormat.forEach((format, formatName) =>\n   {\n      test(`formatName: ${formatName}`, () =>\n      {\n         const output = format.formatReport(moduleReport);\n\n         fs.writeFileSync(\n          `./test/fixture/files/large-module/report-${formatName}.${format.extension}`, output, 'utf8');\n      });\n   });\n\n   // Generate module report formatted test data.\n\n   const largeProjectJSON = require('typhonjs-escomplex-test-data/files/large-project/results/results');\n   const projectResult = ProjectResult.parse(largeProjectJSON).finalize();\n\n   TransformFormat.forEach((format, formatName) =>\n   {\n      test(`formatName: ${formatName}`, () =>\n      {\n         const output = format.formatResult(projectResult);\n\n         fs.writeFileSync(\n          `./test/fixture/files/large-project/result-${formatName}.${format.extension}`, output, 'utf8');\n      });\n   });\n\n   const largeProjectJSON2 = require('typhonjs-escomplex-test-data/files/large-project/results/results-no-reports');\n   const projectResult2 = ProjectResult.parse(largeProjectJSON2).finalize();\n\n   TransformFormat.forEach((format, formatName) =>\n   {\n      test(`formatName: ${formatName}`, () =>\n      {\n         const output = format.formatResult(projectResult2);\n\n         fs.writeFileSync(\n          `./test/fixture/files/large-project/results-no-reports-${formatName}.${format.extension}`, output, 'utf8');\n      });\n   });\n}\n*/",
    "___id": "T000002R000488",
    "___s": true
  },
  {
    "__docId__": 489,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite85",
    "testId": 85,
    "memberof": "src/transform/format.js",
    "testDepth": 0,
    "longname": "src/transform/format.js~suite85",
    "access": null,
    "description": "transform:",
    "lineNumber": 21,
    "___id": "T000002R000489",
    "___s": true
  },
  {
    "__docId__": 490,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite86",
    "testId": 86,
    "memberof": "src/transform/format.js~suite85",
    "testDepth": 1,
    "longname": "src/transform/format.js~suite85.suite86",
    "access": null,
    "description": "TransformFormat:",
    "lineNumber": 23,
    "___id": "T000002R000490",
    "___s": true
  },
  {
    "__docId__": 491,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite87",
    "testId": 87,
    "memberof": "src/transform/format.js~suite85.suite86",
    "testDepth": 2,
    "longname": "src/transform/format.js~suite85.suite86.suite87",
    "access": null,
    "description": "forEach / formatReport (large-module/report):",
    "lineNumber": 25,
    "___id": "T000002R000491",
    "___s": true
  },
  {
    "__docId__": 492,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test88",
    "testId": 88,
    "memberof": "src/transform/format.js~suite85.suite86.suite87",
    "testDepth": 3,
    "longname": "src/transform/format.js~suite85.suite86.suite87.test88",
    "access": null,
    "lineNumber": 33,
    "___id": "T000002R000492",
    "___s": true
  },
  {
    "__docId__": 493,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite89",
    "testId": 89,
    "memberof": "src/transform/format.js~suite85.suite86",
    "testDepth": 2,
    "longname": "src/transform/format.js~suite85.suite86.suite89",
    "access": null,
    "description": "forEach / formatResult (large-module/report):",
    "lineNumber": 45,
    "___id": "T000002R000493",
    "___s": true
  },
  {
    "__docId__": 494,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test90",
    "testId": 90,
    "memberof": "src/transform/format.js~suite85.suite86.suite89",
    "testDepth": 3,
    "longname": "src/transform/format.js~suite85.suite86.suite89.test90",
    "access": null,
    "lineNumber": 54,
    "___id": "T000002R000494",
    "___s": true
  },
  {
    "__docId__": 495,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite91",
    "testId": 91,
    "memberof": "src/transform/format.js~suite85",
    "testDepth": 1,
    "longname": "src/transform/format.js~suite85.suite91",
    "access": null,
    "description": "ModuleReport:",
    "lineNumber": 68,
    "___id": "T000002R000495",
    "___s": true
  },
  {
    "__docId__": 496,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite92",
    "testId": 92,
    "memberof": "src/transform/format.js~suite85.suite91",
    "testDepth": 2,
    "longname": "src/transform/format.js~suite85.suite91.suite92",
    "access": null,
    "description": "toFormat (large-module/report):",
    "lineNumber": 70,
    "___id": "T000002R000496",
    "___s": true
  },
  {
    "__docId__": 497,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test93",
    "testId": 93,
    "memberof": "src/transform/format.js~suite85.suite91.suite92",
    "testDepth": 3,
    "longname": "src/transform/format.js~suite85.suite91.suite92.test93",
    "access": null,
    "lineNumber": 80,
    "___id": "T000002R000497",
    "___s": true
  },
  {
    "__docId__": 498,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite94",
    "testId": 94,
    "memberof": "src/transform/format.js~suite85",
    "testDepth": 1,
    "longname": "src/transform/format.js~suite85.suite94",
    "access": null,
    "description": "ProjectResult:",
    "lineNumber": 93,
    "___id": "T000002R000498",
    "___s": true
  },
  {
    "__docId__": 499,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite95",
    "testId": 95,
    "memberof": "src/transform/format.js~suite85.suite94",
    "testDepth": 2,
    "longname": "src/transform/format.js~suite85.suite94.suite95",
    "access": null,
    "description": "toFormat (large-project/results):",
    "lineNumber": 95,
    "___id": "T000002R000499",
    "___s": true
  },
  {
    "__docId__": 500,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test96",
    "testId": 96,
    "memberof": "src/transform/format.js~suite85.suite94.suite95",
    "testDepth": 3,
    "longname": "src/transform/format.js~suite85.suite94.suite95.test96",
    "access": null,
    "lineNumber": 105,
    "___id": "T000002R000500",
    "___s": true
  },
  {
    "__docId__": 501,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite97",
    "testId": 97,
    "memberof": "src/transform/format.js~suite85.suite94",
    "testDepth": 2,
    "longname": "src/transform/format.js~suite85.suite94.suite97",
    "access": null,
    "description": "toFormat (large-project/results-no-reports):",
    "lineNumber": 117,
    "___id": "T000002R000501",
    "___s": true
  },
  {
    "__docId__": 502,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test98",
    "testId": 98,
    "memberof": "src/transform/format.js~suite85.suite94.suite97",
    "testDepth": 3,
    "longname": "src/transform/format.js~suite85.suite94.suite97.test98",
    "access": null,
    "lineNumber": 128,
    "___id": "T000002R000502",
    "___s": true
  },
  {
    "__docId__": 503,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/util/math.js",
    "memberof": null,
    "longname": "src/util/math.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { assert }       from 'chai';\n\nimport MathUtil         from '../../../src/utils/MathUtil';\n\nimport * as testconfig  from '../testconfig';\n\nif (testconfig.modules['utilMath'])\n{\n   suite('utils:', () =>\n   {\n      suite('StringUtil', () =>\n      {\n         suite('compactMatrix:', () =>\n         {\n            test('matrix is compacted', () =>\n            {\n               // Identity matrix.\n               let matrix = MathUtil.create2DArray(4, 0);\n               matrix[0][0] = 1;\n               matrix[1][1] = 1;\n               matrix[2][2] = 1;\n               matrix[3][3] = 1;\n\n               let testString = '[{\"row\":0,\"cols\":[0]},{\"row\":1,\"cols\":[1]},{\"row\":2,\"cols\":[2]},{\"row\":3,\"cols\":[3]}]';\n\n               assert.strictEqual(JSON.stringify(MathUtil.compactMatrix(matrix)), testString);\n\n               // Matrix with no column entries for row (3).\n               matrix = MathUtil.create2DArray(4, 0);\n               matrix[0][0] = 1;\n               matrix[0][2] = 1;\n               matrix[1][1] = 1;\n               matrix[1][3] = 1;\n               matrix[2][0] = 1;\n               matrix[2][1] = 1;\n               matrix[2][2] = 1;\n               matrix[2][3] = 1;\n\n               testString = '[{\"row\":0,\"cols\":[0,2]},{\"row\":1,\"cols\":[1,3]},{\"row\":2,\"cols\":[0,1,2,3]}]';\n\n               assert.strictEqual(JSON.stringify(MathUtil.compactMatrix(matrix)), testString);\n\n               // Large sparse matrix with few row / column entries.\n               matrix = MathUtil.create2DArray(1024, 0);\n               matrix[1][1] = 1;\n               matrix[1][3] = 1;\n               matrix[120][0] = 1;\n               matrix[350][22] = 1;\n               matrix[350][230] = 1;\n               matrix[350][330] = 1;\n               matrix[600][45] = 1;\n               matrix[1023][320] = 1;\n\n               testString = '[{\"row\":1,\"cols\":[1,3]},{\"row\":120,\"cols\":[0]},{\"row\":350,\"cols\":[22,230,330]},'\n                + '{\"row\":600,\"cols\":[45]},{\"row\":1023,\"cols\":[320]}]';\n\n               assert.strictEqual(JSON.stringify(MathUtil.compactMatrix(matrix)), testString);\n            });\n         });\n\n         suite('getMedian:', () =>\n         {\n            test('median is returned', () =>\n            {\n               assert.strictEqual(MathUtil.getMedian([100, 20, 80, 60, 50]), 60);\n               assert.strictEqual(MathUtil.getMedian([100, 20, 80, 60, 50, 120]), 70);\n            });\n         });\n\n         suite('getPercent:', () =>\n         {\n            test('percent is returned', () =>\n            {\n               assert.strictEqual(MathUtil.getPercent(.2, 1), 20);\n               assert.strictEqual(MathUtil.getPercent(100, 1000), 10);\n            });\n         });\n\n         suite('toFixed:', () =>\n         {\n            test('correct float rounding', () =>\n            {\n               assert.strictEqual(MathUtil.toFixed(.1545839578), .155);\n\n               assert.strictEqual(MathUtil.toFixed(.15), .15);\n               assert.strictEqual(MathUtil.toFixed(.1), .1);\n\n               assert.strictEqual(MathUtil.toFixed(20.1545839578), 20.155);\n               assert.strictEqual(MathUtil.toFixed(20.1544392842), 20.154);\n            });\n\n            test('pass-through of non-float data', () =>\n            {\n               assert.strictEqual(MathUtil.toFixed(20), 20);\n               assert.strictEqual(MathUtil.toFixed('test'), 'test');\n               assert.strictEqual(MathUtil.toFixed(true), true);\n            });\n\n            test('correct JSON stringify results', () =>\n            {\n               const testString = '{\"data\":20.155,\"data2\":{\"data3\":20.154}}';\n\n               const result = JSON.stringify({ data: 20.1545839578, data2: { data3: 20.1544392842 } }, (key, val) =>\n               {\n                  return MathUtil.toFixed(val);\n               });\n\n               assert.strictEqual(result, testString);\n            });\n         });\n      });\n   });\n}",
    "___id": "T000002R000503",
    "___s": true
  },
  {
    "__docId__": 504,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite99",
    "testId": 99,
    "memberof": "src/util/math.js",
    "testDepth": 0,
    "longname": "src/util/math.js~suite99",
    "access": null,
    "description": "utils:",
    "lineNumber": 9,
    "___id": "T000002R000504",
    "___s": true
  },
  {
    "__docId__": 505,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite100",
    "testId": 100,
    "memberof": "src/util/math.js~suite99",
    "testDepth": 1,
    "longname": "src/util/math.js~suite99.suite100",
    "access": null,
    "description": "StringUtil",
    "lineNumber": 11,
    "___id": "T000002R000505",
    "___s": true
  },
  {
    "__docId__": 506,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite101",
    "testId": 101,
    "memberof": "src/util/math.js~suite99.suite100",
    "testDepth": 2,
    "longname": "src/util/math.js~suite99.suite100.suite101",
    "access": null,
    "description": "compactMatrix:",
    "lineNumber": 13,
    "___id": "T000002R000506",
    "___s": true
  },
  {
    "__docId__": 507,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test102",
    "testId": 102,
    "memberof": "src/util/math.js~suite99.suite100.suite101",
    "testDepth": 3,
    "longname": "src/util/math.js~suite99.suite100.suite101.test102",
    "access": null,
    "description": "matrix is compacted",
    "lineNumber": 15,
    "___id": "T000002R000507",
    "___s": true
  },
  {
    "__docId__": 508,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite103",
    "testId": 103,
    "memberof": "src/util/math.js~suite99.suite100",
    "testDepth": 2,
    "longname": "src/util/math.js~suite99.suite100.suite103",
    "access": null,
    "description": "getMedian:",
    "lineNumber": 61,
    "___id": "T000002R000508",
    "___s": true
  },
  {
    "__docId__": 509,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test104",
    "testId": 104,
    "memberof": "src/util/math.js~suite99.suite100.suite103",
    "testDepth": 3,
    "longname": "src/util/math.js~suite99.suite100.suite103.test104",
    "access": null,
    "description": "median is returned",
    "lineNumber": 63,
    "___id": "T000002R000509",
    "___s": true
  },
  {
    "__docId__": 510,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite105",
    "testId": 105,
    "memberof": "src/util/math.js~suite99.suite100",
    "testDepth": 2,
    "longname": "src/util/math.js~suite99.suite100.suite105",
    "access": null,
    "description": "getPercent:",
    "lineNumber": 70,
    "___id": "T000002R000510",
    "___s": true
  },
  {
    "__docId__": 511,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test106",
    "testId": 106,
    "memberof": "src/util/math.js~suite99.suite100.suite105",
    "testDepth": 3,
    "longname": "src/util/math.js~suite99.suite100.suite105.test106",
    "access": null,
    "description": "percent is returned",
    "lineNumber": 72,
    "___id": "T000002R000511",
    "___s": true
  },
  {
    "__docId__": 512,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite107",
    "testId": 107,
    "memberof": "src/util/math.js~suite99.suite100",
    "testDepth": 2,
    "longname": "src/util/math.js~suite99.suite100.suite107",
    "access": null,
    "description": "toFixed:",
    "lineNumber": 79,
    "___id": "T000002R000512",
    "___s": true
  },
  {
    "__docId__": 513,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test108",
    "testId": 108,
    "memberof": "src/util/math.js~suite99.suite100.suite107",
    "testDepth": 3,
    "longname": "src/util/math.js~suite99.suite100.suite107.test108",
    "access": null,
    "description": "correct float rounding",
    "lineNumber": 81,
    "___id": "T000002R000513",
    "___s": true
  },
  {
    "__docId__": 514,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test109",
    "testId": 109,
    "memberof": "src/util/math.js~suite99.suite100.suite107",
    "testDepth": 3,
    "longname": "src/util/math.js~suite99.suite100.suite107.test109",
    "access": null,
    "description": "pass-through of non-float data",
    "lineNumber": 92,
    "___id": "T000002R000514",
    "___s": true
  },
  {
    "__docId__": 515,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test110",
    "testId": 110,
    "memberof": "src/util/math.js~suite99.suite100.suite107",
    "testDepth": 3,
    "longname": "src/util/math.js~suite99.suite100.suite107.test110",
    "access": null,
    "description": "correct JSON stringify results",
    "lineNumber": 99,
    "___id": "T000002R000515",
    "___s": true
  },
  {
    "__docId__": 516,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/util/object.js",
    "memberof": null,
    "longname": "src/util/object.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { assert }       from 'chai';\n\nimport MethodAverage    from '../../../src/module/report/averages/MethodAverage';\nimport ObjectUtil       from '../../../src/utils/ObjectUtil';\n\nimport * as testconfig  from '../testconfig';\n\nconst s_TEST_OBJECT = new MethodAverage();\n\nconst s_TEST_CONFIRM = '[\"cyclomatic\",\"cyclomaticDensity\",\"halstead.bugs\",\"halstead.difficulty\",\"halstead.effort\",\"halstead.length\",\"halstead.time\",\"halstead.vocabulary\",\"halstead.volume\",\"halstead.operands.distinct\",\"halstead.operands.total\",\"halstead.operators.distinct\",\"halstead.operators.total\",\"params\",\"sloc.logical\",\"sloc.physical\"]';\n\nif (testconfig.modules['utilObject'])\n{\n   suite('utils:', () =>\n   {\n      suite('ObjectUtil', () =>\n      {\n         suite('getAccessorList:', () =>\n         {\n            test('MethodAverage accessors correct', () =>\n            {\n               const result = ObjectUtil.getAccessorList(s_TEST_OBJECT);\n\n               assert.strictEqual(JSON.stringify(result), s_TEST_CONFIRM);\n            });\n         });\n      });\n   });\n}\n\n",
    "___id": "T000002R000516",
    "___s": true
  },
  {
    "__docId__": 517,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite111",
    "testId": 111,
    "memberof": "src/util/object.js",
    "testDepth": 0,
    "longname": "src/util/object.js~suite111",
    "access": null,
    "description": "utils:",
    "lineNumber": 14,
    "___id": "T000002R000517",
    "___s": true
  },
  {
    "__docId__": 518,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite112",
    "testId": 112,
    "memberof": "src/util/object.js~suite111",
    "testDepth": 1,
    "longname": "src/util/object.js~suite111.suite112",
    "access": null,
    "description": "ObjectUtil",
    "lineNumber": 16,
    "___id": "T000002R000518",
    "___s": true
  },
  {
    "__docId__": 519,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite113",
    "testId": 113,
    "memberof": "src/util/object.js~suite111.suite112",
    "testDepth": 2,
    "longname": "src/util/object.js~suite111.suite112.suite113",
    "access": null,
    "description": "getAccessorList:",
    "lineNumber": 18,
    "___id": "T000002R000519",
    "___s": true
  },
  {
    "__docId__": 520,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test114",
    "testId": 114,
    "memberof": "src/util/object.js~suite111.suite112.suite113",
    "testDepth": 3,
    "longname": "src/util/object.js~suite111.suite112.suite113.test114",
    "access": null,
    "description": "MethodAverage accessors correct",
    "lineNumber": 20,
    "___id": "T000002R000520",
    "___s": true
  },
  {
    "__docId__": 521,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "src/util/string.js",
    "memberof": null,
    "longname": "src/util/string.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { assert }       from 'chai';\n\nimport StringUtil       from '../../../src/utils/StringUtil';\n\nimport * as testconfig  from '../testconfig';\n\nconst s_TEST_OBJECT = { lineStart: 1, lineEnd: 2, sloc: { params: 3 } };\n\nconst s_TEST_CONFIRM = 'Line start: 1\\n\\nLine end: 2\\nParameter count: 3\\n';\n\nif (testconfig.modules['utilString'])\n{\n   suite('utils:', () =>\n   {\n      suite('StringUtil', () =>\n      {\n         suite('compare:', () =>\n         {\n            test('basic test', () =>\n            {\n               assert.strictEqual(-1, StringUtil.compare('./a/a.js', './b/b.js'));\n               assert.strictEqual(0, StringUtil.compare('./a/a.js', './a/a.js'));\n               assert.strictEqual(1, StringUtil.compare('./b/a.js', './a/b.js'));\n            });\n         });\n\n         suite('incrementIndent:', () =>\n         {\n            test('basic test', () =>\n            {\n               assert.strictEqual(3, StringUtil.incrementIndent(0));\n               assert.strictEqual(6, StringUtil.incrementIndent(3));\n               assert.strictEqual(8, StringUtil.incrementIndent(6, 2));\n            });\n         });\n\n         suite('indent:', () =>\n         {\n            test('basic test', () =>\n            {\n               assert.strictEqual('   TEST', StringUtil.indent(3, 'TEST'));\n            });\n         });\n\n         suite('safeStringObject:', () =>\n         {\n            test('output is correct', () =>\n            {\n               const output =\n               [\n                  StringUtil.safeStringObject('Line start: ',        s_TEST_OBJECT, 'lineStart', 2),\n                  StringUtil.safeStringObject('Line end: ',          s_TEST_OBJECT, 'lineEnd'),\n                  StringUtil.safeStringObject('Physical LOC: ',      s_TEST_OBJECT, 'sloc.physical'),\n                  StringUtil.safeStringObject('Logical LOC: ',       s_TEST_OBJECT, 'sloc.logical'),\n                  StringUtil.safeStringObject('Parameter count: ',   s_TEST_OBJECT, 'sloc.params')\n               ].join('');\n\n               assert.strictEqual(output, s_TEST_CONFIRM);\n            });\n         });\n\n         suite('safeStringsObject:', () =>\n         {\n            test('output is correct', () =>\n            {\n               const output = StringUtil.safeStringsObject(s_TEST_OBJECT,\n                  ['Line start: ',        'lineStart', 2],\n                  ['Line end: ',          'lineEnd'],\n                  ['Physical LOC: ',      'sloc.physical'],\n                  ['Logical LOC: ',       'sloc.logical'],\n                  ['Parameter count: ',   'sloc.params']\n               );\n\n               assert.strictEqual(output, s_TEST_CONFIRM);\n            });\n         });\n      });\n   });\n}\n\n",
    "___id": "T000002R000521",
    "___s": true
  },
  {
    "__docId__": 522,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite115",
    "testId": 115,
    "memberof": "src/util/string.js",
    "testDepth": 0,
    "longname": "src/util/string.js~suite115",
    "access": null,
    "description": "utils:",
    "lineNumber": 13,
    "___id": "T000002R000522",
    "___s": true
  },
  {
    "__docId__": 523,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite116",
    "testId": 116,
    "memberof": "src/util/string.js~suite115",
    "testDepth": 1,
    "longname": "src/util/string.js~suite115.suite116",
    "access": null,
    "description": "StringUtil",
    "lineNumber": 15,
    "___id": "T000002R000523",
    "___s": true
  },
  {
    "__docId__": 524,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite117",
    "testId": 117,
    "memberof": "src/util/string.js~suite115.suite116",
    "testDepth": 2,
    "longname": "src/util/string.js~suite115.suite116.suite117",
    "access": null,
    "description": "compare:",
    "lineNumber": 17,
    "___id": "T000002R000524",
    "___s": true
  },
  {
    "__docId__": 525,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test118",
    "testId": 118,
    "memberof": "src/util/string.js~suite115.suite116.suite117",
    "testDepth": 3,
    "longname": "src/util/string.js~suite115.suite116.suite117.test118",
    "access": null,
    "description": "basic test",
    "lineNumber": 19,
    "___id": "T000002R000525",
    "___s": true
  },
  {
    "__docId__": 526,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite119",
    "testId": 119,
    "memberof": "src/util/string.js~suite115.suite116",
    "testDepth": 2,
    "longname": "src/util/string.js~suite115.suite116.suite119",
    "access": null,
    "description": "incrementIndent:",
    "lineNumber": 27,
    "___id": "T000002R000526",
    "___s": true
  },
  {
    "__docId__": 527,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test120",
    "testId": 120,
    "memberof": "src/util/string.js~suite115.suite116.suite119",
    "testDepth": 3,
    "longname": "src/util/string.js~suite115.suite116.suite119.test120",
    "access": null,
    "description": "basic test",
    "lineNumber": 29,
    "___id": "T000002R000527",
    "___s": true
  },
  {
    "__docId__": 528,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite121",
    "testId": 121,
    "memberof": "src/util/string.js~suite115.suite116",
    "testDepth": 2,
    "longname": "src/util/string.js~suite115.suite116.suite121",
    "access": null,
    "description": "indent:",
    "lineNumber": 37,
    "___id": "T000002R000528",
    "___s": true
  },
  {
    "__docId__": 529,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test122",
    "testId": 122,
    "memberof": "src/util/string.js~suite115.suite116.suite121",
    "testDepth": 3,
    "longname": "src/util/string.js~suite115.suite116.suite121.test122",
    "access": null,
    "description": "basic test",
    "lineNumber": 39,
    "___id": "T000002R000529",
    "___s": true
  },
  {
    "__docId__": 530,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite123",
    "testId": 123,
    "memberof": "src/util/string.js~suite115.suite116",
    "testDepth": 2,
    "longname": "src/util/string.js~suite115.suite116.suite123",
    "access": null,
    "description": "safeStringObject:",
    "lineNumber": 45,
    "___id": "T000002R000530",
    "___s": true
  },
  {
    "__docId__": 531,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test124",
    "testId": 124,
    "memberof": "src/util/string.js~suite115.suite116.suite123",
    "testDepth": 3,
    "longname": "src/util/string.js~suite115.suite116.suite123.test124",
    "access": null,
    "description": "output is correct",
    "lineNumber": 47,
    "___id": "T000002R000531",
    "___s": true
  },
  {
    "__docId__": 532,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "suite125",
    "testId": 125,
    "memberof": "src/util/string.js~suite115.suite116",
    "testDepth": 2,
    "longname": "src/util/string.js~suite115.suite116.suite125",
    "access": null,
    "description": "safeStringsObject:",
    "lineNumber": 62,
    "___id": "T000002R000532",
    "___s": true
  },
  {
    "__docId__": 533,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "test126",
    "testId": 126,
    "memberof": "src/util/string.js~suite115.suite116.suite125",
    "testDepth": 3,
    "longname": "src/util/string.js~suite115.suite116.suite125.test126",
    "access": null,
    "description": "output is correct",
    "lineNumber": 64,
    "___id": "T000002R000533",
    "___s": true
  }
]