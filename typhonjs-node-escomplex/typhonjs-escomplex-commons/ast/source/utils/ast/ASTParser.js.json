{
  "type": "File",
  "start": 0,
  "end": 1648,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 40,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1648,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 40,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 34,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 34
          }
        },
        "specifiers": [
          {
            "type": "ImportDefaultSpecifier",
            "start": 7,
            "end": 15,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 15
              }
            },
            "local": {
              "type": "Identifier",
              "start": 7,
              "end": 15,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 7
                },
                "end": {
                  "line": 1,
                  "column": 15
                }
              },
              "name": "ASTState"
            }
          }
        ],
        "importKind": "value",
        "source": {
          "type": "StringLiteral",
          "start": 21,
          "end": 33,
          "loc": {
            "start": {
              "line": 1,
              "column": 21
            },
            "end": {
              "line": 1,
              "column": 33
            }
          },
          "extra": {
            "rawValue": "./ASTState",
            "raw": "'./ASTState'"
          },
          "value": "./ASTState"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * `ASTParser` is a fork of `Astring`. The original author is David Bonnet and `Astring` is released under an MIT\n * license. This version is only available by the MPLv2.0 license. Please see the original source.\n * @see  https://github.com/davidbonnet/astring.git\n *\n * Eventually once ASTParser is feature complete for Babylon & ESTree AST and further modularized it will be released\n * as a separate NPM module supporting plugins.\n *\n * Please note that not all of the Babylon AST nodes are currently supported. `astParser` is currently only used by\n * `typhonjs-escomplex` for realizing computed method names and associated Halstead operands and operators.\n *\n ",
            "start": 36,
            "end": 707,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportDefaultDeclaration",
        "start": 708,
        "end": 1647,
        "loc": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 1
          }
        },
        "declaration": {
          "type": "ClassDeclaration",
          "start": 723,
          "end": 1647,
          "loc": {
            "start": {
              "line": 15,
              "column": 15
            },
            "end": {
              "line": 39,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 729,
            "end": 738,
            "loc": {
              "start": {
                "line": 15,
                "column": 21
              },
              "end": {
                "line": 15,
                "column": 30
              }
            },
            "name": "ASTParser",
            "leadingComments": null
          },
          "superClass": null,
          "body": {
            "type": "ClassBody",
            "start": 739,
            "end": 1647,
            "loc": {
              "start": {
                "line": 16,
                "column": 0
              },
              "end": {
                "line": 39,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ClassMethod",
                "start": 1429,
                "end": 1645,
                "loc": {
                  "start": {
                    "line": 30,
                    "column": 3
                  },
                  "end": {
                    "line": 38,
                    "column": 4
                  }
                },
                "computed": false,
                "key": {
                  "type": "Identifier",
                  "start": 1436,
                  "end": 1441,
                  "loc": {
                    "start": {
                      "line": 30,
                      "column": 10
                    },
                    "end": {
                      "line": 30,
                      "column": 15
                    }
                  },
                  "name": "parse"
                },
                "static": true,
                "kind": "method",
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1442,
                    "end": 1446,
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 16
                      },
                      "end": {
                        "line": 30,
                        "column": 20
                      }
                    },
                    "name": "node"
                  },
                  {
                    "type": "Identifier",
                    "start": 1448,
                    "end": 1455,
                    "loc": {
                      "start": {
                        "line": 30,
                        "column": 22
                      },
                      "end": {
                        "line": 30,
                        "column": 29
                      }
                    },
                    "name": "options"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1460,
                  "end": 1645,
                  "loc": {
                    "start": {
                      "line": 31,
                      "column": 3
                    },
                    "end": {
                      "line": 38,
                      "column": 4
                    }
                  },
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "start": 1468,
                      "end": 1504,
                      "loc": {
                        "start": {
                          "line": 32,
                          "column": 6
                        },
                        "end": {
                          "line": 32,
                          "column": 42
                        }
                      },
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "start": 1474,
                          "end": 1503,
                          "loc": {
                            "start": {
                              "line": 32,
                              "column": 12
                            },
                            "end": {
                              "line": 32,
                              "column": 41
                            }
                          },
                          "id": {
                            "type": "Identifier",
                            "start": 1474,
                            "end": 1479,
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 12
                              },
                              "end": {
                                "line": 32,
                                "column": 17
                              }
                            },
                            "name": "state"
                          },
                          "init": {
                            "type": "NewExpression",
                            "start": 1482,
                            "end": 1503,
                            "loc": {
                              "start": {
                                "line": 32,
                                "column": 20
                              },
                              "end": {
                                "line": 32,
                                "column": 41
                              }
                            },
                            "callee": {
                              "type": "Identifier",
                              "start": 1486,
                              "end": 1494,
                              "loc": {
                                "start": {
                                  "line": 32,
                                  "column": 24
                                },
                                "end": {
                                  "line": 32,
                                  "column": 32
                                }
                              },
                              "name": "ASTState"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "start": 1495,
                                "end": 1502,
                                "loc": {
                                  "start": {
                                    "line": 32,
                                    "column": 33
                                  },
                                  "end": {
                                    "line": 32,
                                    "column": 40
                                  }
                                },
                                "name": "options"
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "const",
                      "trailingComments": [
                        {
                          "type": "CommentLine",
                          "value": " Travel through the AST node and generate the code.",
                          "start": 1512,
                          "end": 1565,
                          "loc": {
                            "start": {
                              "line": 34,
                              "column": 6
                            },
                            "end": {
                              "line": 34,
                              "column": 59
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ExpressionStatement",
                      "start": 1572,
                      "end": 1612,
                      "loc": {
                        "start": {
                          "line": 35,
                          "column": 6
                        },
                        "end": {
                          "line": 35,
                          "column": 46
                        }
                      },
                      "expression": {
                        "type": "CallExpression",
                        "start": 1572,
                        "end": 1611,
                        "loc": {
                          "start": {
                            "line": 35,
                            "column": 6
                          },
                          "end": {
                            "line": 35,
                            "column": 45
                          }
                        },
                        "callee": {
                          "type": "MemberExpression",
                          "start": 1572,
                          "end": 1598,
                          "loc": {
                            "start": {
                              "line": 35,
                              "column": 6
                            },
                            "end": {
                              "line": 35,
                              "column": 32
                            }
                          },
                          "object": {
                            "type": "MemberExpression",
                            "start": 1572,
                            "end": 1587,
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 6
                              },
                              "end": {
                                "line": 35,
                                "column": 21
                              }
                            },
                            "object": {
                              "type": "Identifier",
                              "start": 1572,
                              "end": 1577,
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 6
                                },
                                "end": {
                                  "line": 35,
                                  "column": 11
                                }
                              },
                              "name": "state",
                              "leadingComments": null
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 1578,
                              "end": 1587,
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 12
                                },
                                "end": {
                                  "line": 35,
                                  "column": 21
                                }
                              },
                              "name": "generator"
                            },
                            "computed": false,
                            "leadingComments": null
                          },
                          "property": {
                            "type": "MemberExpression",
                            "start": 1588,
                            "end": 1597,
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 22
                              },
                              "end": {
                                "line": 35,
                                "column": 31
                              }
                            },
                            "object": {
                              "type": "Identifier",
                              "start": 1588,
                              "end": 1592,
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 22
                                },
                                "end": {
                                  "line": 35,
                                  "column": 26
                                }
                              },
                              "name": "node"
                            },
                            "property": {
                              "type": "Identifier",
                              "start": 1593,
                              "end": 1597,
                              "loc": {
                                "start": {
                                  "line": 35,
                                  "column": 27
                                },
                                "end": {
                                  "line": 35,
                                  "column": 31
                                }
                              },
                              "name": "type"
                            },
                            "computed": false
                          },
                          "computed": true,
                          "leadingComments": null
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "start": 1599,
                            "end": 1603,
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 33
                              },
                              "end": {
                                "line": 35,
                                "column": 37
                              }
                            },
                            "name": "node"
                          },
                          {
                            "type": "Identifier",
                            "start": 1605,
                            "end": 1610,
                            "loc": {
                              "start": {
                                "line": 35,
                                "column": 39
                              },
                              "end": {
                                "line": 35,
                                "column": 44
                              }
                            },
                            "name": "state"
                          }
                        ],
                        "leadingComments": null
                      },
                      "leadingComments": [
                        {
                          "type": "CommentLine",
                          "value": " Travel through the AST node and generate the code.",
                          "start": 1512,
                          "end": 1565,
                          "loc": {
                            "start": {
                              "line": 34,
                              "column": 6
                            },
                            "end": {
                              "line": 34,
                              "column": 59
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "ReturnStatement",
                      "start": 1620,
                      "end": 1640,
                      "loc": {
                        "start": {
                          "line": 37,
                          "column": 6
                        },
                        "end": {
                          "line": 37,
                          "column": 26
                        }
                      },
                      "argument": {
                        "type": "MemberExpression",
                        "start": 1627,
                        "end": 1639,
                        "loc": {
                          "start": {
                            "line": 37,
                            "column": 13
                          },
                          "end": {
                            "line": 37,
                            "column": 25
                          }
                        },
                        "object": {
                          "type": "Identifier",
                          "start": 1627,
                          "end": 1632,
                          "loc": {
                            "start": {
                              "line": 37,
                              "column": 13
                            },
                            "end": {
                              "line": 37,
                              "column": 18
                            }
                          },
                          "name": "state"
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1633,
                          "end": 1639,
                          "loc": {
                            "start": {
                              "line": 37,
                              "column": 19
                            },
                            "end": {
                              "line": 37,
                              "column": 25
                            }
                          },
                          "name": "output"
                        },
                        "computed": false
                      }
                    }
                  ],
                  "directives": []
                },
                "leadingComments": [
                  {
                    "type": "CommentBlock",
                    "value": "*\n    * ASTParser returns an instance of ParserData containing a string representing the rendered code of the provided AST\n    * `node`. In addition Halstead operators and operands are available via ParserData.\n    *\n    * @param {object}      node - An ESTree or Babylon AST node.\n    *\n    * @param {object}      options - Optional parameters for source code formatting.\n    * @property {string}   indent - A string to use for indentation (defaults to `\\t`)\n    * @property {string}   lineEnd - A string to use for line endings (defaults to `\\n`)\n    * @property {number}   startingIndentLevel - indent level to start from (default to `0`)\n    *\n    * @returns {ASTData}\n    ",
                    "start": 744,
                    "end": 1425,
                    "loc": {
                      "start": {
                        "line": 17,
                        "column": 3
                      },
                      "end": {
                        "line": 29,
                        "column": 6
                      }
                    }
                  }
                ]
              }
            ]
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * `ASTParser` is a fork of `Astring`. The original author is David Bonnet and `Astring` is released under an MIT\n * license. This version is only available by the MPLv2.0 license. Please see the original source.\n * @see  https://github.com/davidbonnet/astring.git\n *\n * Eventually once ASTParser is feature complete for Babylon & ESTree AST and further modularized it will be released\n * as a separate NPM module supporting plugins.\n *\n * Please note that not all of the Babylon AST nodes are currently supported. `astParser` is currently only used by\n * `typhonjs-escomplex` for realizing computed method names and associated Halstead operands and operators.\n *\n ",
              "start": 36,
              "end": 707,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 14,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * `ASTParser` is a fork of `Astring`. The original author is David Bonnet and `Astring` is released under an MIT\n * license. This version is only available by the MPLv2.0 license. Please see the original source.\n * @see  https://github.com/davidbonnet/astring.git\n *\n * Eventually once ASTParser is feature complete for Babylon & ESTree AST and further modularized it will be released\n * as a separate NPM module supporting plugins.\n *\n * Please note that not all of the Babylon AST nodes are currently supported. `astParser` is currently only used by\n * `typhonjs-escomplex` for realizing computed method names and associated Halstead operands and operators.\n *\n ",
            "start": 36,
            "end": 707,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * `ASTParser` is a fork of `Astring`. The original author is David Bonnet and `Astring` is released under an MIT\n * license. This version is only available by the MPLv2.0 license. Please see the original source.\n * @see  https://github.com/davidbonnet/astring.git\n *\n * Eventually once ASTParser is feature complete for Babylon & ESTree AST and further modularized it will be released\n * as a separate NPM module supporting plugins.\n *\n * Please note that not all of the Babylon AST nodes are currently supported. `astParser` is currently only used by\n * `typhonjs-escomplex` for realizing computed method names and associated Halstead operands and operators.\n *\n ",
      "start": 36,
      "end": 707,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n    * ASTParser returns an instance of ParserData containing a string representing the rendered code of the provided AST\n    * `node`. In addition Halstead operators and operands are available via ParserData.\n    *\n    * @param {object}      node - An ESTree or Babylon AST node.\n    *\n    * @param {object}      options - Optional parameters for source code formatting.\n    * @property {string}   indent - A string to use for indentation (defaults to `\\t`)\n    * @property {string}   lineEnd - A string to use for line endings (defaults to `\\n`)\n    * @property {number}   startingIndentLevel - indent level to start from (default to `0`)\n    *\n    * @returns {ASTData}\n    ",
      "start": 744,
      "end": 1425,
      "loc": {
        "start": {
          "line": 17,
          "column": 3
        },
        "end": {
          "line": 29,
          "column": 6
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Travel through the AST node and generate the code.",
      "start": 1512,
      "end": 1565,
      "loc": {
        "start": {
          "line": 34,
          "column": 6
        },
        "end": {
          "line": 34,
          "column": 59
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ASTState",
      "start": 7,
      "end": 15,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 16,
      "end": 20,
      "loc": {
        "start": {
          "line": 1,
          "column": 16
        },
        "end": {
          "line": 1,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./ASTState",
      "start": 21,
      "end": 33,
      "loc": {
        "start": {
          "line": 1,
          "column": 21
        },
        "end": {
          "line": 1,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 33,
      "end": 34,
      "loc": {
        "start": {
          "line": 1,
          "column": 33
        },
        "end": {
          "line": 1,
          "column": 34
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * `ASTParser` is a fork of `Astring`. The original author is David Bonnet and `Astring` is released under an MIT\n * license. This version is only available by the MPLv2.0 license. Please see the original source.\n * @see  https://github.com/davidbonnet/astring.git\n *\n * Eventually once ASTParser is feature complete for Babylon & ESTree AST and further modularized it will be released\n * as a separate NPM module supporting plugins.\n *\n * Please note that not all of the Babylon AST nodes are currently supported. `astParser` is currently only used by\n * `typhonjs-escomplex` for realizing computed method names and associated Halstead operands and operators.\n *\n ",
      "start": 36,
      "end": 707,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 708,
      "end": 714,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 715,
      "end": 722,
      "loc": {
        "start": {
          "line": 15,
          "column": 7
        },
        "end": {
          "line": 15,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 723,
      "end": 728,
      "loc": {
        "start": {
          "line": 15,
          "column": 15
        },
        "end": {
          "line": 15,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ASTParser",
      "start": 729,
      "end": 738,
      "loc": {
        "start": {
          "line": 15,
          "column": 21
        },
        "end": {
          "line": 15,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 739,
      "end": 740,
      "loc": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n    * ASTParser returns an instance of ParserData containing a string representing the rendered code of the provided AST\n    * `node`. In addition Halstead operators and operands are available via ParserData.\n    *\n    * @param {object}      node - An ESTree or Babylon AST node.\n    *\n    * @param {object}      options - Optional parameters for source code formatting.\n    * @property {string}   indent - A string to use for indentation (defaults to `\\t`)\n    * @property {string}   lineEnd - A string to use for line endings (defaults to `\\n`)\n    * @property {number}   startingIndentLevel - indent level to start from (default to `0`)\n    *\n    * @returns {ASTData}\n    ",
      "start": 744,
      "end": 1425,
      "loc": {
        "start": {
          "line": 17,
          "column": 3
        },
        "end": {
          "line": 29,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "static",
      "start": 1429,
      "end": 1435,
      "loc": {
        "start": {
          "line": 30,
          "column": 3
        },
        "end": {
          "line": 30,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "parse",
      "start": 1436,
      "end": 1441,
      "loc": {
        "start": {
          "line": 30,
          "column": 10
        },
        "end": {
          "line": 30,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1441,
      "end": 1442,
      "loc": {
        "start": {
          "line": 30,
          "column": 15
        },
        "end": {
          "line": 30,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "node",
      "start": 1442,
      "end": 1446,
      "loc": {
        "start": {
          "line": 30,
          "column": 16
        },
        "end": {
          "line": 30,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1446,
      "end": 1447,
      "loc": {
        "start": {
          "line": 30,
          "column": 20
        },
        "end": {
          "line": 30,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "options",
      "start": 1448,
      "end": 1455,
      "loc": {
        "start": {
          "line": 30,
          "column": 22
        },
        "end": {
          "line": 30,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1455,
      "end": 1456,
      "loc": {
        "start": {
          "line": 30,
          "column": 29
        },
        "end": {
          "line": 30,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1460,
      "end": 1461,
      "loc": {
        "start": {
          "line": 31,
          "column": 3
        },
        "end": {
          "line": 31,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 1468,
      "end": 1473,
      "loc": {
        "start": {
          "line": 32,
          "column": 6
        },
        "end": {
          "line": 32,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "state",
      "start": 1474,
      "end": 1479,
      "loc": {
        "start": {
          "line": 32,
          "column": 12
        },
        "end": {
          "line": 32,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1480,
      "end": 1481,
      "loc": {
        "start": {
          "line": 32,
          "column": 18
        },
        "end": {
          "line": 32,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "new",
        "keyword": "new",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "new",
      "start": 1482,
      "end": 1485,
      "loc": {
        "start": {
          "line": 32,
          "column": 20
        },
        "end": {
          "line": 32,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ASTState",
      "start": 1486,
      "end": 1494,
      "loc": {
        "start": {
          "line": 32,
          "column": 24
        },
        "end": {
          "line": 32,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1494,
      "end": 1495,
      "loc": {
        "start": {
          "line": 32,
          "column": 32
        },
        "end": {
          "line": 32,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "options",
      "start": 1495,
      "end": 1502,
      "loc": {
        "start": {
          "line": 32,
          "column": 33
        },
        "end": {
          "line": 32,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1502,
      "end": 1503,
      "loc": {
        "start": {
          "line": 32,
          "column": 40
        },
        "end": {
          "line": 32,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1503,
      "end": 1504,
      "loc": {
        "start": {
          "line": 32,
          "column": 41
        },
        "end": {
          "line": 32,
          "column": 42
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " Travel through the AST node and generate the code.",
      "start": 1512,
      "end": 1565,
      "loc": {
        "start": {
          "line": 34,
          "column": 6
        },
        "end": {
          "line": 34,
          "column": 59
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "state",
      "start": 1572,
      "end": 1577,
      "loc": {
        "start": {
          "line": 35,
          "column": 6
        },
        "end": {
          "line": 35,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1577,
      "end": 1578,
      "loc": {
        "start": {
          "line": 35,
          "column": 11
        },
        "end": {
          "line": 35,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "generator",
      "start": 1578,
      "end": 1587,
      "loc": {
        "start": {
          "line": 35,
          "column": 12
        },
        "end": {
          "line": 35,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1587,
      "end": 1588,
      "loc": {
        "start": {
          "line": 35,
          "column": 21
        },
        "end": {
          "line": 35,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "node",
      "start": 1588,
      "end": 1592,
      "loc": {
        "start": {
          "line": 35,
          "column": 22
        },
        "end": {
          "line": 35,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1592,
      "end": 1593,
      "loc": {
        "start": {
          "line": 35,
          "column": 26
        },
        "end": {
          "line": 35,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "type",
      "start": 1593,
      "end": 1597,
      "loc": {
        "start": {
          "line": 35,
          "column": 27
        },
        "end": {
          "line": 35,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1597,
      "end": 1598,
      "loc": {
        "start": {
          "line": 35,
          "column": 31
        },
        "end": {
          "line": 35,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1598,
      "end": 1599,
      "loc": {
        "start": {
          "line": 35,
          "column": 32
        },
        "end": {
          "line": 35,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "node",
      "start": 1599,
      "end": 1603,
      "loc": {
        "start": {
          "line": 35,
          "column": 33
        },
        "end": {
          "line": 35,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1603,
      "end": 1604,
      "loc": {
        "start": {
          "line": 35,
          "column": 37
        },
        "end": {
          "line": 35,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "state",
      "start": 1605,
      "end": 1610,
      "loc": {
        "start": {
          "line": 35,
          "column": 39
        },
        "end": {
          "line": 35,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1610,
      "end": 1611,
      "loc": {
        "start": {
          "line": 35,
          "column": 44
        },
        "end": {
          "line": 35,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1611,
      "end": 1612,
      "loc": {
        "start": {
          "line": 35,
          "column": 45
        },
        "end": {
          "line": 35,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1620,
      "end": 1626,
      "loc": {
        "start": {
          "line": 37,
          "column": 6
        },
        "end": {
          "line": 37,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "state",
      "start": 1627,
      "end": 1632,
      "loc": {
        "start": {
          "line": 37,
          "column": 13
        },
        "end": {
          "line": 37,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1632,
      "end": 1633,
      "loc": {
        "start": {
          "line": 37,
          "column": 18
        },
        "end": {
          "line": 37,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "output",
      "start": 1633,
      "end": 1639,
      "loc": {
        "start": {
          "line": 37,
          "column": 19
        },
        "end": {
          "line": 37,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1639,
      "end": 1640,
      "loc": {
        "start": {
          "line": 37,
          "column": 25
        },
        "end": {
          "line": 37,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1644,
      "end": 1645,
      "loc": {
        "start": {
          "line": 38,
          "column": 3
        },
        "end": {
          "line": 38,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1646,
      "end": 1647,
      "loc": {
        "start": {
          "line": 39,
          "column": 0
        },
        "end": {
          "line": 39,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1648,
      "end": 1648,
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 40,
          "column": 0
        }
      }
    }
  ]
}