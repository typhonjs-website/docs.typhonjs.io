{
  "type": "File",
  "start": 0,
  "end": 2624,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 59,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 2624,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 59,
        "column": 0
      }
    },
    "sourceType": "script",
    "body": [],
    "directives": [],
    "leadingComments": null,
    "innerComments": [
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {object} PluginConfig\n *\n * @property {string}   name - Defines the name of the plugin; if no `target` entry is present the name\n *                             doubles as the target (please see target).\n *\n * @property {string}   [target] - Defines the target NPM module to load or defines a local file (full\n *                                 path or relative to current working directory to load.\n *\n * @property {string}   [instance] - Defines an existing object instance to use as the plugin.\n *\n * @property {object}   [options] - Defines an object of options for the plugin.\n ",
        "start": 0,
        "end": 600,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {object} PluginData\n *\n * @property {string}   name - The name of the plugin.\n *\n * @property {string}   scopedName - The name of the plugin with the plugin managers event prepend string.\n *\n * @property {string}   target - Defines the target NPM module to loaded or defines a local file (full\n *                               path or relative to current working directory to load.\n *\n * @property {string}   targetEscaped - Provides the target, but properly escaped for RegExp usage.\n *\n * @property {string}   type - The type of plugin: `instance`, `require-module`, or `require-path`.\n *\n * @property {object}   options - Defines an object of options for the plugin.\n *\n * @property {string}   managerEventPrepend - The plugin manager event prepend string.\n ",
        "start": 602,
        "end": 1381,
        "loc": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @typedef {object} PluginManagerOptions\n *\n * @property {boolean}   [pluginsEnabled] - If false all plugins are disabled.\n *\n * @property {boolean}   [noEventAdd] - If true this prevents plugins from being added by `plugin:add` and\n *                                      `plugin:add:all` events forcing direct method invocation for addition.\n *\n * @property {boolean}   [noEventRemoval] - If true this prevents plugins from being removed by `plugin:remove` and\n *                                          `plugin:remove:all` events forcing direct method invocation for removal.\n *\n * @property {boolean}   [throwNoMethod] - If true then when a method fails to be invoked by any plugin an exception\n *                                         will be thrown.\n *\n * @property {boolean}   [throwNoPlugin] - If true then when no plugin is matched to be invoked an exception will be\n *                                         thrown.\n ",
        "start": 1383,
        "end": 2321,
        "loc": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 50,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {EventProxy} https://docs.typhonjs.io/typhonjs-backbone-esnext/backbone-esnext-events/class/src/EventProxy.js~EventProxy.html\n ",
        "start": 2323,
        "end": 2469,
        "loc": {
          "start": {
            "line": 52,
            "column": 0
          },
          "end": {
            "line": 54,
            "column": 3
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "*\n * @external {TyphonEvents} https://docs.typhonjs.io/typhonjs-backbone-esnext/backbone-esnext-events/class/src/TyphonEvents.js~TyphonEvents.html\n ",
        "start": 2471,
        "end": 2623,
        "loc": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 58,
            "column": 3
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {object} PluginConfig\n *\n * @property {string}   name - Defines the name of the plugin; if no `target` entry is present the name\n *                             doubles as the target (please see target).\n *\n * @property {string}   [target] - Defines the target NPM module to load or defines a local file (full\n *                                 path or relative to current working directory to load.\n *\n * @property {string}   [instance] - Defines an existing object instance to use as the plugin.\n *\n * @property {object}   [options] - Defines an object of options for the plugin.\n ",
      "start": 0,
      "end": 600,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {object} PluginData\n *\n * @property {string}   name - The name of the plugin.\n *\n * @property {string}   scopedName - The name of the plugin with the plugin managers event prepend string.\n *\n * @property {string}   target - Defines the target NPM module to loaded or defines a local file (full\n *                               path or relative to current working directory to load.\n *\n * @property {string}   targetEscaped - Provides the target, but properly escaped for RegExp usage.\n *\n * @property {string}   type - The type of plugin: `instance`, `require-module`, or `require-path`.\n *\n * @property {object}   options - Defines an object of options for the plugin.\n *\n * @property {string}   managerEventPrepend - The plugin manager event prepend string.\n ",
      "start": 602,
      "end": 1381,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 32,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {object} PluginManagerOptions\n *\n * @property {boolean}   [pluginsEnabled] - If false all plugins are disabled.\n *\n * @property {boolean}   [noEventAdd] - If true this prevents plugins from being added by `plugin:add` and\n *                                      `plugin:add:all` events forcing direct method invocation for addition.\n *\n * @property {boolean}   [noEventRemoval] - If true this prevents plugins from being removed by `plugin:remove` and\n *                                          `plugin:remove:all` events forcing direct method invocation for removal.\n *\n * @property {boolean}   [throwNoMethod] - If true then when a method fails to be invoked by any plugin an exception\n *                                         will be thrown.\n *\n * @property {boolean}   [throwNoPlugin] - If true then when no plugin is matched to be invoked an exception will be\n *                                         thrown.\n ",
      "start": 1383,
      "end": 2321,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {EventProxy} https://docs.typhonjs.io/typhonjs-backbone-esnext/backbone-esnext-events/class/src/EventProxy.js~EventProxy.html\n ",
      "start": 2323,
      "end": 2469,
      "loc": {
        "start": {
          "line": 52,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TyphonEvents} https://docs.typhonjs.io/typhonjs-backbone-esnext/backbone-esnext-events/class/src/TyphonEvents.js~TyphonEvents.html\n ",
      "start": 2471,
      "end": 2623,
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {object} PluginConfig\n *\n * @property {string}   name - Defines the name of the plugin; if no `target` entry is present the name\n *                             doubles as the target (please see target).\n *\n * @property {string}   [target] - Defines the target NPM module to load or defines a local file (full\n *                                 path or relative to current working directory to load.\n *\n * @property {string}   [instance] - Defines an existing object instance to use as the plugin.\n *\n * @property {object}   [options] - Defines an object of options for the plugin.\n ",
      "start": 0,
      "end": 600,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {object} PluginData\n *\n * @property {string}   name - The name of the plugin.\n *\n * @property {string}   scopedName - The name of the plugin with the plugin managers event prepend string.\n *\n * @property {string}   target - Defines the target NPM module to loaded or defines a local file (full\n *                               path or relative to current working directory to load.\n *\n * @property {string}   targetEscaped - Provides the target, but properly escaped for RegExp usage.\n *\n * @property {string}   type - The type of plugin: `instance`, `require-module`, or `require-path`.\n *\n * @property {object}   options - Defines an object of options for the plugin.\n *\n * @property {string}   managerEventPrepend - The plugin manager event prepend string.\n ",
      "start": 602,
      "end": 1381,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 32,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @typedef {object} PluginManagerOptions\n *\n * @property {boolean}   [pluginsEnabled] - If false all plugins are disabled.\n *\n * @property {boolean}   [noEventAdd] - If true this prevents plugins from being added by `plugin:add` and\n *                                      `plugin:add:all` events forcing direct method invocation for addition.\n *\n * @property {boolean}   [noEventRemoval] - If true this prevents plugins from being removed by `plugin:remove` and\n *                                          `plugin:remove:all` events forcing direct method invocation for removal.\n *\n * @property {boolean}   [throwNoMethod] - If true then when a method fails to be invoked by any plugin an exception\n *                                         will be thrown.\n *\n * @property {boolean}   [throwNoPlugin] - If true then when no plugin is matched to be invoked an exception will be\n *                                         thrown.\n ",
      "start": 1383,
      "end": 2321,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 50,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {EventProxy} https://docs.typhonjs.io/typhonjs-backbone-esnext/backbone-esnext-events/class/src/EventProxy.js~EventProxy.html\n ",
      "start": 2323,
      "end": 2469,
      "loc": {
        "start": {
          "line": 52,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @external {TyphonEvents} https://docs.typhonjs.io/typhonjs-backbone-esnext/backbone-esnext-events/class/src/TyphonEvents.js~TyphonEvents.html\n ",
      "start": 2471,
      "end": 2623,
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 58,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2624,
      "end": 2624,
      "loc": {
        "start": {
          "line": 59,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 0
        }
      }
    }
  ]
}